<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Shimmer</title>
  
  <subtitle>向着未来前进!</subtitle>
  <link href="https://gitee.com/shimmer612/myBlog/atom.xml" rel="self"/>
  
  <link href="https://gitee.com/shimmer612/myBlog/"/>
  <updated>2023-06-26T05:03:04.444Z</updated>
  <id>https://gitee.com/shimmer612/myBlog/</id>
  
  <author>
    <name>Shimmer</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Nest学习记录（1）</title>
    <link href="https://gitee.com/shimmer612/myBlog/2023/06/26/2023-06-26-Nest%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%881%EF%BC%89/"/>
    <id>https://gitee.com/shimmer612/myBlog/2023/06/26/2023-06-26-Nest%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%881%EF%BC%89/</id>
    <published>2023-06-25T16:00:00.000Z</published>
    <updated>2023-06-26T05:03:04.444Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Nest学习记录（1）"><a href="#Nest学习记录（1）" class="headerlink" title="Nest学习记录（1）"></a>Nest学习记录（1）</h2><h4 id="1、nest-cli-的安装升级创建项目"><a href="#1、nest-cli-的安装升级创建项目" class="headerlink" title="1、nest cli 的安装升级创建项目"></a>1、nest cli 的安装升级创建项目</h4><p><strong>安装到全局</strong></p><p><code>npm install -g @nestjs/cli</code></p><p><strong>升级</strong></p><p><code>npm update -g @nestjs/cli</code></p><p><strong>创建项目</strong></p><p><code>nest new 项目名</code></p><h4 id="2、nest-cli常用命令"><a href="#2、nest-cli常用命令" class="headerlink" title="2、nest cli常用命令"></a>2、nest cli常用命令</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">// 新建项目</span><br><span class="line">nest new xxx</span><br><span class="line">// 查看命令有哪些选项</span><br><span class="line">nest xxx <span class="literal">-h</span></span><br><span class="line">// 新建代码片段比如 controller、service、module 等。</span><br><span class="line">// xxx文件夹名称</span><br><span class="line">nest generate module xxx</span><br><span class="line">nest generate controller xxx</span><br><span class="line">nest generate service xxx</span><br><span class="line">// 也可以一下子生成整个模板</span><br><span class="line">nest generate resource xxx</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可以选择生成那种风格的Api，nest支持http,websocket,graphql等风格的api。</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1480b030b48b4517b9ee38e8bda06e81~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp"></p><p>是否生成CRUD（增删改查）代码</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/90edc9b8005547cb9d7c6e10e8f2b73a~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp"></p><p><strong>启动服务和打包</strong></p><p>启动：<code>nest start</code></p><p>打包：<code>nest build</code></p><p>会在dist目录生成编译后的代码</p><p> <strong>默认是 tsc 编译，也可以切换成 webpack。</strong> </p><p>用tsc打包会对每个文件进行编译</p><p><code>nest build --tsc</code></p><p>webpack只生成一个main.js文件</p><p><code>nest build --webpack</code></p><p><strong>查看项目信息</strong></p><p> 这个就是查看项目信息的，包括系统信息、 node、npm 和依赖版本 </p><p><code>nest info</code></p><h4 id="3、五种Http数据传输方式"><a href="#3、五种Http数据传输方式" class="headerlink" title="3、五种Http数据传输方式"></a>3、五种Http数据传输方式</h4><ol><li>url param  <strong>直接在url地址后面get请求</strong></li><li>query  <strong>url  ‘?’后面拼接参数get请求</strong></li><li>form-urlencoded <strong>post请求参数</strong></li><li>form-data   <strong>传输文件</strong></li><li>json  <strong>post请求json格式</strong></li></ol><p><strong>1、url param</strong></p><p>参数直接在url当中</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//123就是参数</span></span><br><span class="line">http:<span class="comment">//localhost:3000/aaa/123</span></span><br></pre></td></tr></table></figure><p><strong>2、query</strong></p><p>url中使用？分割后面就是参数，</p><p>其中非英文字符和中文字符会转码。</p><p>可以使用 encodeURIComponent  来编码</p><p>axios自带编码，不需要手动转</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// name和age是参数，值为123和456</span></span><br><span class="line">http:<span class="comment">//localhost:3000/aaa?name=123&amp;age=456</span></span><br></pre></td></tr></table></figure><p><strong>3、form-urlencoded</strong></p><p>参数放在了body中</p><p>要指定<code>content-type = application/x-www-form-urlencoded </code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">axios.defaults.headers.post[<span class="string">&#x27;Content-Type&#x27;</span>] =</span><br><span class="line">    <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">postBody</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">await</span> axios.post(<span class="string">&#x27;/api/aaa&#x27;</span>, &#123;</span><br><span class="line">      name: <span class="string">&#x27;王五&#x27;</span>,</span><br><span class="line">      age: <span class="number">18</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;form-urlencoded&#x27;</span>, res);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  postBody();</span><br></pre></td></tr></table></figure><p>[<img src="https://s1.ax1x.com/2023/06/26/pCUex58.md.png" alt="pCUex58.md.png" style="zoom:50%;" /></p><p><strong>4、form-data</strong></p><p>用来传输文件和别的参数</p><p>要指定<code>content-type = multipart/form-data </code></p><p>使用分隔符boundary来分割参数。如下</p><p><img src="https://s1.ax1x.com/2023/06/26/pCUuCBn.png" alt="pCUuCBn.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- axios cdn --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/axios/dist/axios.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello World<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;fileInput&quot;</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">multiple</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;fileData()&quot;</span>&gt;</span>点击<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="comment">// file</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> fileInput = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;fileInput&#x27;</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">fileData</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">const</span> data = <span class="keyword">new</span> FormData();</span></span><br><span class="line"><span class="javascript">      data.set(<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;吕布&#x27;</span>);</span></span><br><span class="line"><span class="javascript">      data.set(<span class="string">&#x27;age&#x27;</span>, <span class="number">38</span>);</span></span><br><span class="line"><span class="javascript">      data.set(<span class="string">&#x27;file1&#x27;</span>, fileInput.files[<span class="number">0</span>]);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">      <span class="keyword">const</span> res = <span class="keyword">await</span> axios(&#123;</span></span><br><span class="line"><span class="javascript">        method: <span class="string">&#x27;post&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        url: <span class="string">&#x27;/api/aaa/file&#x27;</span>,</span></span><br><span class="line">        data,</span><br><span class="line"><span class="javascript">        headers: &#123; <span class="string">&#x27;content-type&#x27;</span>: <span class="string">&#x27;multipart/form-data&#x27;</span> &#125;,</span></span><br><span class="line">      &#125;);</span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(<span class="string">&#x27;res: &#x27;</span>, res);</span></span><br><span class="line">    &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>5、json</strong></p><p>上面几种都需要编码，转码</p><p>json就很好的解决了上面的问题</p><p>只需要指定<code>content-type=application/json</code>就行如下</p><p><img src="https://s1.ax1x.com/2023/06/26/pCUuG9O.png" alt="pCUuG9O.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- axios cdn --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/axios/dist/axios.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello World<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">postJsonBody</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">const</span> res = <span class="keyword">await</span> axios(&#123;</span></span><br><span class="line"><span class="javascript">        method: <span class="string">&#x27;post&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        url: <span class="string">&#x27;/api/aaa&#x27;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="javascript">          name: <span class="string">&#x27;王五&#x27;</span>,</span></span><br><span class="line">          age: 18,</span><br><span class="line">        &#125;,</span><br><span class="line">        headers: &#123;</span><br><span class="line"><span class="javascript">          <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>,</span></span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;);</span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(<span class="string">&#x27;json&#x27;</span>, res);</span></span><br><span class="line">    &#125;</span><br><span class="line">    postJsonBody();</span><br><span class="line">   </span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="4、五种传输方式，接口实现"><a href="#4、五种传输方式，接口实现" class="headerlink" title="4、五种传输方式，接口实现"></a>4、五种传输方式，接口实现</h4><p>首先通过<code>nest generate controller aaa</code>新建模板代码，</p><p>会自动在<code>app.module.ts</code>中引入该contorller</p><p>form-data上传文件需要<code>npm i -D @types/multer</code>,引入相关类型声明</p><p><strong>contorller代码</strong></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  Body,</span><br><span class="line">  Controller,</span><br><span class="line">  Param,</span><br><span class="line">  Post,</span><br><span class="line">  UploadedFiles,</span><br><span class="line">  UseInterceptors,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&#x27;@nestjs/common&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Get, Query &#125; <span class="keyword">from</span> <span class="string">&#x27;@nestjs/common&#x27;</span>;</span><br><span class="line"><span class="comment">// 对于放在body中的参数，要使用@Body新建dto文件，nest会解析body，注入到dto对象中</span></span><br><span class="line"><span class="keyword">import</span> &#123; CreateAaaDto &#125; <span class="keyword">from</span> <span class="string">&#x27;./dto/create_aaa.dto&#x27;</span>;</span><br><span class="line"><span class="comment">// 多文件上传要使用下面的拦截器 AnyFilesInterceptor</span></span><br><span class="line"><span class="comment">// 单文件直接使用FileInterceptor就行</span></span><br><span class="line"><span class="keyword">import</span> &#123; AnyFilesInterceptor &#125; <span class="keyword">from</span> <span class="string">&#x27;@nestjs/platform-express&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//请求的默认接口app/aaa</span></span><br><span class="line"><span class="meta">@Controller</span>(<span class="string">&#x27;api/aaa&#x27;</span>)</span><br><span class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">AaaController</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Get</span>(<span class="string">&#x27;:id&#x27;</span>)</span><br><span class="line">  <span class="function"><span class="title">urlParam</span>(<span class="params"><span class="meta">@Param</span>(<span class="string">&#x27;id&#x27;</span>) id: <span class="string">&#x27;string&#x27;</span></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">`the urlParam is: <span class="subst">$&#123;id&#125;</span>`</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Get</span>(<span class="string">&#x27;find&#x27;</span>)</span><br><span class="line">  <span class="function"><span class="title">getName</span>(<span class="params"><span class="meta">@Query</span>(<span class="string">&#x27;name&#x27;</span>) name: <span class="built_in">string</span></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">`the queryParam is: name=<span class="subst">$&#123;name&#125;</span>`</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Post</span>()</span><br><span class="line">  <span class="function"><span class="title">body</span>(<span class="params"><span class="meta">@Body</span>() CreateAaaDto: CreateAaaDto</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">`the body is: <span class="subst">$&#123;<span class="built_in">JSON</span>.stringify(CreateAaaDto)&#125;</span>`</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// uploads文件上传后保存的目录</span></span><br><span class="line">  <span class="comment">// body中别的数据，还是用body接收</span></span><br><span class="line">  <span class="meta">@Post</span>(<span class="string">&#x27;file&#x27;</span>)</span><br><span class="line">  <span class="meta">@UseInterceptors</span>(AnyFilesInterceptor(&#123; <span class="attr">dest</span>: <span class="string">&#x27;uploads/&#x27;</span> &#125;))</span><br><span class="line">  bodyFile(</span><br><span class="line">    <span class="meta">@Body</span>() CreateAaaDto: CreateAaaDto,</span><br><span class="line">    <span class="meta">@UploadedFiles</span>() files: <span class="built_in">Array</span>&lt;Express.Multer.File&gt;,</span><br><span class="line">  ) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;files: &#x27;</span>, files);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">`files: <span class="subst">$&#123;<span class="built_in">JSON</span>.stringify(CreateAaaDto)&#125;</span>`</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>dto代码</p><p> <strong>就是用于封装传输的数据的对象</strong> </p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">CreateAaaDto</span> </span>&#123;</span><br><span class="line">  name: <span class="built_in">string</span>;</span><br><span class="line">  age: <span class="built_in">number</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Nest学习记录（1）&quot;&gt;&lt;a href=&quot;#Nest学习记录（1）&quot; class=&quot;headerlink&quot; title=&quot;Nest学习记录（1）&quot;&gt;&lt;/a&gt;Nest学习记录（1）&lt;/h2&gt;&lt;h4 id=&quot;1、nest-cli-的安装升级创建项目&quot;&gt;&lt;a href</summary>
      
    
    
    
    
    <category term="nest" scheme="https://gitee.com/shimmer612/myBlog/tags/nest/"/>
    
  </entry>
  
  <entry>
    <title>React Native 多行展开收起功能</title>
    <link href="https://gitee.com/shimmer612/myBlog/2023/06/16/2023-06-16-React%20Native%20%E5%A4%9A%E8%A1%8C%E5%B1%95%E5%BC%80%E6%94%B6%E8%B5%B7%E5%8A%9F%E8%83%BD/"/>
    <id>https://gitee.com/shimmer612/myBlog/2023/06/16/2023-06-16-React%20Native%20%E5%A4%9A%E8%A1%8C%E5%B1%95%E5%BC%80%E6%94%B6%E8%B5%B7%E5%8A%9F%E8%83%BD/</id>
    <published>2023-06-15T16:00:00.000Z</published>
    <updated>2023-06-26T05:03:22.445Z</updated>
    
    <content type="html"><![CDATA[<h3 id="React-Native-多行展开收起功能"><a href="#React-Native-多行展开收起功能" class="headerlink" title="React Native 多行展开收起功能"></a>React Native 多行展开收起功能</h3><h4 id="1、前言"><a href="#1、前言" class="headerlink" title="1、前言"></a>1、前言</h4><p>对文章可以添加标签，在目录页面，可以显示该标签。宽度不满一行的直接显示</p><p>宽度超过一行的，显示展开按钮。点击展开按钮显示全部标签，加收起按钮。</p><p>效果如下：</p><p><img src="https://s1.ax1x.com/2023/06/16/pCM7dTx.png" alt="pCM7dTx.png"></p><p>一开始是准备固定高度，flex-wrap展示，点击展开取消固定高度。而且展开按钮不能直接跟在标签后面。而且不同的设备分辨率不一样。展示也有问题。</p><h4 id="2、解决办法"><a href="#2、解决办法" class="headerlink" title="2、解决办法"></a>2、解决办法</h4><p>最后是使用<code>Text</code>标签的<code>numberOfLines</code>加<code>ellipsizeMode=&quot;clip&quot;</code>来实现。</p><p>一开始，每个<code>item</code>有个<code>numberOfLines</code>属性默认是<code>undefind</code>。</p><p>通过<code>onLayout</code>事件获取第一次渲染的高度。</p><p>然后记下来第一次渲染的高度，设置<code>numberOfLines</code>值为1，</p><p>再次渲染，比较前后的高度。如果第一次比第二次高，就表明超过一行，就设置<code>expand</code>为<code>true</code>，展示，“展开“按钮。点击展开设置<code>numberOfLines</code>值为999。同时记下来标签的数组的长度，点击的时候标签的长度等于记下来的长度就添加一个收起。</p><p>代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// height 是第一次渲染的高度</span></span><br><span class="line"><span class="comment">// expand 代表是否展示展开按钮</span></span><br><span class="line"><span class="comment">// tipLength 标签没有添加收起的长度</span></span><br><span class="line"></span><br><span class="line">&#123;tips &amp;&amp; (</span><br><span class="line">                  &lt;View style=&#123;styles.literatureTagBox&#125;&gt;</span><br><span class="line">                    &lt;Text</span><br><span class="line">                      onLayout=&#123;<span class="function"><span class="params">evt</span> =&gt;</span> &#123;</span><br><span class="line">                         <span class="comment">// 因为onLayout会在数据变化的时候调用</span></span><br><span class="line">                         <span class="comment">// 为了避免重复渲染，只有第一次和第二次才会走下面的逻辑</span></span><br><span class="line">                        <span class="keyword">if</span> (</span><br><span class="line">                          numberOfLines !== <span class="literal">undefined</span> &amp;&amp;</span><br><span class="line">                          numberOfLines !== <span class="number">1</span></span><br><span class="line">                        ) &#123;</span><br><span class="line">                          <span class="keyword">return</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">const</span> heightStart = evt.nativeEvent.layout.height;</span><br><span class="line">                        <span class="keyword">if</span> (!height) &#123;</span><br><span class="line">                          arr[index].height = heightStart;</span><br><span class="line">                        &#125;</span><br><span class="line">                        arr[index].numberOfLines = <span class="number">1</span>;</span><br><span class="line">                        <span class="comment">// 当第一次的高度大于第二次的时候，说明需要换行</span></span><br><span class="line">                        <span class="keyword">if</span> (height &amp;&amp; height &gt; heightStart) &#123;</span><br><span class="line">                          arr[index].expand = <span class="literal">true</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        setDataList([...arr]);</span><br><span class="line">                      &#125;&#125;</span><br><span class="line">                      numberOfLines=&#123;numberOfLines&#125;</span><br><span class="line">                      ellipsizeMode=<span class="string">&quot;clip&quot;</span></span><br><span class="line">                      style=&#123;[styles.literatureTagView]&#125;&gt;</span><br><span class="line">                      &#123;tips.map(<span class="function">(<span class="params">tip: any</span>) =&gt;</span> (</span><br><span class="line">                        &lt;View key=&#123;tip.id&#125;&gt;</span><br><span class="line">                          &lt;Text</span><br><span class="line">                            numberOfLines=&#123;<span class="number">1</span>&#125;</span><br><span class="line">                            ellipsizeMode=<span class="string">&quot;tail&quot;</span></span><br><span class="line">                            style=&#123;styles.literatureTag&#125;</span><br><span class="line">                            onPress=&#123;<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                              <span class="keyword">if</span> (tip.id === <span class="string">&#x27;reduce&#x27;</span>) &#123;</span><br><span class="line">                                arr[index].expand = <span class="literal">true</span>;</span><br><span class="line">                                arr[index].numberOfLines = <span class="number">1</span>;</span><br><span class="line">                                setDataList([...arr]);</span><br><span class="line">                              &#125;</span><br><span class="line">                            &#125;&#125;&gt;</span><br><span class="line">                            &#123;tip?.tipName&#125;</span><br><span class="line">                          &lt;/Text&gt;</span><br><span class="line">                        &lt;/View&gt;</span><br><span class="line">                      ))&#125;</span><br><span class="line">                    &lt;/Text&gt;</span><br><span class="line">                    &#123;expand &amp;&amp; (</span><br><span class="line">                      &lt;TouchableOpacity</span><br><span class="line">                        onPress=&#123;<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                        <span class="comment">//点击展开，expand设置为false,numberOfLines为999，展示所有标签</span></span><br><span class="line">                        <span class="comment">//当标签的长度和初始长度一样时，添加收起，不一样代表添加过了不操作</span></span><br><span class="line">                          arr[index].expand = <span class="literal">false</span>;</span><br><span class="line">                          arr[index].numberOfLines = <span class="number">999</span>;</span><br><span class="line">                          <span class="keyword">if</span> (arr[index].tips.length === tipLength) &#123;</span><br><span class="line">                            arr[index].tips = [</span><br><span class="line">                              ...arr[index].tips,</span><br><span class="line">                              &#123;<span class="attr">tipName</span>: <span class="string">&#x27;收起▲&#x27;</span>, <span class="attr">id</span>: <span class="string">&#x27;reduce&#x27;</span>&#125;,</span><br><span class="line">                            ];</span><br><span class="line">                          &#125;</span><br><span class="line">                          setDataList([...arr]);</span><br><span class="line">                        &#125;&#125;</span><br><span class="line">                        style=&#123;[&#123;<span class="attr">marginTop</span>: pxToDp(<span class="number">4</span>)&#125;]&#125;&gt;</span><br><span class="line">                        &lt;Text style=&#123;[styles.literatureTagExpand]&#125;&gt;展开▼&lt;/Text&gt;</span><br><span class="line">                      &lt;/TouchableOpacity&gt;</span><br><span class="line">                    )&#125;</span><br><span class="line">                  &lt;/View&gt;</span><br><span class="line">                )&#125;</span><br><span class="line">    <span class="comment">//样式</span></span><br><span class="line"> <span class="keyword">export</span> <span class="keyword">default</span> StyleSheet.create(&#123;</span><br><span class="line">  literatureTagBox: &#123;</span><br><span class="line">    flexDirection: <span class="string">&#x27;row&#x27;</span>,</span><br><span class="line">    alignItems: <span class="string">&#x27;center&#x27;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  literatureTagView: &#123;</span><br><span class="line">    marginTop: pxToDp(<span class="number">4</span>),</span><br><span class="line">  &#125;,</span><br><span class="line">  literatureTag: &#123;</span><br><span class="line">    paddingHorizontal: pxToDp(<span class="number">4</span>),</span><br><span class="line">    borderWidth: pxToDp(<span class="number">1</span>),</span><br><span class="line">    borderColor: <span class="string">&#x27;#D2D8DF&#x27;</span>,</span><br><span class="line">    borderStyle: <span class="string">&#x27;solid&#x27;</span>,</span><br><span class="line">    borderRadius: pxToDp(<span class="number">2</span>),</span><br><span class="line">    fontWeight: <span class="string">&#x27;400&#x27;</span>,</span><br><span class="line">    textAlign: <span class="string">&#x27;center&#x27;</span>,</span><br><span class="line">    color: <span class="string">&#x27;#A2A8B5&#x27;</span>,</span><br><span class="line">    fontSize: pxToDp(<span class="number">12</span>),</span><br><span class="line">    marginRight: pxToDp(<span class="number">6</span>),</span><br><span class="line">    marginTop: pxToDp(<span class="number">4</span>),</span><br><span class="line">    height: pxToDp(<span class="number">24</span>),</span><br><span class="line">    lineHeight: pxToDp(<span class="number">22</span>),</span><br><span class="line">    maxWidth: pxToDp(<span class="number">120</span>),</span><br><span class="line">  &#125;,</span><br><span class="line">  literatureTagExpand: &#123;</span><br><span class="line">    height: pxToDp(<span class="number">24</span>),</span><br><span class="line">    paddingHorizontal: pxToDp(<span class="number">4</span>),</span><br><span class="line">    paddingVertical: pxToDp(<span class="number">2</span>),</span><br><span class="line">    borderWidth: pxToDp(<span class="number">1</span>),</span><br><span class="line">    borderColor: <span class="string">&#x27;#D2D8DF&#x27;</span>,</span><br><span class="line">    borderStyle: <span class="string">&#x27;solid&#x27;</span>,</span><br><span class="line">    borderRadius: pxToDp(<span class="number">2</span>),</span><br><span class="line">    fontWeight: <span class="string">&#x27;400&#x27;</span>,</span><br><span class="line">    textAlign: <span class="string">&#x27;center&#x27;</span>,</span><br><span class="line">    color: <span class="string">&#x27;#A2A8B5&#x27;</span>,</span><br><span class="line">    fontSize: pxToDp(<span class="number">12</span>),</span><br><span class="line">    lineHeight: pxToDp(<span class="number">22</span>),</span><br><span class="line">    marginTop: pxToDp(<span class="number">4</span>),</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;React-Native-多行展开收起功能&quot;&gt;&lt;a href=&quot;#React-Native-多行展开收起功能&quot; class=&quot;headerlink&quot; title=&quot;React Native 多行展开收起功能&quot;&gt;&lt;/a&gt;React Native 多行展开收起功能&lt;/</summary>
      
    
    
    
    
    <category term="react-native" scheme="https://gitee.com/shimmer612/myBlog/tags/react-native/"/>
    
  </entry>
  
  <entry>
    <title>useReColumnWidth自适应Table列宽hooks</title>
    <link href="https://gitee.com/shimmer612/myBlog/2023/05/17/2023-05-17-useReColumnWidth%E8%87%AA%E9%80%82%E5%BA%94Table%E5%88%97%E5%AE%BDhooks/"/>
    <id>https://gitee.com/shimmer612/myBlog/2023/05/17/2023-05-17-useReColumnWidth%E8%87%AA%E9%80%82%E5%BA%94Table%E5%88%97%E5%AE%BDhooks/</id>
    <published>2023-05-16T16:00:00.000Z</published>
    <updated>2023-05-22T07:50:38.292Z</updated>
    
    <content type="html"><![CDATA[<h2 id="useReColumnWidth自适应Table列宽hooks"><a href="#useReColumnWidth自适应Table列宽hooks" class="headerlink" title="useReColumnWidth自适应Table列宽hooks"></a>useReColumnWidth自适应Table列宽hooks</h2><h4 id="1、前言"><a href="#1、前言" class="headerlink" title="1、前言"></a>1、前言</h4><p>在使用antd中Table组件的时候，如果columns的总宽度不够容器的宽度，就会自适应，每个column的宽度会改变。</p><p>但是有的列不希望自适应，就应该展示设定的宽度。</p><p>当宽度不够撑满的时候，就让最后一列和没有设置宽度的column自适应。</p><h4 id="2、实现"><a href="#2、实现" class="headerlink" title="2、实现"></a>2、实现</h4><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * @Author: shimmer</span></span><br><span class="line"><span class="comment"> * @Date: 2023-05-17 13:26:32</span></span><br><span class="line"><span class="comment"> * @LastEditors: shimmer</span></span><br><span class="line"><span class="comment"> * @LastEditTime: 2023-05-18 08:56:12</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> &#123;useMemo&#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;useSize&#125; <span class="keyword">from</span> <span class="string">&#x27;ahooks&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> UseReColumnWidthProps &#123;</span><br><span class="line">    columns: Record&lt;<span class="built_in">string</span>:<span class="built_in">any</span>&gt;[];</span><br><span class="line">    containerRef?: <span class="built_in">any</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> useReColumnWidth = <span class="function">(<span class="params">props: UseReColumnWidthProps</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123;columns, containerRef&#125; = props;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取容器宽度</span></span><br><span class="line">    <span class="keyword">const</span> containerSize = useSize(containerRef);</span><br><span class="line">    <span class="keyword">const</span> &#123;<span class="attr">width</span>: tableWidth = <span class="number">0</span>&#125; = containerSize || &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 重新计算列宽</span></span><br><span class="line">    <span class="keyword">const</span> adaptiveColumns = useMemo(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> needAdaptiveColumnsIndex: <span class="built_in">number</span>[] = [];</span><br><span class="line">        <span class="keyword">let</span> withoutWidthColumnCount = <span class="number">0</span>;</span><br><span class="line">        columns.forEach(<span class="function">(<span class="params">&#123;width&#125;, index</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (!width) &#123;</span><br><span class="line">                needAdaptiveColumnsIndex.push(index);</span><br><span class="line">                withoutWidthColumnCount += <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">let</span> totalWidth = columns.reduce(<span class="function">(<span class="params">total, column</span>) =&gt;</span> total + <span class="built_in">parseFloat</span>(<span class="built_in">String</span>(column.width || <span class="number">0</span>)), <span class="number">0</span>);</span><br><span class="line">        <span class="comment">// columns总宽度&lt;容器宽度</span></span><br><span class="line">        <span class="keyword">if</span> (!withoutWidthColumnCount &amp;&amp; tableWidth &amp;&amp; totalWidth &lt; tableWidth) &#123;</span><br><span class="line">            <span class="comment">// 最后一列需要自适应</span></span><br><span class="line">            needAdaptiveColumnsIndex.push(columns.length - <span class="number">1</span>);</span><br><span class="line">            withoutWidthColumnCount += <span class="number">1</span>;</span><br><span class="line">            <span class="comment">// 排除最后一列，重新计算</span></span><br><span class="line">            totalWidth = columns.reduce(<span class="function">(<span class="params">total, c, i</span>) =&gt;</span> total + (i === columns.length - <span class="number">1</span> ? <span class="number">0</span> : <span class="built_in">parseFloat</span>(<span class="built_in">String</span>(c.width!))), <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// columns总宽度&gt;容器宽度不做处理</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> columns!.map(<span class="function">(<span class="params">column, index</span>) =&gt;</span> &#123;</span><br><span class="line">            column.ellipsis = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">if</span> (column.width &amp;&amp; !needAdaptiveColumnsIndex.includes(index)) &#123;</span><br><span class="line">                <span class="keyword">return</span> column;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> &#123;</span><br><span class="line">                ...column,</span><br><span class="line">                width: <span class="built_in">Math</span>.floor((tableWidth - totalWidth) / withoutWidthColumnCount),</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;, [columns, tableWidth]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        containerRef,</span><br><span class="line">        adaptiveColumns,</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> useReColumnWidth;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="3、使用"><a href="#3、使用" class="headerlink" title="3、使用"></a>3、使用</h4><p><code>containerRef</code>绑定到父元素上，或者绑定到Table上，Table要设置宽度。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">import &#123;Table&#125; from &quot;antd&quot;</span><br><span class="line">import useReColumnWidth form &quot;.&#x2F;useReColumnWidth&quot;</span><br><span class="line"></span><br><span class="line">const demo &#x3D; (&#123;columns,datasource&#125;)&#x3D;&gt;&#123;</span><br><span class="line">    </span><br><span class="line">     const &#123;adaptiveColumns,containerRef&#125; &#x3D; useReColumnWidth(&#123;columns&#125;);</span><br><span class="line">    </span><br><span class="line">    return   &lt;div ref&#x3D;&#123;containerRef&#125;&gt;                </span><br><span class="line">                  &lt;Table columns&#x3D;&#123;adaptiveColumns&#125; datasourec &#x3D; &#123;datasource&#125;&#x2F;&gt;</span><br><span class="line">              &lt;&#x2F;div&gt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;useReColumnWidth自适应Table列宽hooks&quot;&gt;&lt;a href=&quot;#useReColumnWidth自适应Table列宽hooks&quot; class=&quot;headerlink&quot; title=&quot;useReColumnWidth自适应Table列宽hook</summary>
      
    
    
    
    
    <category term="-react-hooks" scheme="https://gitee.com/shimmer612/myBlog/tags/react-hooks/"/>
    
  </entry>
  
  <entry>
    <title>设计模式：单例模式</title>
    <link href="https://gitee.com/shimmer612/myBlog/2023/02/17/2023-02-17-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%EF%BC%9A%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/"/>
    <id>https://gitee.com/shimmer612/myBlog/2023/02/17/2023-02-17-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%EF%BC%9A%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/</id>
    <published>2023-02-16T16:00:00.000Z</published>
    <updated>2023-05-22T08:07:16.646Z</updated>
    
    <content type="html"><![CDATA[<h2 id="设计模式：单例模式"><a href="#设计模式：单例模式" class="headerlink" title="设计模式：单例模式"></a>设计模式：单例模式</h2><p>  单例模式（Singleton Pattern）：创建型模式，提供了一种创建对象的最佳方式，这种模式涉及到一个单一的类，该类负责创建自己的对象，同时确保只有单个对象被创建</p><p>  在应用程序运行期间，单例模式只会在全局作用域下创建一次实例对象，让所有需要调用的地方都共享这一单例对象。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Single</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="title">show</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;我是一个单例模式。&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="function"><span class="title">getSingle</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!Single.instance) &#123;</span><br><span class="line">            Single.instance = <span class="keyword">new</span> Single();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> Single.instance</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> s1 =  Single.getSingle();</span><br><span class="line"><span class="keyword">const</span> s2 =  Single.getSingle();</span><br><span class="line"><span class="built_in">console</span>.log(s1===s2);<span class="comment">// true</span></span><br><span class="line">s1.name = <span class="string">&quot;test&quot;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;s2: &#x27;</span>, s2);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;s1: &#x27;</span>, s1);</span><br><span class="line"><span class="comment">// s2:  Single &#123; name: &#x27;test&#x27; &#125;</span></span><br><span class="line"><span class="comment">// s1:  Single &#123; name: &#x27;test&#x27; &#125;</span></span><br><span class="line">Single.getInstance  = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">     <span class="comment">// 定义自由变量instance，模拟私有变量</span></span><br><span class="line">     <span class="keyword">let</span> instance = <span class="literal">null</span></span><br><span class="line">     <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">         <span class="comment">// 判断自由变量是否为null</span></span><br><span class="line">         <span class="keyword">if</span>(!instance) &#123;</span><br><span class="line">             <span class="comment">// 如果为null则new出唯一实例</span></span><br><span class="line">             instance = <span class="keyword">new</span> Single()</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">return</span> instance</span><br><span class="line">     &#125;</span><br><span class="line">&#125;)()</span><br><span class="line"><span class="keyword">const</span> c1 = <span class="keyword">new</span> Single.getInstance();</span><br><span class="line"><span class="keyword">const</span> c2 = <span class="keyword">new</span> Single.getInstance();</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;c1===c2: &#x27;</span>, c2===c1);</span><br><span class="line"><span class="comment">// c1===c2:  true</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;设计模式：单例模式&quot;&gt;&lt;a href=&quot;#设计模式：单例模式&quot; class=&quot;headerlink&quot; title=&quot;设计模式：单例模式&quot;&gt;&lt;/a&gt;设计模式：单例模式&lt;/h2&gt;&lt;p&gt;  单例模式（Singleton Pattern）：创建型模式，提供了一种创建对象的</summary>
      
    
    
    
    
    <category term="JavaScript" scheme="https://gitee.com/shimmer612/myBlog/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>设计模式：观察者模式</title>
    <link href="https://gitee.com/shimmer612/myBlog/2023/02/16/2023-02-16-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%EF%BC%9A%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/"/>
    <id>https://gitee.com/shimmer612/myBlog/2023/02/16/2023-02-16-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%EF%BC%9A%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/</id>
    <published>2023-02-15T16:00:00.000Z</published>
    <updated>2023-05-22T08:05:48.133Z</updated>
    
    <content type="html"><![CDATA[<h2 id="设计模式：观察者模式"><a href="#设计模式：观察者模式" class="headerlink" title="设计模式：观察者模式"></a>设计模式：观察者模式</h2><p>观察者模式定义了对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都将得到通知，并自动更新</p><p>观察者模式属于行为型模式，行为型模式关注的是对象之间的通讯，观察者模式就是观察者和被观察者之间的通讯</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * @Author: zhangzhen</span></span><br><span class="line"><span class="comment"> * @Date: 2023-02-16 09:11:47</span></span><br><span class="line"><span class="comment"> * @LastEditors: zhangzhen</span></span><br><span class="line"><span class="comment"> * @LastEditTime: 2023-02-16 09:21:50</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// 观察者模式</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Subject</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.observerList = []</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 添加订阅者</span></span><br><span class="line">    <span class="function"><span class="title">addObserver</span>(<span class="params">observer</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.observerList.push(observer)</span><br><span class="line">    &#125;</span><br><span class="line">     <span class="comment">// 删除订阅者</span></span><br><span class="line">     <span class="function"><span class="title">removeObserver</span>(<span class="params">observer</span>)</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> currentIndex = <span class="built_in">this</span>.observerList.findIndex(item,item.name===observer.name)</span><br><span class="line">        <span class="built_in">this</span>.observerList.splice(currentIndex,<span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">   <span class="comment">//发布任务</span></span><br><span class="line">    <span class="function"><span class="title">sendTask</span>(<span class="params">task</span>)</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> observers = <span class="built_in">this</span>.observerList</span><br><span class="line">        observers.forEach(<span class="function"><span class="params">item</span>=&gt;</span>item.update(task))</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 订阅者</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Observer</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">name,subject</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name</span><br><span class="line">        <span class="keyword">if</span>(subject) &#123;</span><br><span class="line">            subject.addObserver(<span class="built_in">this</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="comment">// 接收订阅消息</span></span><br><span class="line">     update (task) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;我订阅了:&#x27;</span>, task);</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> subjectA = <span class="keyword">new</span> Subject()</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> observer1 = <span class="keyword">new</span> Observer(<span class="string">&quot;张三&quot;</span>,subjectA)</span><br><span class="line"></span><br><span class="line">subjectA.sendTask(<span class="string">&quot;去吃饭&quot;</span>)<span class="comment">//我订阅了: 去吃饭</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;设计模式：观察者模式&quot;&gt;&lt;a href=&quot;#设计模式：观察者模式&quot; class=&quot;headerlink&quot; title=&quot;设计模式：观察者模式&quot;&gt;&lt;/a&gt;设计模式：观察者模式&lt;/h2&gt;&lt;p&gt;观察者模式定义了对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所</summary>
      
    
    
    
    
    <category term="JavaScript" scheme="https://gitee.com/shimmer612/myBlog/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>设计模式：发布订阅模式</title>
    <link href="https://gitee.com/shimmer612/myBlog/2023/02/15/2023-02-15-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%EF%BC%9A%E5%8F%91%E5%B8%83%E8%AE%A2%E9%98%85%E6%A8%A1%E5%BC%8F/"/>
    <id>https://gitee.com/shimmer612/myBlog/2023/02/15/2023-02-15-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%EF%BC%9A%E5%8F%91%E5%B8%83%E8%AE%A2%E9%98%85%E6%A8%A1%E5%BC%8F/</id>
    <published>2023-02-14T16:00:00.000Z</published>
    <updated>2023-05-22T08:05:48.133Z</updated>
    
    <content type="html"><![CDATA[<h2 id="设计模式：发布订阅模式"><a href="#设计模式：发布订阅模式" class="headerlink" title="设计模式：发布订阅模式"></a>设计模式：发布订阅模式</h2><p>发布-订阅是一种消息范式，消息的发送者（称为发布者）不会将消息直接发送给特定的接收者（称为订阅者）。而是将发布的消息分为不同的类别，无需了解哪些订阅者（如果有的话）可能存在</p><p>同样的，订阅者可以表达对一个或多个类别的兴趣，只接收感兴趣的消息，无需了解哪些发布者存在 </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * @Author: zhangzhen</span></span><br><span class="line"><span class="comment"> * @Date: 2023-02-15 10:21:14</span></span><br><span class="line"><span class="comment"> * @LastEditors: zhangzhen</span></span><br><span class="line"><span class="comment"> * @LastEditTime: 2023-02-15 15:53:16</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// 发布订阅者模式</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 中间处理发布订阅</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Pubsub</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.message = &#123;&#125;;</span><br><span class="line">        <span class="built_in">this</span>.listener = &#123;&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 添加发布者</span></span><br><span class="line">    <span class="function"><span class="title">publish</span>(<span class="params">type, content</span>)</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> nowPublisher = <span class="built_in">this</span>.message[type];</span><br><span class="line">        <span class="keyword">if</span> (!nowPublisher) &#123;</span><br><span class="line">            <span class="built_in">this</span>.message[type] = [];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">this</span>.message[type].push(content);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 添加订阅者</span></span><br><span class="line">    <span class="function"><span class="title">subscribe</span>(<span class="params">type, cb</span>)</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> nowSubscriber = <span class="built_in">this</span>.listener[type];</span><br><span class="line">        <span class="keyword">if</span> (!nowSubscriber) &#123;</span><br><span class="line">            <span class="built_in">this</span>.listener[type] = [];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">this</span>.listener[type].push(cb);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 发布消息</span></span><br><span class="line">    <span class="function"><span class="title">sendMessage</span>(<span class="params">type</span>)</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> message = <span class="built_in">this</span>.message[type];</span><br><span class="line">        <span class="keyword">const</span> subscriber = <span class="built_in">this</span>.listener[type];</span><br><span class="line">        subscriber.forEach(<span class="function">(<span class="params">cb</span>) =&gt;</span> cb(message.join(<span class="string">&#x27;,&#x27;</span>)));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 发布者,只管发布</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Publisher</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">name, context</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.context = context;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">publish</span>(<span class="params">type, content</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.context.publish(type, content);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 订阅者,只管订阅</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Subscriber</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">name, context</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.context = context;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">subscribe</span>(<span class="params">type, cb</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.context.subscribe(type, cb);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> TYPE_1 = <span class="string">&#x27;eat&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> TYPE_2 = <span class="string">&#x27;drink&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> TYPE_3 = <span class="string">&#x27;play&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> TYPE_4 = <span class="string">&#x27;happy&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> pubsubA = <span class="keyword">new</span> Pubsub();</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> publishA = <span class="keyword">new</span> Publisher(<span class="string">&#x27;pubA&#x27;</span>, pubsubA);</span><br><span class="line">publishA.publish(TYPE_1, <span class="string">&#x27;吃炸鸡&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> publishB = <span class="keyword">new</span> Publisher(<span class="string">&#x27;pubB&#x27;</span>, pubsubA);</span><br><span class="line">publishB.publish(TYPE_1, <span class="string">&#x27;吃火锅&#x27;</span>);</span><br><span class="line">publishB.publish(TYPE_2, <span class="string">&#x27;喝奶茶&#x27;</span>);</span><br><span class="line">publishB.publish(TYPE_3, <span class="string">&#x27;玩游戏&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> publishC = <span class="keyword">new</span> Publisher(<span class="string">&#x27;pubC&#x27;</span>, pubsubA);</span><br><span class="line">publishC.publish(TYPE_3, <span class="string">&#x27;游乐园&#x27;</span>);</span><br><span class="line">publishC.publish(TYPE_1, <span class="string">&#x27;吃烧烤&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> publishD = <span class="keyword">new</span> Publisher(<span class="string">&#x27;pubD&#x27;</span>, pubsubA);</span><br><span class="line">publishD.publish(TYPE_4, <span class="string">&#x27;看电影&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> subscribeA = <span class="keyword">new</span> Subscriber(<span class="string">&#x27;subA&#x27;</span>, pubsubA);</span><br><span class="line"></span><br><span class="line">subscribeA.subscribe(TYPE_1, <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`我订阅了<span class="subst">$&#123;TYPE_1&#125;</span>`</span>, res);</span><br><span class="line">&#125;);</span><br><span class="line">subscribeA.subscribe(TYPE_2, <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`我订阅了<span class="subst">$&#123;TYPE_2&#125;</span>`</span>, res);</span><br><span class="line">&#125;);</span><br><span class="line">subscribeA.subscribe(TYPE_3, <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`我订阅了<span class="subst">$&#123;TYPE_3&#125;</span>`</span>, res);</span><br><span class="line">&#125;);</span><br><span class="line">subscribeA.subscribe(TYPE_4, <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`我订阅了<span class="subst">$&#123;TYPE_4&#125;</span>`</span>, res);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(pubsubA.message);</span><br><span class="line">pubsubA.sendMessage(TYPE_1);</span><br><span class="line">pubsubA.sendMessage(TYPE_2);</span><br><span class="line">pubsubA.sendMessage(TYPE_3);</span><br><span class="line">pubsubA.sendMessage(TYPE_4);</span><br><span class="line"></span><br><span class="line"><span class="comment">// &#123;</span></span><br><span class="line"><span class="comment">//     eat: [ &#x27;吃炸鸡&#x27;, &#x27;吃火锅&#x27;, &#x27;吃烧烤&#x27; ],</span></span><br><span class="line"><span class="comment">//     drink: [ &#x27;喝奶茶&#x27; ],</span></span><br><span class="line"><span class="comment">//     play: [ &#x27;玩游戏&#x27;, &#x27;游乐园&#x27; ],</span></span><br><span class="line"><span class="comment">//     happy: [ &#x27;看电影&#x27; ]</span></span><br><span class="line"><span class="comment">//   &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 我订阅了eat 吃炸鸡,吃火锅,吃烧烤</span></span><br><span class="line"><span class="comment"> * 我订阅了drink 喝奶茶</span></span><br><span class="line"><span class="comment"> * 我订阅了play 玩游戏,游乐园</span></span><br><span class="line"><span class="comment"> * 我订阅了happy 看电影</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;设计模式：发布订阅模式&quot;&gt;&lt;a href=&quot;#设计模式：发布订阅模式&quot; class=&quot;headerlink&quot; title=&quot;设计模式：发布订阅模式&quot;&gt;&lt;/a&gt;设计模式：发布订阅模式&lt;/h2&gt;&lt;p&gt;发布-订阅是一种消息范式，消息的发送者（称为发布者）不会将消息直接发</summary>
      
    
    
    
    
    <category term="JavaScript" scheme="https://gitee.com/shimmer612/myBlog/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>2023年猝不及防的来了</title>
    <link href="https://gitee.com/shimmer612/myBlog/2023/01/01/2023/"/>
    <id>https://gitee.com/shimmer612/myBlog/2023/01/01/2023/</id>
    <published>2022-12-31T16:00:00.000Z</published>
    <updated>2023-02-05T11:08:45.734Z</updated>
    
    <content type="html"><![CDATA[<h5 id="2023年元旦"><a href="#2023年元旦" class="headerlink" title="2023年元旦"></a>2023年元旦</h5><p>一年的时间在眼前绕一下就过去了，</p><p>上班以后真的感觉时间是越过越快。</p><p>好在2022的末尾，持续了三年的疫情放开了，</p><p>再也没有隔离了，但是再也回不到2020年以前的那种状态了。</p><p>不过第一次“羊”的感觉是真的不好受，虽然现在杨康了，</p><p>但是还是觉得容易累，感觉肺里老有痰咳不出来。</p><p>不知道下一轮什么时候到来。</p><p>还是发现，身体健康最重要了，别的都是假的。</p><p>今年经历了换工作，从一个城市到另外一个城市。</p><p>没有想象中的那么麻烦。</p><p>但是刚开始那几天确实遇到了不少倒霉事，</p><p>好在都过去了。</p><p>和女朋友也见过家长了。</p><p>日子总是在往好的方向发展。</p><p>希望2023年，我爱的人和爱我的人，</p><p><strong>一切都好，健康平安。</strong></p><p><strong>新年快乐！</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h5 id=&quot;2023年元旦&quot;&gt;&lt;a href=&quot;#2023年元旦&quot; class=&quot;headerlink&quot; title=&quot;2023年元旦&quot;&gt;&lt;/a&gt;2023年元旦&lt;/h5&gt;&lt;p&gt;一年的时间在眼前绕一下就过去了，&lt;/p&gt;
&lt;p&gt;上班以后真的感觉时间是越过越快。&lt;/p&gt;
&lt;p&gt;好在</summary>
      
    
    
    
    
    <category term="随笔" scheme="https://gitee.com/shimmer612/myBlog/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>对react-toolkit赋值封装</title>
    <link href="https://gitee.com/shimmer612/myBlog/2022/11/19/2022-11-19-%E5%AF%B9react-toolkit%E8%B5%8B%E5%80%BC%E5%B0%81%E8%A3%85/"/>
    <id>https://gitee.com/shimmer612/myBlog/2022/11/19/2022-11-19-%E5%AF%B9react-toolkit%E8%B5%8B%E5%80%BC%E5%B0%81%E8%A3%85/</id>
    <published>2022-11-18T16:00:00.000Z</published>
    <updated>2023-02-05T11:41:55.037Z</updated>
    
    <content type="html"><![CDATA[<h4 id="对react-toolkit赋值封装。"><a href="#对react-toolkit赋值封装。" class="headerlink" title="对react-toolkit赋值封装。"></a>对react-toolkit赋值封装。</h4><h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>因为为了做keepalive，项目中页面的数据都是存在redux上面。</p><p>虽然用的react-tookit,但是每次取值、赋值都很麻烦，如下。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">    useAction,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&#x27;@gwaapp/ease&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;useAppDispatch, useAppSelector,&#125; <span class="keyword">from</span> <span class="string">&#x27;@init/runtime&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> page = <span class="function">(<span class="params">props</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> &#123;id&#125; = props</span><br><span class="line">    <span class="comment">//取值</span></span><br><span class="line">    <span class="keyword">const</span> &#123;</span><br><span class="line">        pageNum,</span><br><span class="line">    &#125; = useAppSelector(</span><br><span class="line">        (state) =&gt; state[id]</span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">const</span> dispatch = useAppDispatch();    </span><br><span class="line">    <span class="keyword">const</span> &#123;getPageSimpleActions&#125; = useAction();</span><br><span class="line">    <span class="keyword">const</span> actions = getPageSimpleActions(id);</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;()</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="xml">     //赋值</span></span><br><span class="line"><span class="xml">     dispatch(actions.set(&#123;pageNum:1&#125;))</span></span><br><span class="line"><span class="xml">    &#125;&#125;&gt;赋值<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>每次都要引用这些写那几行重复的代码，十分的繁琐，我就在想能不能像简便一点。</p><p>于是我想到了<strong>Proxy</strong>。</p><h4 id="proxy是什么？"><a href="#proxy是什么？" class="headerlink" title="proxy是什么？"></a>proxy是什么？</h4><p>Proxy 对象用于定义基本操作的自定义行为（如属性查找，赋值，枚举，函数调用等）。</p><p>通俗的讲Proxy是一个对象操作的拦截器，拦截对目标对象的操作，进行一些自定义的行为。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> p = <span class="keyword">new</span> <span class="built_in">Proxy</span>(target, handler);</span><br></pre></td></tr></table></figure><p><strong>target</strong><br>用Proxy包装的目标对象（可以是任何类型的对象，包括原生数组，函数，甚至另一个代理）。</p><p><strong>handler</strong><br>一个对象，其属性是当执行一个操作时定义代理的行为的函数</p><p>于是在对象赋值前，进行拦截，同时让页面的数据变化。</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><p>首先传入当前页面所有的redux数据，进行深拷贝，防止修改原数据。</p><p>然后进行拦截，为了防止直接对象赋值，为赋值写了一个方法。</p><p>加了泛型，有了代码提示。</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> _ <span class="keyword">from</span> <span class="string">&#x27;lodash&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;useRef&#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;useAction&#125; <span class="keyword">from</span> <span class="string">&#x27;@gwaapp/ease&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;useAppDispatch&#125; <span class="keyword">from</span> <span class="string">&#x27;@init/runtime&#x27;</span>; </span><br><span class="line"></span><br><span class="line"><span class="comment">// Partial 作用是让传入类型中的所有属性变成都是可选的</span></span><br><span class="line"><span class="keyword">type</span> PageStateProxyHandler&lt;T&gt; = <span class="function">(<span class="params">state: Partial&lt;T&gt;</span>) =&gt;</span> <span class="built_in">void</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">interface</span> PageStateProxyType&lt;T&gt; &#123;</span><br><span class="line">    pageStateProxy: T;</span><br><span class="line">    setPageStateProxy: PageStateProxyHandler&lt;T&gt;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> usePageStateProxy = &lt;T extends Record&lt;string, any&gt;&gt;(</span><br><span class="line">    initialState: T,</span><br><span class="line">    id: string,</span><br><span class="line">    search?: string,</span><br><span class="line">): PageStateProxyType&lt;T&gt; =&gt; &#123;</span><br><span class="line">    const &#123;getPageSimpleActions&#125; = useAction();</span><br><span class="line">    const actions = getPageSimpleActions(id, search);</span><br><span class="line">    const dispatch = useAppDispatch();</span><br><span class="line">    const changeRef = useRef&lt;boolean&gt;(false);</span><br><span class="line"></span><br><span class="line">    const temValue = _.cloneDeep(initialState);</span><br><span class="line"></span><br><span class="line">    const pageStateProxy = new Proxy(temValue, &#123;</span><br><span class="line">        get(target, key: string) &#123;</span><br><span class="line">            return target[key];</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        set(target, key, newValue) &#123;</span><br><span class="line">            if (changeRef.current) &#123;</span><br><span class="line">                target[key] = newValue;</span><br><span class="line">                return true;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            throw new Error(`$&#123;String(key)&#125;请使用setPageStateProxy方法赋值`);</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    const setPageStateProxy = (state: Partial&lt;T&gt;) =&gt; &#123;</span><br><span class="line">        changeRef.current = true;</span><br><span class="line">        dispatch(actions.set(&#123;...state&#125;));</span><br><span class="line"></span><br><span class="line">        for (const item in state) &#123;</span><br><span class="line">            if (state.hasOwnProperty(item)) &#123;</span><br><span class="line">                pageStateProxy[item] = state[item] as any;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        changeRef.current = false;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    return &#123;</span><br><span class="line">        pageStateProxy,</span><br><span class="line">        setPageStateProxy,</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><p>这样就很方便了。</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> React, &#123;FC&#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;PageProps, getUniqueKey, usePage&#125; <span class="keyword">from</span> <span class="string">&#x27;@gwaapp/ease&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;useAppSelector, useAppDispatch&#125; <span class="keyword">from</span> <span class="string">&#x27;@init/runtime&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;shallowEqual&#125; <span class="keyword">from</span> <span class="string">&#x27;react-redux&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;usePageStateProxy&#125; <span class="keyword">from</span> <span class="string">&#x27;@/common/hooks/usePageStateProxy&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> FormPage <span class="keyword">from</span> <span class="string">&#x27;./form&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> ChartsInfo <span class="keyword">from</span> <span class="string">&#x27;./echarts/charts_info&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> EchartsPage <span class="keyword">from</span> <span class="string">&#x27;./echarts&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> TablePage <span class="keyword">from</span> <span class="string">&#x27;./table&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> styles <span class="keyword">from</span> <span class="string">&#x27;./styles.module.scss&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;PageStateType&#125; <span class="keyword">from</span> <span class="string">&#x27;./types&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;initPage, dropDownFun&#125; <span class="keyword">from</span> <span class="string">&#x27;./actions&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> ProductionPage: FC&lt;PageProps&gt; = <span class="function">(<span class="params">props</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123;id, search&#125; = props;</span><br><span class="line">    <span class="keyword">const</span> dispatch = useAppDispatch();</span><br><span class="line">    <span class="keyword">const</span> initState = useAppSelector(</span><br><span class="line">        (state) =&gt; state[getUniqueKey(id, search)],</span><br><span class="line">        shallowEqual,</span><br><span class="line">    );</span><br><span class="line">    <span class="comment">//1传入页面数据</span></span><br><span class="line">    <span class="keyword">const</span> pageStateObserver = usePageStateProxy&lt;PageStateType&gt;(</span><br><span class="line">        initState,</span><br><span class="line">        id,</span><br><span class="line">        search,</span><br><span class="line">    );</span><br><span class="line">    <span class="comment">//返回两个方法</span></span><br><span class="line">    <span class="keyword">const</span> &#123;pageStateProxy,setPageStateProxy&#125; = pageStateObserver;</span><br><span class="line">    usePage(&#123;</span><br><span class="line">        ...props,</span><br><span class="line">        <span class="comment">// 页面初始化逻辑</span></span><br><span class="line">        init: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (search === <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">                dispatch(initPage(pageStateObserver));</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// 下钻</span></span><br><span class="line">                dispatch(dropDownFun(pageStateObserver, props));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        &lt;div className=&#123;styles.pro_box&#125;&gt;</span><br><span class="line">            &lt;div className=&#123;styles.scrollBox&#125;&gt;</span><br><span class="line">                &#123;<span class="comment">/* 查询表单 */</span>&#125;</span><br><span class="line">                &lt;FormPage &#123;...props&#125; pageStateObserver=&#123;pageStateObserver&#125; /&gt;</span><br><span class="line">                &#123;<span class="comment">/* 概览数据 */</span>&#125;</span><br><span class="line">                &#123;!pageStateProxy.isExpand &amp;&amp; (</span><br><span class="line">                    &lt;ChartsInfo</span><br><span class="line">                        &#123;...props&#125;</span><br><span class="line">                        pageStateObserver=&#123;pageStateObserver&#125;</span><br><span class="line">                    /&gt;</span><br><span class="line">                )&#125;</span><br><span class="line">                &#123;<span class="comment">/* 图表 */</span>&#125;</span><br><span class="line">                &#123;!pageStateProxy.isExpand &amp;&amp; (</span><br><span class="line">                    &lt;EchartsPage</span><br><span class="line">                        &#123;...props&#125;</span><br><span class="line">                        pageStateObserver=&#123;pageStateObserver&#125;</span><br><span class="line">                        echartsData=&#123;pageStateProxy.echartsData&#125;</span><br><span class="line">                        activeTab=&#123;pageStateProxy.activeTab&#125;</span><br><span class="line">                        chartsOrder=&#123;pageStateProxy.chartsOrder&#125;</span><br><span class="line">                    /&gt;</span><br><span class="line">                )&#125;</span><br><span class="line">                &#123;<span class="comment">/* 表格 */</span>&#125;</span><br><span class="line">                &lt;TablePage &#123;...props&#125; pageStateObserver=&#123;pageStateObserver&#125; /&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> ProductionPage;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;对react-toolkit赋值封装。&quot;&gt;&lt;a href=&quot;#对react-toolkit赋值封装。&quot; class=&quot;headerlink&quot; title=&quot;对react-toolkit赋值封装。&quot;&gt;&lt;/a&gt;对react-toolkit赋值封装。&lt;/h4&gt;&lt;h4 i</summary>
      
    
    
    
    
    <category term="React" scheme="https://gitee.com/shimmer612/myBlog/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>Rollup打包库文件</title>
    <link href="https://gitee.com/shimmer612/myBlog/2022/10/26/2022-10-26-Rollup%E6%89%93%E5%8C%85%E5%BA%93%E6%96%87%E4%BB%B6/"/>
    <id>https://gitee.com/shimmer612/myBlog/2022/10/26/2022-10-26-Rollup%E6%89%93%E5%8C%85%E5%BA%93%E6%96%87%E4%BB%B6/</id>
    <published>2022-10-25T16:00:00.000Z</published>
    <updated>2023-02-05T11:42:35.309Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Rollup打包库文件"><a href="#Rollup打包库文件" class="headerlink" title="Rollup打包库文件"></a>Rollup打包库文件</h2><h4 id="1、安装"><a href="#1、安装" class="headerlink" title="1、安装"></a>1、安装</h4><p><strong>全局安装rollup</strong></p><p><code>npm i rollup -g</code></p><h4 id="2、新建rollup-config-js文件"><a href="#2、新建rollup-config-js文件" class="headerlink" title="2、新建rollup.config.js文件"></a>2、新建rollup.config.js文件</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//默认集成了对 scss、less、stylus 的支持。</span></span><br><span class="line"><span class="keyword">const</span>  postcss  = <span class="built_in">require</span>( <span class="string">&quot;rollup-plugin-postcss&quot;</span>)</span><br><span class="line"><span class="comment">//css加前缀</span></span><br><span class="line"><span class="keyword">const</span>  autoprefixer  = <span class="built_in">require</span>( <span class="string">&quot;autoprefixer&quot;</span>)</span><br><span class="line"><span class="comment">//css压缩</span></span><br><span class="line"><span class="keyword">const</span>  cssnano  = <span class="built_in">require</span>( <span class="string">&quot;cssnano&quot;</span>)</span><br><span class="line"><span class="comment">//生成类型文件</span></span><br><span class="line"><span class="keyword">const</span>  typescript  = <span class="built_in">require</span>( <span class="string">&quot;@rollup/plugin-typescript&quot;</span>)</span><br><span class="line"><span class="comment">//处理引入的外部依赖</span></span><br><span class="line"><span class="keyword">const</span>  &#123;nodeResolve&#125; = <span class="built_in">require</span>( <span class="string">&quot;@rollup/plugin-node-resolve&quot;</span>)</span><br><span class="line"><span class="comment">// 自动生成externals属性</span></span><br><span class="line"><span class="keyword">const</span>  &#123;externals&#125; = <span class="built_in">require</span>( <span class="string">&quot;rollup-plugin-node-externals&quot;</span>)</span><br><span class="line"><span class="comment">// 支持基于 CommonJS 模块方式 npm 包。</span></span><br><span class="line"><span class="keyword">const</span> commonjs = <span class="built_in">require</span>(<span class="string">&quot;@rollup/plugin-commonjs&quot;</span>)</span><br><span class="line"><span class="comment">// 处理图像文件</span></span><br><span class="line"><span class="keyword">const</span>  image  =  <span class="built_in">require</span>(<span class="string">&#x27;@rollup/plugin-image&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span>  path  = <span class="built_in">require</span>( <span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="keyword">const</span> config=&#123;</span><br><span class="line">    input: <span class="string">&quot;src/index.ts&quot;</span>,</span><br><span class="line">     output: [&#123;</span><br><span class="line">        dir: <span class="string">&#x27;dist&#x27;</span>,</span><br><span class="line">        format: <span class="string">&#x27;es&#x27;</span>,</span><br><span class="line">        <span class="built_in">exports</span>: <span class="string">&#x27;named&#x27;</span>, <span class="comment">// 指定导出模式（自动、默认、命名、无）</span></span><br><span class="line">        name:<span class="string">&quot;esae&quot;</span>,</span><br><span class="line">        preserveModules: <span class="literal">true</span>, <span class="comment">// 保留模块结构</span></span><br><span class="line">        preserveModulesRoot: <span class="string">&#x27;src&#x27;</span>, <span class="comment">// 将保留的模块放在根级别的此路径下</span></span><br><span class="line">      </span><br><span class="line">     &#125;],</span><br><span class="line">     plugins: [</span><br><span class="line">        image(),</span><br><span class="line">        commonjs(),</span><br><span class="line">        postcss(&#123;</span><br><span class="line">        plugins: [autoprefixer(), cssnano()],</span><br><span class="line">        <span class="comment">//  抽离单独的css文件，默认打包根目录</span></span><br><span class="line">        extract: <span class="string">&quot;style.css&quot;</span>,</span><br><span class="line">        &#125;),</span><br><span class="line">        typescript(&#123;</span><br><span class="line">        outDir: <span class="string">&quot;dist&quot;</span>,</span><br><span class="line">        declaration: <span class="literal">true</span>,</span><br><span class="line">        declarationDir: <span class="string">&quot;dist&quot;</span>,</span><br><span class="line">        &#125;),</span><br><span class="line">       <span class="comment">// 处理外部依赖</span></span><br><span class="line">       nodeResolve(),</span><br><span class="line">      <span class="comment">//  externals(&#123;</span></span><br><span class="line">      <span class="comment">//   devDeps: false, // devDependencies 类型的依赖就不用加到 externals 了。</span></span><br><span class="line">      <span class="comment">//   &#125;),</span></span><br><span class="line">        </span><br><span class="line">    ],</span><br><span class="line">     <span class="comment">//不需要打包的依赖</span></span><br><span class="line">    external: [</span><br><span class="line">    <span class="string">&quot;ahooks&quot;</span>,</span><br><span class="line">    <span class="string">&quot;antd&quot;</span>,</span><br><span class="line">    <span class="string">&quot;react-redux&quot;</span>,</span><br><span class="line">    <span class="string">&quot;redux&quot;</span>,</span><br><span class="line">    <span class="string">&quot;@reduxjs/toolkit&quot;</span>,</span><br><span class="line">    <span class="string">&quot;react-router&quot;</span>,</span><br><span class="line">    <span class="string">&quot;react-router-dom&quot;</span>,</span><br><span class="line">    <span class="string">&quot;react&quot;</span>,</span><br><span class="line">    <span class="string">&quot;react-dom&quot;</span>,</span><br><span class="line">    <span class="string">&quot;i18nNext&quot;</span>,</span><br><span class="line">    <span class="string">&quot;react-i18next&quot;</span>,</span><br><span class="line">    <span class="string">&quot;i18next-browser-languagedetector&quot;</span>,</span><br><span class="line">    <span class="string">&quot;axios&quot;</span>,</span><br><span class="line">    <span class="string">&quot;moment&quot;</span>,</span><br><span class="line">    <span class="string">&quot;xlsx&quot;</span>,</span><br><span class="line">    <span class="string">&quot;react-resizable&quot;</span>,</span><br><span class="line">    <span class="string">&quot;react-dnd&quot;</span>,</span><br><span class="line">    <span class="string">&quot;react-window&quot;</span>,</span><br><span class="line">    <span class="string">&quot;react-contextmenu&quot;</span>,</span><br><span class="line">    <span class="string">&quot;react-sortable-hoc&quot;</span>,</span><br><span class="line">    <span class="string">&quot;react-dnd-html5-backend&quot;</span>,</span><br><span class="line">    <span class="string">&quot;react-draggable&quot;</span>,],</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> config</span><br></pre></td></tr></table></figure><h4 id="3、配置打包命令"><a href="#3、配置打包命令" class="headerlink" title="3、配置打包命令"></a>3、配置打包命令</h4><p>在package.json文件中</p><p><code>--bundleConfigAsCjs</code></p><p><strong>mjs并位于项目的根目录中。除非使用–configPlugin或–bundleConfigAsCjs选项，否则Rollup将直接使用Node导入文件</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&quot;scripts&quot;: &#123;</span><br><span class="line">  &quot;build-antd&quot;: &quot;rollup -c rollup.antd.config.js  --bundleConfigAsCjs&quot;,</span><br><span class="line">  &quot;build&quot;: &quot;rollup -c --bundleConfigAsCjs &amp;&amp; npm run build-antd&quot;,</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Rollup打包库文件&quot;&gt;&lt;a href=&quot;#Rollup打包库文件&quot; class=&quot;headerlink&quot; title=&quot;Rollup打包库文件&quot;&gt;&lt;/a&gt;Rollup打包库文件&lt;/h2&gt;&lt;h4 id=&quot;1、安装&quot;&gt;&lt;a href=&quot;#1、安装&quot; class=&quot;</summary>
      
    
    
    
    
    <category term="Rollup" scheme="https://gitee.com/shimmer612/myBlog/tags/Rollup/"/>
    
  </entry>
  
  <entry>
    <title>实现“羊了个羊”消消乐（react）</title>
    <link href="https://gitee.com/shimmer612/myBlog/2022/09/19/2022-09-19-%E5%AE%9E%E7%8E%B0%E2%80%9C%E7%BE%8A%E4%BA%86%E4%B8%AA%E7%BE%8A%E2%80%9D%E6%B6%88%E6%B6%88%E4%B9%90%EF%BC%88react%EF%BC%89/"/>
    <id>https://gitee.com/shimmer612/myBlog/2022/09/19/2022-09-19-%E5%AE%9E%E7%8E%B0%E2%80%9C%E7%BE%8A%E4%BA%86%E4%B8%AA%E7%BE%8A%E2%80%9D%E6%B6%88%E6%B6%88%E4%B9%90%EF%BC%88react%EF%BC%89/</id>
    <published>2022-09-18T16:00:00.000Z</published>
    <updated>2023-02-06T01:10:36.328Z</updated>
    
    <content type="html"><![CDATA[<h3 id="实现“羊了个羊”消消乐（react）"><a href="#实现“羊了个羊”消消乐（react）" class="headerlink" title="实现“羊了个羊”消消乐（react）"></a>实现“羊了个羊”消消乐（react）</h3><p>体验地址：<a href="https://code.juejin.cn/pen/7143974476500172814?mode=light">https://code.juejin.cn/pen/7143974476500172814?mode=light</a><br>和文章的代码写的有点不同。</p><h4 id="1、前言"><a href="#1、前言" class="headerlink" title="1、前言"></a>1、前言</h4><p>其实在羊了个羊出来的很久之前，我女朋友经常玩的一款游戏叫《方块物语》,就是一样的玩法，如下图。</p><img src="https://s1.ax1x.com/2022/09/19/x9nDpj.jpg" alt="x9nDpj.jpg" style="width:200px;height:400px" /><p>当时看到的时候，就想着怎么去实现。也只是在脑海中构思了一下，没有动手行动起来。</p><p>然后看到了羊了个羊。诶，这不是和我女朋友之前玩的游戏一样吗？正好手头没什么事。就尝试了实现了一下。</p><h4 id="2、实现"><a href="#2、实现" class="headerlink" title="2、实现"></a>2、实现</h4><h5 id="1、开始准备"><a href="#1、开始准备" class="headerlink" title="1、开始准备"></a>1、开始准备</h5><p>由于懒得去搭项目，正好自己有个平时学习的react项目，就加个路由用react实现。</p><p>首先是布局，分为上中下三个部分，标题，游戏区域，操作区域。</p><p>就不说了。</p><h5 id="2、游戏区域生成、是否被覆盖的判断。"><a href="#2、游戏区域生成、是否被覆盖的判断。" class="headerlink" title="2、游戏区域生成、是否被覆盖的判断。"></a>2、游戏区域生成、是否被覆盖的判断。</h5><p>初始数据，这里用的是12个文字,</p><p><code>name:</code>文字</p><p><code>color:</code>背景颜色</p><p><code>position:</code>对应的位置分别是<code>[第几层,第几行,第几个]</code></p><p>由于想偷懒，我直接每个同时放了三个。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> gameItemsArr = [</span><br><span class="line">    &#123;<span class="attr">name</span>: <span class="string">&#x27;马&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;#5470c6&#x27;</span>, <span class="attr">position</span>: [<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>]&#125;,</span><br><span class="line">    &#123;<span class="attr">name</span>: <span class="string">&#x27;马&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;#5470c6&#x27;</span>, <span class="attr">position</span>: [<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>]&#125;,</span><br><span class="line">    &#123;<span class="attr">name</span>: <span class="string">&#x27;马&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;#5470c6&#x27;</span>, <span class="attr">position</span>: [<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>]&#125;,</span><br><span class="line">    &#123;<span class="attr">name</span>: <span class="string">&#x27;驰&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;#fac858&#x27;</span>, <span class="attr">position</span>: [<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>]&#125;,</span><br><span class="line">    &#123;<span class="attr">name</span>: <span class="string">&#x27;驰&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;#fac858&#x27;</span>, <span class="attr">position</span>: [<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>]&#125;,</span><br><span class="line">    &#123;<span class="attr">name</span>: <span class="string">&#x27;驰&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;#fac858&#x27;</span>, <span class="attr">position</span>: [<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>]&#125;,</span><br><span class="line">    &#123;<span class="attr">name</span>: <span class="string">&#x27;朱&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;#ee6666&#x27;</span>, <span class="attr">position</span>: [<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>]&#125;,</span><br><span class="line">    &#123;<span class="attr">name</span>: <span class="string">&#x27;朱&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;#ee6666&#x27;</span>, <span class="attr">position</span>: [<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>]&#125;,</span><br><span class="line">    &#123;<span class="attr">name</span>: <span class="string">&#x27;朱&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;#ee6666&#x27;</span>, <span class="attr">position</span>: [<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>]&#125;,</span><br><span class="line">    &#123;<span class="attr">name</span>: <span class="string">&#x27;振&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;#73c0de&#x27;</span>, <span class="attr">position</span>: [<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>]&#125;,</span><br><span class="line">    &#123;<span class="attr">name</span>: <span class="string">&#x27;振&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;#73c0de&#x27;</span>, <span class="attr">position</span>: [<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>]&#125;,</span><br><span class="line">    &#123;<span class="attr">name</span>: <span class="string">&#x27;振&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;#73c0de&#x27;</span>, <span class="attr">position</span>: [<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>]&#125;,</span><br><span class="line">    &#123;<span class="attr">name</span>: <span class="string">&#x27;骚&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;#3bd272&#x27;</span>, <span class="attr">position</span>: [<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>]&#125;,</span><br><span class="line">    &#123;<span class="attr">name</span>: <span class="string">&#x27;骚&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;#3bd272&#x27;</span>, <span class="attr">position</span>: [<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>]&#125;,</span><br><span class="line">    &#123;<span class="attr">name</span>: <span class="string">&#x27;骚&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;#3bd272&#x27;</span>, <span class="attr">position</span>: [<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>]&#125;,</span><br><span class="line">    &#123;<span class="attr">name</span>: <span class="string">&#x27;刘&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;#9a60b4&#x27;</span>, <span class="attr">position</span>: [<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>]&#125;,</span><br><span class="line">    &#123;<span class="attr">name</span>: <span class="string">&#x27;刘&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;#9a60b4&#x27;</span>, <span class="attr">position</span>: [<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>]&#125;,</span><br><span class="line">    &#123;<span class="attr">name</span>: <span class="string">&#x27;刘&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;#9a60b4&#x27;</span>, <span class="attr">position</span>: [<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>]&#125;,</span><br><span class="line">    &#123;<span class="attr">name</span>: <span class="string">&#x27;胖&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;#ea7ccc&#x27;</span>, <span class="attr">position</span>: [<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>]&#125;,</span><br><span class="line">    &#123;<span class="attr">name</span>: <span class="string">&#x27;胖&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;#ea7ccc&#x27;</span>, <span class="attr">position</span>: [<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>]&#125;,</span><br><span class="line">    &#123;<span class="attr">name</span>: <span class="string">&#x27;胖&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;#ea7ccc&#x27;</span>, <span class="attr">position</span>: [<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>]&#125;,</span><br><span class="line">    &#123;<span class="attr">name</span>: <span class="string">&#x27;邢&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;#c14cac&#x27;</span>, <span class="attr">position</span>: [<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>]&#125;,</span><br><span class="line">    &#123;<span class="attr">name</span>: <span class="string">&#x27;邢&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;#c14cac&#x27;</span>, <span class="attr">position</span>: [<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>]&#125;,</span><br><span class="line">    &#123;<span class="attr">name</span>: <span class="string">&#x27;邢&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;#c14cac&#x27;</span>, <span class="attr">position</span>: [<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>]&#125;,</span><br><span class="line">    &#123;<span class="attr">name</span>: <span class="string">&#x27;吊&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;#f08300&#x27;</span>, <span class="attr">position</span>: [<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>]&#125;,</span><br><span class="line">    &#123;<span class="attr">name</span>: <span class="string">&#x27;吊&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;#f08300&#x27;</span>, <span class="attr">position</span>: [<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>]&#125;,</span><br><span class="line">    &#123;<span class="attr">name</span>: <span class="string">&#x27;吊&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;#f08300&#x27;</span>, <span class="attr">position</span>: [<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>]&#125;,</span><br><span class="line">    &#123;<span class="attr">name</span>: <span class="string">&#x27;龙&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;#004eff&#x27;</span>, <span class="attr">position</span>: [<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>]&#125;,</span><br><span class="line">    &#123;<span class="attr">name</span>: <span class="string">&#x27;龙&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;#004eff&#x27;</span>, <span class="attr">position</span>: [<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>]&#125;,</span><br><span class="line">    &#123;<span class="attr">name</span>: <span class="string">&#x27;龙&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;#004eff&#x27;</span>, <span class="attr">position</span>: [<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>]&#125;,</span><br><span class="line">    &#123;<span class="attr">name</span>: <span class="string">&#x27;楞&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;#00e4ff&#x27;</span>, <span class="attr">position</span>: [<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>]&#125;,</span><br><span class="line">    &#123;<span class="attr">name</span>: <span class="string">&#x27;楞&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;#00e4ff&#x27;</span>, <span class="attr">position</span>: [<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>]&#125;,</span><br><span class="line">    &#123;<span class="attr">name</span>: <span class="string">&#x27;楞&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;#00e4ff&#x27;</span>, <span class="attr">position</span>: [<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>]&#125;,</span><br><span class="line">    &#123;<span class="attr">name</span>: <span class="string">&#x27;张&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;#c0e8ff&#x27;</span>, <span class="attr">position</span>: [<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>]&#125;,</span><br><span class="line">    &#123;<span class="attr">name</span>: <span class="string">&#x27;张&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;#c0e8ff&#x27;</span>, <span class="attr">position</span>: [<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>]&#125;,</span><br><span class="line">    &#123;<span class="attr">name</span>: <span class="string">&#x27;张&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;#c0e8ff&#x27;</span>, <span class="attr">position</span>: [<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>]&#125;,</span><br><span class="line">];</span><br></pre></td></tr></table></figure><p><strong>接下来是生成游戏区域的items</strong></p><p>这边简单说一下level当前的关卡。一共设置了6个关卡。</p><p><code>floorItemsArr:</code>每层有多少个，第一层9个，3的平方，第二层16个,4的平方依次类推，第一关有两层。</p><p>每层就是个正方形。</p><p>因为还要有空缺。这边也是偷懒，每个等级有多少空的。剩下的数组是三的倍数就可以了。</p><p>然后从上面的<code>gameItemsArr</code>取数据，看看不是空的<code>item</code>是不是36的倍数。</p><p>这边图省事也是写死的。</p><p>然后和空<code>item</code>数组拼接一下。</p><p>使用<code>sort(()=&gt;MathMath.random() - 0.5)</code>打乱</p><p>然后依次从<code>allItems</code>取出每层的<code>item</code></p><p>为了显示层级效果最上层的<code>z-index</code>值最大。这里也是偷懒写死的</p><p>最后判断每个元素的位置</p><p>每层的宽度和<code>z-index</code>。</p><p>第一关最后就得到了一个这样的数组。</p><p><a href="https://imgse.com/i/pScPu36"><img src="https://s1.ax1x.com/2023/02/06/pScPu36.png" alt="pScPu36.png"></a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 生成游戏items</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> itemsArr = <span class="function">(<span class="params">level</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> arr = [...gameItemsArr];</span><br><span class="line">    <span class="comment">// 每层有多少item</span></span><br><span class="line">    <span class="keyword">const</span> floorItemsArr = [<span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span>, <span class="number">36</span>, <span class="number">49</span>, <span class="number">64</span>, <span class="number">81</span>];</span><br><span class="line">    <span class="keyword">const</span> floorNumsArr = [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 每个等级有多少空item数组</span></span><br><span class="line">    <span class="keyword">const</span> noItemsNum = [<span class="number">7</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">24</span>, <span class="number">49</span>, <span class="number">40</span>];</span><br><span class="line">    <span class="comment">// 每个等级有多少item数组</span></span><br><span class="line">    <span class="keyword">const</span> itemsNum = [<span class="number">18</span>, <span class="number">36</span>, <span class="number">72</span>, <span class="number">111</span>, <span class="number">150</span>, <span class="number">240</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 空item数组</span></span><br><span class="line">    <span class="keyword">const</span> noItemsArr = [];</span><br><span class="line">    <span class="keyword">let</span> i = noItemsNum[level - <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">while</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        noItemsArr.push(&#123;<span class="attr">name</span>: <span class="string">&#x27;&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;&#x27;</span>, <span class="attr">position</span>: [<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>]&#125;);</span><br><span class="line">        i--;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 最后不完整的取几个</span></span><br><span class="line">    <span class="keyword">const</span> getArrItems = ((itemsNum[level - <span class="number">1</span>] / <span class="number">3</span>) % <span class="number">12</span>) * <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">const</span> otherItemsArr = arr</span><br><span class="line">        .map(<span class="function">(<span class="params">i, index</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (index &lt; getArrItems) &#123;</span><br><span class="line">                <span class="keyword">return</span> i;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;)</span><br><span class="line">        .filter(<span class="function">(<span class="params">i</span>) =&gt;</span> i);</span><br><span class="line">    <span class="keyword">let</span> itemsNumsArr = [];</span><br><span class="line">    <span class="keyword">if</span> (level === <span class="number">1</span>) &#123;</span><br><span class="line">        itemsNumsArr = otherItemsArr;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (level === <span class="number">2</span>) &#123;</span><br><span class="line">        itemsNumsArr = arr;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (level === <span class="number">3</span>) &#123;</span><br><span class="line">        itemsNumsArr = arr.concat(arr);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (level === <span class="number">4</span>) &#123;</span><br><span class="line">        arr = [...gameItemsArr];</span><br><span class="line">        itemsNumsArr = arr.concat(arr, arr, otherItemsArr);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (level === <span class="number">5</span>) &#123;</span><br><span class="line">        arr = [...gameItemsArr];</span><br><span class="line">        itemsNumsArr = arr.concat(arr, arr, arr, otherItemsArr);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (level === <span class="number">6</span>) &#123;</span><br><span class="line">        arr = [...gameItemsArr];</span><br><span class="line">        itemsNumsArr = arr.concat(arr, arr, arr, arr, arr, otherItemsArr);</span><br><span class="line">    &#125;</span><br><span class="line">   <span class="comment">//打乱数组</span></span><br><span class="line">    <span class="keyword">const</span> allItems = itemsNumsArr.concat(noItemsArr).sort(<span class="function">() =&gt;</span> <span class="built_in">Math</span>.random() - <span class="number">0.5</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> resultArr = [];</span><br><span class="line"></span><br><span class="line">    floorItemsArr.splice(<span class="number">0</span>, level + <span class="number">1</span>).map(<span class="function">(<span class="params">item, fIndex</span>) =&gt;</span> &#123;</span><br><span class="line">        resultArr.push(allItems.splice(<span class="number">0</span>, item));</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> zIndex = [<span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">return</span> resultArr.map(<span class="function">(<span class="params">item, index</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            arr: [</span><br><span class="line">                ...item.map(<span class="function">(<span class="params">i, j</span>) =&gt;</span> &#123;</span><br><span class="line">                    i.position = [index + <span class="number">1</span>, <span class="built_in">parseInt</span>(j / floorNumsArr[index]) + <span class="number">1</span>, (j + <span class="number">1</span>) % floorNumsArr[index] || floorNumsArr[index]];</span><br><span class="line">                    <span class="keyword">return</span> &#123;...i&#125;;</span><br><span class="line">                &#125;),</span><br><span class="line">            ],</span><br><span class="line">            zIndex: zIndex[index],</span><br><span class="line">            width: (index + <span class="number">3</span>) * <span class="number">35</span>,</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>得到了数组以后，就可以渲染页面了,但是还要解决覆盖的问题。</p><p>像上面那样，每一个上一层的元素覆盖了下一层的4个元素。</p><p>上面我们设置的<code>position</code>就排上了用场。</p><p>例如第一层的第一个位置是<code>[1,1,1]</code>,那它所覆盖的元素就是<code>[2,1,1],[2,1,2],[2,2,1],[2,2,2]</code></p><p>以此类推循环判断，就得到了一个都是<code>position</code>数组。</p><p>然后通过<code>findIndex</code>或者<code>filter</code>判断当前点击的<code>item</code>在不在这个数组当中。</p><p>在就不能点击，不在就可以点击。</p><p><strong>为了能点击到下层，有个这个属性<code>pointer-events:none</code>设置给父元素，点击可以穿透，为了子元素可以点击。item设置<code>pointer-events:auto</code></strong></p><p>代码如下。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> isItemCanClick = <span class="function">(<span class="params">item, allItems</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> nowItem = &#123;...item&#125;;</span><br><span class="line">    <span class="keyword">const</span> nowItemFloor = nowItem.position[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">const</span> upFloor = allItems[nowItemFloor - <span class="number">2</span>]?.arr.filter(<span class="function">(<span class="params">itemNow</span>) =&gt;</span> itemNow.name !== <span class="string">&#x27;&#x27;</span>) || [];</span><br><span class="line">    <span class="comment">// 最底下层不判断</span></span><br><span class="line">    <span class="keyword">if</span> (upFloor.length === <span class="number">0</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">let</span> midArr = [];</span><br><span class="line">    upFloor.map(<span class="function">(<span class="params">itemNowM</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> position = itemNowM.position;</span><br><span class="line">        <span class="keyword">const</span> a = [position[<span class="number">0</span>] + <span class="number">1</span>, position[<span class="number">1</span>], position[<span class="number">2</span>]];</span><br><span class="line">        <span class="keyword">const</span> b = [position[<span class="number">0</span>] + <span class="number">1</span>, position[<span class="number">1</span>], position[<span class="number">2</span>] + <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">const</span> c = [position[<span class="number">0</span>] + <span class="number">1</span>, position[<span class="number">1</span>] + <span class="number">1</span>, position[<span class="number">2</span>]];</span><br><span class="line">        <span class="keyword">const</span> d = [position[<span class="number">0</span>] + <span class="number">1</span>, position[<span class="number">1</span>] + <span class="number">1</span>, position[<span class="number">2</span>] + <span class="number">1</span>];</span><br><span class="line">        midArr.push(a);</span><br><span class="line">        midArr.push(b);</span><br><span class="line">        midArr.push(c);</span><br><span class="line">        midArr.push(d);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> isCanClick =</span><br><span class="line">        midArr.filter(<span class="function">(<span class="params">mItem</span>) =&gt;</span> nowItem.position[<span class="number">0</span>] === mItem[<span class="number">0</span>] &amp;&amp; nowItem.position[<span class="number">1</span>] === mItem[<span class="number">1</span>] &amp;&amp; nowItem.position[<span class="number">2</span>] === mItem[<span class="number">2</span>])</span><br><span class="line">            .length === <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> isCanClick;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>这样就可以完美生成我们的游戏区域了</strong></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&lt;div className=<span class="string">&quot;gameArea&quot;</span>&gt;</span><br><span class="line">               &#123;gameItemsArr.map(<span class="function">(<span class="params">item, index</span>) =&gt;</span> &#123;</span><br><span class="line">                   <span class="keyword">return</span> (</span><br><span class="line">                       &lt;div</span><br><span class="line">                           className=<span class="string">&quot;gameAreaFloor&quot;</span></span><br><span class="line">                           key=&#123;item.zIndex&#125;</span><br><span class="line">                           style=&#123;</span><br><span class="line">                               item.arr.filter(<span class="function">(<span class="params">k</span>) =&gt;</span> k.name !== <span class="string">&#x27;&#x27;</span>).length !== <span class="number">0</span></span><br><span class="line">                                   ? &#123;<span class="attr">zIndex</span>: item.zIndex, <span class="attr">width</span>: item.width, <span class="attr">height</span>: item.width&#125;</span><br><span class="line">                                   : &#123;<span class="attr">display</span>: <span class="string">&#x27;none&#x27;</span>&#125;</span><br><span class="line">                           &#125;&gt;</span><br><span class="line">                           &#123;item.arr.map(<span class="function">(<span class="params">gameItem, gameIndex</span>) =&gt;</span> &#123;</span><br><span class="line">                               <span class="keyword">return</span> (</span><br><span class="line">                                   &lt;div</span><br><span class="line">                                       onClick=&#123;<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                                           <span class="keyword">if</span> (gameItem.name === <span class="string">&#x27;&#x27;</span> || !isItemCanClick(gameItem, gameItemsArr)) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">                                           moveItem(gameItem, gameIndex, index);</span><br><span class="line">                                       &#125;&#125;</span><br><span class="line">                                       key=&#123;gameIndex&#125;</span><br><span class="line">                                       style=&#123;</span><br><span class="line">                                           gameItem.name === <span class="string">&#x27;&#x27;</span></span><br><span class="line">                                               ? &#123;<span class="attr">opacity</span>: <span class="number">0</span>, <span class="attr">pointerEvents</span>: <span class="string">&#x27;none&#x27;</span>&#125;</span><br><span class="line">                                               : isItemCanClick(gameItem, gameItemsArr)</span><br><span class="line">                                               ? &#123;<span class="attr">background</span>: gameItem.color&#125;</span><br><span class="line">                                               : &#123;<span class="attr">background</span>: <span class="string">&#x27;#c2cbcbee&#x27;</span>&#125;</span><br><span class="line">                                       &#125;</span><br><span class="line">                                       className=<span class="string">&quot;gameItem&quot;</span>&gt;</span><br><span class="line">                                       &#123;gameItem.name&#125;</span><br><span class="line">                                   &lt;/div&gt;</span><br><span class="line">                               );</span><br><span class="line">                           &#125;)&#125;</span><br><span class="line">                       &lt;/div&gt;</span><br><span class="line">                   );</span><br><span class="line">               &#125;)&#125;</span><br><span class="line">           &lt;/div&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="3、操作判断"><a href="#3、操作判断" class="headerlink" title="3、操作判断"></a>3、操作判断</h5><p>这里就比较简单，判断当前点击的层数，和点击的<code>item</code>。</p><p>把<code>item  push</code>到操作的数组里面。</p><p>通过<code>splice</code>删除当前点击的元素并添加一个<code>name为&#39;&#39;</code>的<code>item</code></p><p>再判断当前点击的元素在不在操作的数组里，在就找到存在的数组，放到一起，不在就放到前面，</p><p>有三个一样就清除。都是通过<code>findIndex</code>和<code>splice</code></p><p>当前层级都清除完了，就进入下一关  <code>level+1</code>,重新生成游戏区域。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React, &#123;useState, useEffect&#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;itemsArr&#125; <span class="keyword">from</span> <span class="string">&#x27;./content&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./page.css&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;isItemCanClick&#125; <span class="keyword">from</span> <span class="string">&#x27;./action&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> hasThreeItem = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">const</span> GameBox = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 分数</span></span><br><span class="line">    <span class="keyword">const</span> [score, setScore] = useState(<span class="number">0</span>);</span><br><span class="line">    <span class="comment">// 第几关</span></span><br><span class="line">    <span class="keyword">const</span> [level, setLevel] = useState(<span class="number">1</span>);</span><br><span class="line">    <span class="comment">// 游戏的item</span></span><br><span class="line">    <span class="keyword">const</span> [gameItemsArr, setGameItemsArr] = useState(itemsArr(level));</span><br><span class="line">    <span class="comment">// 操作的数组</span></span><br><span class="line">    <span class="keyword">const</span> [operateArr, setOperateArr] = useState([<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>]);</span><br><span class="line">    <span class="comment">// 当前点击的item，撤回用</span></span><br><span class="line">    <span class="keyword">const</span> [nowClickItemInfo, setNowClickItemInfo] = useState([<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>]);</span><br><span class="line">    <span class="comment">// 操作次数</span></span><br><span class="line">    <span class="keyword">const</span> [isOperate, setIsOperate] = useState([<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line">    useEffect(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (operateArr.filter(<span class="function">(<span class="params">item</span>) =&gt;</span> item).length === <span class="number">7</span>) &#123;</span><br><span class="line">            alert(<span class="string">&#x27;游戏失败！&#x27;</span>);</span><br><span class="line">            <span class="built_in">window</span>.location.reload();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, [operateArr]);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 判断游戏是否下一关</span></span><br><span class="line">    useEffect(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (gameItemsArr.length === <span class="number">0</span>) &#123;</span><br><span class="line">            alert(<span class="string">`恭喜你通过第<span class="subst">$&#123;level&#125;</span>关了！！！`</span>);</span><br><span class="line">            <span class="keyword">if</span> (level === <span class="number">6</span>) &#123;</span><br><span class="line">                alert(<span class="string">&#x27;恭喜你通关了！！！&#x27;</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            setLevel(<span class="function">(<span class="params">prev</span>) =&gt;</span> prev + <span class="number">1</span>);</span><br><span class="line">            setGameItemsArr(<span class="function">(<span class="params">prev</span>) =&gt;</span> &#123;</span><br><span class="line">                prev = itemsArr(level + <span class="number">1</span>);</span><br><span class="line">                <span class="keyword">return</span> [...prev];</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, [gameItemsArr, level]);</span><br><span class="line">    <span class="comment">// 点击item</span></span><br><span class="line">    <span class="keyword">const</span> moveItem = <span class="function">(<span class="params">item, index, whichFloor</span>) =&gt;</span> &#123;</span><br><span class="line">        hasThreeItem = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">let</span> hasThreeindex = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// 记录当前的点击item信息</span></span><br><span class="line">        <span class="keyword">const</span> nowClickItem = [item, index, whichFloor];</span><br><span class="line">        setNowClickItemInfo(nowClickItem);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 放到操作区</span></span><br><span class="line">        setOperateArr(<span class="function">(<span class="params">prev</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> currentIndex = prev.findIndex(<span class="function">(<span class="params">k</span>) =&gt;</span> k &amp;&amp; k.name === item.name);</span><br><span class="line">            prev.pop();</span><br><span class="line">            <span class="keyword">if</span> (currentIndex &gt; -<span class="number">1</span>) &#123;</span><br><span class="line">                prev.splice(currentIndex, <span class="number">0</span>, item);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                prev.unshift(item);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> [...prev];</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// 操作原始数组</span></span><br><span class="line">        setGameItemsArr(<span class="function">(<span class="params">prev</span>) =&gt;</span> &#123;</span><br><span class="line">            prev[whichFloor].arr.splice(index, <span class="number">1</span>, &#123;...item, <span class="attr">name</span>: <span class="string">&#x27;&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;&#x27;</span>&#125;);</span><br><span class="line">            <span class="keyword">if</span> (prev[prev.length - <span class="number">1</span>].arr.filter(<span class="function">(<span class="params">item</span>) =&gt;</span> item.name !== <span class="string">&#x27;&#x27;</span>).length === <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> [];</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> [...prev];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判断清除逻辑</span></span><br><span class="line">        operateArr.map(<span class="function">(<span class="params">newItem, newIndex</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (newItem &amp;&amp; newItem.name === item.name) &#123;</span><br><span class="line">                hasThreeItem++;</span><br><span class="line">                hasThreeindex = newIndex;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果有三个一样的</span></span><br><span class="line">        <span class="keyword">if</span> (hasThreeItem === <span class="number">2</span>) &#123;</span><br><span class="line">            setOperateArr(<span class="function">(<span class="params">prev</span>) =&gt;</span> &#123;</span><br><span class="line">                prev.splice(hasThreeindex - <span class="number">1</span>, <span class="number">3</span>);</span><br><span class="line">                prev.push(<span class="literal">null</span>);</span><br><span class="line">                prev.push(<span class="literal">null</span>);</span><br><span class="line">                prev.push(<span class="literal">null</span>);</span><br><span class="line">                <span class="keyword">return</span> [...prev];</span><br><span class="line">            &#125;);</span><br><span class="line">            setScore(<span class="function">(<span class="params">prev</span>) =&gt;</span> prev + <span class="number">100</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        &lt;div className=<span class="string">&quot;gamebox&quot;</span>&gt;</span><br><span class="line">            &#123;<span class="comment">/* 标题区域 */</span>&#125;</span><br><span class="line">            &lt;div className=<span class="string">&quot;titleArea&quot;</span>&gt;</span><br><span class="line">                &lt;div className=<span class="string">&quot;titleAreaTitle&quot;</span>&gt;汉字方块&lt;/div&gt;</span><br><span class="line">                &lt;div className=<span class="string">&quot;titleAreaScore&quot;</span>&gt;</span><br><span class="line">                    &lt;span&gt;分数:&lt;/span&gt;</span><br><span class="line">                    &lt;span&gt;&#123;score&#125;&lt;/span&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &#123;<span class="comment">/* 游戏区域 */</span>&#125;</span><br><span class="line">            &lt;div className=<span class="string">&quot;gameArea&quot;</span>&gt;</span><br><span class="line">                &#123;gameItemsArr.map(<span class="function">(<span class="params">item, index</span>) =&gt;</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> (</span><br><span class="line">                        &lt;div</span><br><span class="line">                            className=<span class="string">&quot;gameAreaFloor&quot;</span></span><br><span class="line">                            key=&#123;item.zIndex&#125;</span><br><span class="line">                            style=&#123;</span><br><span class="line">                                item.arr.filter(<span class="function">(<span class="params">k</span>) =&gt;</span> k.name !== <span class="string">&#x27;&#x27;</span>).length !== <span class="number">0</span></span><br><span class="line">                                    ? &#123;<span class="attr">zIndex</span>: item.zIndex, <span class="attr">width</span>: item.width, <span class="attr">height</span>: item.width&#125;</span><br><span class="line">                                    : &#123;<span class="attr">display</span>: <span class="string">&#x27;none&#x27;</span>&#125;</span><br><span class="line">                            &#125;&gt;</span><br><span class="line">                            &#123;item.arr.map(<span class="function">(<span class="params">gameItem, gameIndex</span>) =&gt;</span> &#123;</span><br><span class="line">                                <span class="keyword">return</span> (</span><br><span class="line">                                    &lt;div</span><br><span class="line">                                        onClick=&#123;<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                                            <span class="keyword">if</span> (gameItem.name === <span class="string">&#x27;&#x27;</span> || !isItemCanClick(gameItem, gameItemsArr)) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">                                            moveItem(gameItem, gameIndex, index);</span><br><span class="line">                                        &#125;&#125;</span><br><span class="line">                                        key=&#123;gameIndex&#125;</span><br><span class="line">                                        style=&#123;</span><br><span class="line">                                            gameItem.name === <span class="string">&#x27;&#x27;</span></span><br><span class="line">                                                ? &#123;<span class="attr">opacity</span>: <span class="number">0</span>, <span class="attr">pointerEvents</span>: <span class="string">&#x27;none&#x27;</span>&#125;</span><br><span class="line">                                                : isItemCanClick(gameItem, gameItemsArr)</span><br><span class="line">                                                ? &#123;<span class="attr">background</span>: gameItem.color&#125;</span><br><span class="line">                                                : &#123;<span class="attr">background</span>: <span class="string">&#x27;#c2cbcbee&#x27;</span>&#125;</span><br><span class="line">                                        &#125;</span><br><span class="line">                                        className=<span class="string">&quot;gameItem&quot;</span>&gt;</span><br><span class="line">                                        &#123;gameItem.name&#125;</span><br><span class="line">                                    &lt;/div&gt;</span><br><span class="line">                                );</span><br><span class="line">                            &#125;)&#125;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                    );</span><br><span class="line">                &#125;)&#125;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">            &#123;<span class="comment">/* 下方格子 */</span>&#125;</span><br><span class="line">            &lt;div className=<span class="string">&quot;operateArea&quot;</span>&gt;</span><br><span class="line">                &#123;operateArr.map(<span class="function">(<span class="params">item, index</span>) =&gt;</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (!item) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">key</span>=<span class="string">&#123;index&#125;</span> <span class="attr">className</span>=<span class="string">&quot;gameItemOperate&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">return</span> (</span><br><span class="line">                            &lt;div key=&#123;index&#125; style=&#123;&#123;<span class="attr">background</span>: item.color&#125;&#125; className=<span class="string">&quot;gameItemOperate&quot;</span>&gt;</span><br><span class="line">                                &#123;item.name&#125;</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                        );</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)&#125;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div className=<span class="string">&quot;operateBtnArr&quot;</span>&gt;</span><br><span class="line">                &lt;span</span><br><span class="line">                    className=<span class="string">&quot;operateBtn&quot;</span></span><br><span class="line">                    style=&#123;isOperate[<span class="number">0</span>] === <span class="number">1</span> ? &#123;<span class="attr">background</span>: <span class="string">&#x27;grey&#x27;</span>&#125; : &#123;&#125;&#125;</span><br><span class="line">                    onClick=&#123;<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                        <span class="keyword">if</span> (isOperate[<span class="number">0</span>] === <span class="number">1</span>) <span class="keyword">return</span>;</span><br><span class="line">                        setGameItemsArr(<span class="function">(<span class="params">prev</span>) =&gt;</span> &#123;</span><br><span class="line">                            prev = itemsArr(level);</span><br><span class="line">                            <span class="keyword">return</span> [...prev];</span><br><span class="line">                        &#125;);</span><br><span class="line">                        setIsOperate(<span class="function">(<span class="params">prev</span>) =&gt;</span> &#123;</span><br><span class="line">                            prev[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">                            <span class="keyword">return</span> [...prev];</span><br><span class="line">                        &#125;);</span><br><span class="line">                    &#125;&#125;&gt;</span><br><span class="line">                    随机</span><br><span class="line">                &lt;/span&gt;</span><br><span class="line">                &lt;span</span><br><span class="line">                    className=<span class="string">&quot;operateBtn&quot;</span></span><br><span class="line">                    style=&#123;isOperate[<span class="number">1</span>] === <span class="number">1</span> ? &#123;<span class="attr">background</span>: <span class="string">&#x27;grey&#x27;</span>&#125; : &#123;&#125;&#125;</span><br><span class="line">                    onClick=&#123;<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                        <span class="keyword">if</span> (isOperate[<span class="number">1</span>] === <span class="number">1</span>) <span class="keyword">return</span>;</span><br><span class="line">                        setOperateArr(<span class="function">(<span class="params">prev</span>) =&gt;</span> &#123;</span><br><span class="line">                            <span class="keyword">const</span> lastIndex = prev.findIndex(<span class="function">(<span class="params">item</span>) =&gt;</span> item &amp;&amp; item.name === nowClickItemInfo[<span class="number">0</span>].name);</span><br><span class="line">                            prev.splice(lastIndex, <span class="number">1</span>);</span><br><span class="line">                            <span class="keyword">return</span> [...prev];</span><br><span class="line">                        &#125;);</span><br><span class="line">                        setGameItemsArr(<span class="function">(<span class="params">prev</span>) =&gt;</span> &#123;</span><br><span class="line">                            prev[nowClickItemInfo[<span class="number">2</span>]].arr[nowClickItemInfo[<span class="number">1</span>]] = nowClickItemInfo[<span class="number">0</span>];</span><br><span class="line">                            <span class="keyword">return</span> [...prev];</span><br><span class="line">                        &#125;);</span><br><span class="line"></span><br><span class="line">                        setIsOperate(<span class="function">(<span class="params">prev</span>) =&gt;</span> &#123;</span><br><span class="line">                            prev[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">                            <span class="keyword">return</span> [...prev];</span><br><span class="line">                        &#125;);</span><br><span class="line">                    &#125;&#125;&gt;</span><br><span class="line">                    撤回</span><br><span class="line">                &lt;/span&gt;</span><br><span class="line">                &lt;span className=<span class="string">&quot;operateBtn&quot;</span>&gt;加三个格子&lt;/span&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> GameBox;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="%E6%B8%B8%E6%88%8F%E7%95%8C%E9%9D%A2"><img src="https://s1.ax1x.com/2023/02/06/pScPKgK.png" alt="pScPKgK.png"></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;实现“羊了个羊”消消乐（react）&quot;&gt;&lt;a href=&quot;#实现“羊了个羊”消消乐（react）&quot; class=&quot;headerlink&quot; title=&quot;实现“羊了个羊”消消乐（react）&quot;&gt;&lt;/a&gt;实现“羊了个羊”消消乐（react）&lt;/h3&gt;&lt;p&gt;体验地址：&lt;</summary>
      
    
    
    
    
    <category term="React" scheme="https://gitee.com/shimmer612/myBlog/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>浏览器相同地址不同标签页的`localStorage、sessionStorage、cookie`</title>
    <link href="https://gitee.com/shimmer612/myBlog/2022/09/09/2022-09-09-%E6%B5%8F%E8%A7%88%E5%99%A8%E7%9B%B8%E5%90%8C%E5%9C%B0%E5%9D%80%E4%B8%8D%E5%90%8C%E6%A0%87%E7%AD%BE%E9%A1%B5%E7%9A%84localStorage%E3%80%81sessionStorage%E3%80%81cookie/"/>
    <id>https://gitee.com/shimmer612/myBlog/2022/09/09/2022-09-09-%E6%B5%8F%E8%A7%88%E5%99%A8%E7%9B%B8%E5%90%8C%E5%9C%B0%E5%9D%80%E4%B8%8D%E5%90%8C%E6%A0%87%E7%AD%BE%E9%A1%B5%E7%9A%84localStorage%E3%80%81sessionStorage%E3%80%81cookie/</id>
    <published>2022-09-08T16:00:00.000Z</published>
    <updated>2023-02-05T11:42:20.257Z</updated>
    
    <content type="html"><![CDATA[<h3 id="浏览器相同地址不同标签页的localStorage、sessionStorage、cookie"><a href="#浏览器相同地址不同标签页的localStorage、sessionStorage、cookie" class="headerlink" title="浏览器相同地址不同标签页的localStorage、sessionStorage、cookie"></a>浏览器相同地址不同标签页的<code>localStorage、sessionStorage、cookie</code></h3><h5 id="1、同样的地址打开多个不同的标签页"><a href="#1、同样的地址打开多个不同的标签页" class="headerlink" title="1、同样的地址打开多个不同的标签页"></a>1、同样的地址打开多个不同的标签页</h5><p>1、<code>localStorage</code>共用</p><p>2、<code>cookie</code>共用</p><p>3、<code>sessionStorage</code>不共用</p><h5 id="2、关闭浏览器或者标签页"><a href="#2、关闭浏览器或者标签页" class="headerlink" title="2、关闭浏览器或者标签页"></a>2、关闭浏览器或者标签页</h5><p>1、<code>sessionStorage</code>清除</p><p>2、<code>localStorage</code>不清除，需要手动清除否则一直保留</p><p>3、<code>cookie</code>关闭标签页不清除，关闭浏览器清除</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;浏览器相同地址不同标签页的localStorage、sessionStorage、cookie&quot;&gt;&lt;a href=&quot;#浏览器相同地址不同标签页的localStorage、sessionStorage、cookie&quot; class=&quot;headerlink&quot; title</summary>
      
    
    
    
    
    <category term="tips" scheme="https://gitee.com/shimmer612/myBlog/tags/tips/"/>
    
  </entry>
  
  <entry>
    <title>react自定义hook,useWebSocket</title>
    <link href="https://gitee.com/shimmer612/myBlog/2022/08/09/2022-08-09-react%E8%87%AA%E5%AE%9A%E4%B9%89hook,useWebSocket/"/>
    <id>https://gitee.com/shimmer612/myBlog/2022/08/09/2022-08-09-react%E8%87%AA%E5%AE%9A%E4%B9%89hook,useWebSocket/</id>
    <published>2022-08-08T16:00:00.000Z</published>
    <updated>2023-02-05T11:42:48.273Z</updated>
    
    <content type="html"><![CDATA[<h3 id="react自定义hook-useWebSocket"><a href="#react自定义hook-useWebSocket" class="headerlink" title="react自定义hook,useWebSocket"></a>react自定义hook,useWebSocket</h3><h4 id="1、描述"><a href="#1、描述" class="headerlink" title="1、描述"></a>1、描述</h4><p><strong>本来项目的告警和消息提醒是用的接口30秒调用一次，这次要改成webSocket传输。</strong></p><p>因为前端是用的https，后端用的http，后端的socket只支持<code>ws</code>不支持<code>wss</code>,这里使用了<code>webpack-dev-server</code>的<code>proxy</code>代理了一下。</p><p><strong>target：ws目标地址、pathRewrite:地址重写，这里是把/aapp_socket重写成aapp/websocket,ws：是否开启socket,secure： 默认情况下不接收转发到https的服务器上，如果希望支持，可以设置为false ，changeOrigin：是否跨域</strong>。差不多就这个意思</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;/aapp_socket&#x27;</span>: &#123;</span><br><span class="line">              target: <span class="string">`ws://xxx.xxx.xxx/`</span>,</span><br><span class="line">              pathRewrite: &#123;</span><br><span class="line">                  <span class="string">&#x27;^/aapp_socket&#x27;</span>: <span class="string">&#x27;aapp/websocket&#x27;</span>,</span><br><span class="line">              &#125;,</span><br><span class="line">              ws: <span class="literal">true</span>,</span><br><span class="line">              secure: <span class="literal">false</span>,</span><br><span class="line">              changeOrigin: <span class="literal">true</span>,</span><br><span class="line">          &#125;,</span><br></pre></td></tr></table></figure><p>使用连接的地址:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">`wss://localhost:3000/aapp_socket`</span>;</span><br></pre></td></tr></table></figure><p>实际的访问的地址就是：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">`ws://xxx.xxx.xxx/aapp/websocket</span></span><br></pre></td></tr></table></figure><h4 id="2、代码"><a href="#2、代码" class="headerlink" title="2、代码"></a>2、代码</h4><p>这里socket,没有配置心跳监测，还是通过我主动去推送来获取信息。这里是获取告警数和消息数量，</p><p>首先绑定websocket的事件。主要就是在<strong>message</strong>的事件中，连接成功后端返回的是sucess,就不做操作。后面就是判断返回的消息格式是否正确，如果不正确就重新连接。</p><p>还可以把获取<strong>消息的时间间隔，和重新连接间隔，地址等</strong>变量抽出来，作为参数传进来。</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123;useCallback, useRef, useState, useEffect&#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> token = <span class="built_in">window</span>.localStorage.getItem(<span class="string">&#x27;authorization&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> userId = <span class="built_in">JSON</span>.parse(<span class="built_in">window</span>.localStorage.getItem(<span class="string">&#x27;userInfo&#x27;</span>) || <span class="string">&#x27;&#x27;</span>)?.id;</span><br><span class="line"><span class="comment">// 获取告警数量</span></span><br><span class="line"><span class="keyword">const</span> UNREAD_WARN_COUNT = <span class="string">&#x27;UNREAD_WARN_COUNT&#x27;</span>;</span><br><span class="line"><span class="comment">// 获取消息数量</span></span><br><span class="line"><span class="keyword">const</span> UNREAD_MSG_COUNT = <span class="string">&#x27;UNREAD_MSG_COUNT&#x27;</span>;</span><br><span class="line"><span class="comment">// 获取消息的间隔</span></span><br><span class="line"><span class="keyword">const</span> INT_TIME = <span class="number">5000</span>;</span><br><span class="line"><span class="comment">// websocket状态</span></span><br><span class="line"><span class="keyword">const</span> webSocketStatus = &#123;</span><br><span class="line">    CONNECTING: <span class="number">0</span>,</span><br><span class="line">    OPEN: <span class="number">1</span>,</span><br><span class="line">    CLOSING: <span class="number">2</span>,</span><br><span class="line">    CLOSED: <span class="number">3</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> useWebSocket = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> [reset, setReset] = useState&lt;<span class="built_in">boolean</span>&gt;(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">const</span> socket = useRef&lt;WebSocket&gt;();</span><br><span class="line">    <span class="keyword">const</span> sendCount = useRef&lt;<span class="built_in">number</span>&gt;(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">const</span> [alarmCount, setAlarmCount] = useState&lt;<span class="built_in">number</span>&gt;(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">const</span> [messageCount, setMessageCount] = useState&lt;<span class="built_in">number</span>&gt;(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 开启事件,主动获取数据</span></span><br><span class="line">    <span class="keyword">const</span> socketOnOpen = useCallback(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 判断连接状态是不是open</span></span><br><span class="line">        <span class="keyword">if</span> (socket?.current?.readyState === webSocketStatus.OPEN) &#123;</span><br><span class="line">            <span class="comment">// 第一次加载触发一次</span></span><br><span class="line">            socket?.current?.send(<span class="built_in">JSON</span>.stringify(&#123;<span class="attr">businessKey</span>: [UNREAD_MSG_COUNT, UNREAD_WARN_COUNT]&#125;));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">const</span> timer = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (socket?.current?.readyState === webSocketStatus.OPEN) &#123;</span><br><span class="line">                socket?.current?.send(<span class="built_in">JSON</span>.stringify(&#123;<span class="attr">businessKey</span>: [UNREAD_MSG_COUNT, UNREAD_WARN_COUNT]&#125;));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, INT_TIME);</span><br><span class="line">        <span class="comment">// 返回信息出错清除定时器</span></span><br><span class="line">        <span class="keyword">if</span> (sendCount.current === <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="built_in">clearInterval</span>(timer);</span><br><span class="line">            setReset(<span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, [sendCount]);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 关闭事件重新连接</span></span><br><span class="line">    <span class="keyword">const</span> socketOnClose = useCallback(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        setReset(<span class="literal">true</span>);</span><br><span class="line">    &#125;, []);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 出错事件</span></span><br><span class="line">    <span class="keyword">const</span> socketOnError = useCallback(<span class="function">(<span class="params">err: <span class="built_in">any</span></span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;err: &#x27;</span>, err);</span><br><span class="line">    &#125;, []);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 收发信息</span></span><br><span class="line">    <span class="keyword">const</span> socketOnMessage = useCallback(</span><br><span class="line">        (e: <span class="built_in">any</span>) =&gt; &#123;</span><br><span class="line">            <span class="keyword">if</span> (e.data === <span class="string">&#x27;success&#x27;</span>) <span class="keyword">return</span>;</span><br><span class="line">            <span class="keyword">const</span> alarmCountObj = <span class="built_in">JSON</span>.parse(e.data);</span><br><span class="line">            <span class="keyword">const</span> paramNameArr = <span class="built_in">Object</span>.keys(alarmCountObj);</span><br><span class="line">            <span class="comment">// 判断返回告警保持连接否则断开连接</span></span><br><span class="line">            <span class="keyword">if</span> (paramNameArr[<span class="number">1</span>] === <span class="string">&#x27;UNREAD_WARN_COUNT&#x27;</span>) &#123;</span><br><span class="line">                sendCount.current += <span class="number">1</span>;</span><br><span class="line">                setAlarmCount(alarmCountObj.UNREAD_WARN_COUNT);</span><br><span class="line">                setMessageCount(alarmCountObj.UNREAD_MSG_COUNT);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                sendCount.current = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        [sendCount],</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化连接socket</span></span><br><span class="line">    <span class="keyword">const</span> socketInit = useCallback(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> scoketUrl = <span class="string">`wss://<span class="subst">$&#123;<span class="built_in">window</span>.location.host&#125;</span>/aapp_socket/<span class="subst">$&#123;userId&#125;</span>/<span class="subst">$&#123;token&#125;</span>`</span>;</span><br><span class="line">            <span class="keyword">const</span> socketObj = <span class="keyword">new</span> WebSocket(scoketUrl);</span><br><span class="line">            socketObj.addEventListener(<span class="string">&#x27;close&#x27;</span>, socketOnClose);</span><br><span class="line">            socketObj.addEventListener(<span class="string">&#x27;error&#x27;</span>, socketOnError);</span><br><span class="line">            socketObj.addEventListener(<span class="string">&#x27;message&#x27;</span>, socketOnMessage);</span><br><span class="line">            socketObj.addEventListener(<span class="string">&#x27;open&#x27;</span>, socketOnOpen);</span><br><span class="line">            socket.current = socketObj;</span><br><span class="line">            sendCount.current = <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&#x27;err: &#x27;</span>, err);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, [socketOnClose, socketOnError, socketOnMessage, socketOnOpen]);</span><br><span class="line">    <span class="comment">// 初始化连接socket</span></span><br><span class="line">    useEffect(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        socketInit();</span><br><span class="line">    &#125;, [socketInit]);</span><br><span class="line">    <span class="comment">// 断线重连</span></span><br><span class="line">    useEffect(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!reset) <span class="keyword">return</span>;</span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            socketInit();</span><br><span class="line">            setReset(<span class="literal">false</span>);</span><br><span class="line">        &#125;, <span class="number">30000</span>);</span><br><span class="line">    &#125;, [reset, socketInit]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> [alarmCount, messageCount];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> useWebSocket;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>使用</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//socket连接</span></span><br><span class="line"> <span class="keyword">const</span> [alarmCount, messageCount] = useWebSocket();</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;react自定义hook-useWebSocket&quot;&gt;&lt;a href=&quot;#react自定义hook-useWebSocket&quot; class=&quot;headerlink&quot; title=&quot;react自定义hook,useWebSocket&quot;&gt;&lt;/a&gt;react自定义hoo</summary>
      
    
    
    
    
    <category term="React" scheme="https://gitee.com/shimmer612/myBlog/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>Echarts柱状极坐标风向玫瑰图的实现</title>
    <link href="https://gitee.com/shimmer612/myBlog/2022/05/19/2022-05-19-echarts%E5%AE%9E%E7%8E%B0%E9%A3%8E%E5%90%91%E7%8E%AB%E7%91%B0%E5%9B%BE/"/>
    <id>https://gitee.com/shimmer612/myBlog/2022/05/19/2022-05-19-echarts%E5%AE%9E%E7%8E%B0%E9%A3%8E%E5%90%91%E7%8E%AB%E7%91%B0%E5%9B%BE/</id>
    <published>2022-05-18T16:00:00.000Z</published>
    <updated>2023-02-06T01:11:44.197Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Echarts柱状极坐标风向玫瑰图的实现"><a href="#Echarts柱状极坐标风向玫瑰图的实现" class="headerlink" title="Echarts柱状极坐标风向玫瑰图的实现"></a>Echarts柱状极坐标风向玫瑰图的实现</h2><h3 id="echarts代码"><a href="#echarts代码" class="headerlink" title="echarts代码"></a>echarts代码</h3><p>本来看到玫瑰图，就看到了echarts示例中饼图的南丁格尔玫瑰图。</p><p>发现不太像。后来发现是柱状图极坐标系堆叠图。</p><p>图例是自己实现的，因为是绑定到单个数据上。</p><p>eharts的配置项真的太难了。找的很头疼，实现的也很头疼。</p><p>效果如下：</p><p><a href="https://imgse.com/i/pScPFuF"><img src="https://s1.ax1x.com/2023/02/06/pScPFuF.md.png" alt="pScPFuF.md.png"></a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import React, &#123;FC, useEffect, useState&#125; from &#39;react&#39;;</span><br><span class="line">import ReactECharts from &#39;echarts-for-react&#39;;</span><br><span class="line">import styles from &#39;..&#x2F;styles.module.scss&#39;;</span><br><span class="line">import &#123;color, pathArr&#125; from &#39;..&#x2F;constant&#39;;</span><br><span class="line"></span><br><span class="line">interface Title &#123;</span><br><span class="line">  title: string;</span><br><span class="line">  flag: number;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const EchartsPageB: FC&lt;any&gt; &#x3D; (&#123;picData&#125;) &#x3D;&gt; &#123;</span><br><span class="line">  const [titleArr, setTitleArr] &#x3D; useState&lt;Title[]&gt;([]);</span><br><span class="line">  const [echartsData, setEchartsData] &#x3D; useState&lt;any[]&gt;([]);</span><br><span class="line">  const [page, setPage] &#x3D; useState&lt;number&gt;(1);</span><br><span class="line">  const [currentPage, setCurrentPage] &#x3D; useState&lt;number&gt;(1);</span><br><span class="line"></span><br><span class="line">  useEffect(() &#x3D;&gt; &#123;</span><br><span class="line">    setEchartsData(picData.series);</span><br><span class="line">    const count &#x3D; picData.series.length % 12;</span><br><span class="line">    if (count &#x3D;&#x3D;&#x3D; 0) &#123;</span><br><span class="line">      setPage(picData.series.length &#x2F; 12);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      const str &#x3D; String(picData.series.length &#x2F; 12);</span><br><span class="line">      setPage(Number(parseInt(str, 10)) + 1);</span><br><span class="line">    &#125;</span><br><span class="line">    setTitleArr(picData.series.map((item: Title) &#x3D;&gt; (&#123;title: item.title, flag: 1&#125;)));</span><br><span class="line">  &#125;, [picData]);</span><br><span class="line"></span><br><span class="line">  const option &#x3D; &#123;</span><br><span class="line">    grid: &#123;</span><br><span class="line">      left: 50,</span><br><span class="line">      right: 50,</span><br><span class="line">      bottom: 0,</span><br><span class="line">    &#125;,</span><br><span class="line">    angleAxis: &#123;</span><br><span class="line">      type: &#39;category&#39;,</span><br><span class="line">      axisTick: false,</span><br><span class="line">      boundaryGap: false,</span><br><span class="line">      splitLine: &#123;</span><br><span class="line">        show: true,</span><br><span class="line">        lineStyle: &#123;</span><br><span class="line">          color: &#39;#8d979d&#39;,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">      axisLabel: &#123;color: &#39;#8d979d&#39;&#125;,</span><br><span class="line">      data: pathArr,</span><br><span class="line">    &#125;,</span><br><span class="line">    tooltip: &#123;</span><br><span class="line">      trigger: &#39;item&#39;,</span><br><span class="line">      position(pos: number[], params: any, dom: any, rect: any, size: any) &#123;</span><br><span class="line">        &#x2F;&#x2F; 鼠标在左侧时 tooltip 显示到右侧，鼠标在右侧时 tooltip 显示到左侧。</span><br><span class="line">        interface Obj &#123;</span><br><span class="line">          left: string | number;</span><br><span class="line">          top: number | string;</span><br><span class="line">          bottom: number | string;</span><br><span class="line">        &#125;</span><br><span class="line">        const obj: Obj &#x3D; &#123;left: &#39;&#39;, top: &#39;&#39;, bottom: &#39;&#39;&#125;;</span><br><span class="line">        const count: boolean &#x3D; pos[1] &lt; size.viewSize[1] &#x2F; 2;</span><br><span class="line">        if (count) &#123;</span><br><span class="line">          obj.bottom &#x3D; 10;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          obj.top &#x3D; 10;</span><br><span class="line">        &#125;</span><br><span class="line">        obj.left &#x3D; pos[0] &lt; size.viewSize[0] &#x2F; 2 ? pos[0] : pos[0] - size.contentSize[0];</span><br><span class="line">        return obj;</span><br><span class="line">      &#125;,</span><br><span class="line">      backgroundColor: &#39;rgba(1,9,13,0.7)&#39;,</span><br><span class="line">      borderWidth: 1,</span><br><span class="line">      borderColor: &#39;#2E3C44&#39;,</span><br><span class="line">      formatter: (params: any) &#x3D;&gt; &#123;</span><br><span class="line">        const data &#x3D; picData.series[params.dataIndex].tips[0];</span><br><span class="line">        const infoHtml &#x3D; &#96;&lt;div style&#x3D;&quot;width:250px;padding:0;&quot;&gt;</span><br><span class="line">            &lt;div style&#x3D;&quot;color:white;padding:10px 9px 10px 9px;font-size:16px;font-weight:bold&quot;&gt;风向玫瑰图&lt;&#x2F;div&gt;</span><br><span class="line">            &lt;div  class&#x3D;$&#123;styles.tooltipHr&#125;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">            &lt;div class&#x3D;$&#123;styles.styleA&#125;&gt;</span><br><span class="line">              &lt;span class&#x3D;$&#123;styles.styleE&#125;&gt;风向:&lt;&#x2F;span&gt;</span><br><span class="line">              &lt;div class&#x3D;$&#123;styles.styleB&#125;&gt;</span><br><span class="line">                &lt;span class&#x3D;$&#123;styles.styleC&#125;&gt;$&#123;data[0].path&#125;&lt;&#x2F;span&gt;</span><br><span class="line">                &lt;span class&#x3D;$&#123;styles.styleD&#125;&gt;&lt;&#x2F;span&gt;</span><br><span class="line">              &lt;&#x2F;div&gt;</span><br><span class="line">            &lt;&#x2F;div&gt;</span><br><span class="line">            &lt;div class&#x3D;$&#123;styles.styleA&#125;&gt;</span><br><span class="line">              &lt;span class&#x3D;$&#123;styles.styleE&#125;&gt;风速区间:&lt;&#x2F;span&gt;</span><br><span class="line">              &lt;div class&#x3D;$&#123;styles.styleB&#125;&gt;</span><br><span class="line">                &lt;span class&#x3D;$&#123;styles.styleC&#125;&gt;$&#123;data[2].value&#125;&lt;&#x2F;span&gt;</span><br><span class="line">                &lt;span class&#x3D;$&#123;styles.styleD&#125;&gt;m&#x2F;s&lt;&#x2F;span&gt;</span><br><span class="line">              &lt;&#x2F;div&gt;</span><br><span class="line">              &lt;&#x2F;div&gt;</span><br><span class="line">            &lt;div class&#x3D;$&#123;styles.styleA&#125;&gt;</span><br><span class="line">              &lt;span class&#x3D;$&#123;styles.styleE&#125;&gt;频次:&lt;&#x2F;span&gt;</span><br><span class="line">              &lt;div class&#x3D;$&#123;styles.styleB&#125;&gt;</span><br><span class="line">               &lt;span class&#x3D;$&#123;styles.styleC&#125;&gt;$&#123;data[0].value&#125;&lt;&#x2F;span&gt;</span><br><span class="line">               &lt;span class&#x3D;$&#123;styles.styleD&#125;&gt;次&lt;&#x2F;span&gt;</span><br><span class="line">              &lt;&#x2F;div&gt;  </span><br><span class="line">            &lt;&#x2F;div&gt;</span><br><span class="line">            &lt;div class&#x3D;$&#123;styles.styleA&#125;&gt;</span><br><span class="line">              &lt;span class&#x3D;$&#123;styles.styleE&#125;&gt;频次占比:&lt;&#x2F;span&gt;</span><br><span class="line">              &lt;div class&#x3D;$&#123;styles.styleB&#125;&gt;</span><br><span class="line">               &lt;span class&#x3D;$&#123;styles.styleC&#125;&gt;$&#123;data[3].value&#125;&lt;&#x2F;span&gt;</span><br><span class="line">               &lt;span class&#x3D;$&#123;styles.styleD&#125;&gt;%&lt;&#x2F;span&gt;</span><br><span class="line">              &lt;&#x2F;div&gt; </span><br><span class="line">            &lt;&#x2F;div&gt;</span><br><span class="line">           </span><br><span class="line">          &lt;&#x2F;div&gt;&#96;;</span><br><span class="line"></span><br><span class="line">        return infoHtml;</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    polar: &#123;</span><br><span class="line">      radius: &#39;80%&#39;,</span><br><span class="line">      center: [&#39;42%&#39;, &#39;50%&#39;],</span><br><span class="line">    &#125;,</span><br><span class="line">    radiusAxis: &#123;&#125;,</span><br><span class="line">    series: [</span><br><span class="line">      &#123;</span><br><span class="line">        type: &#39;bar&#39;,</span><br><span class="line">        data: echartsData.map((item: any) &#x3D;&gt; &#123;</span><br><span class="line">          const pathIndex &#x3D; pathArr.findIndex((k) &#x3D;&gt; k &#x3D;&#x3D;&#x3D; item.tips[0][0].path);</span><br><span class="line">          const newValue &#x3D; item.values[0];</span><br><span class="line">          const dataArr &#x3D; [newValue, pathIndex];</span><br><span class="line">          return dataArr;</span><br><span class="line">        &#125;),</span><br><span class="line">        coordinateSystem: &#39;polar&#39;,</span><br><span class="line">        colorBy: &#39;data&#39;,</span><br><span class="line">        stack: &#39;path&#39;,</span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">    color,</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  const changeLegend &#x3D; (item: Title, index: number) &#x3D;&gt; &#123;</span><br><span class="line">    if (item.flag &#x3D;&#x3D;&#x3D; 1) &#123;</span><br><span class="line">      const newTitleArr &#x3D; titleArr;</span><br><span class="line">      newTitleArr[index].flag &#x3D; 0;</span><br><span class="line">      setTitleArr(newTitleArr);</span><br><span class="line"></span><br><span class="line">      const newArr &#x3D; echartsData.map((k: any, j: number) &#x3D;&gt; &#123;</span><br><span class="line">        const obj &#x3D; &#123;...k&#125;;</span><br><span class="line">        if (index &#x3D;&#x3D;&#x3D; j) &#123;</span><br><span class="line">          obj.values &#x3D; [0];</span><br><span class="line">        &#125;</span><br><span class="line">        return obj;</span><br><span class="line">      &#125;);</span><br><span class="line">      setEchartsData(Object.assign([...newArr]));</span><br><span class="line">    &#125; else if (item.flag &#x3D;&#x3D;&#x3D; 0) &#123;</span><br><span class="line">      const newTitleArr &#x3D; titleArr;</span><br><span class="line">      newTitleArr[index].flag &#x3D; 1;</span><br><span class="line">      setTitleArr(newTitleArr);</span><br><span class="line">      const arr &#x3D; picData.series.filter((k: any) &#x3D;&gt; k.title &#x3D;&#x3D;&#x3D; item.title);</span><br><span class="line">      const newArr &#x3D; echartsData.map((x: any, j: number) &#x3D;&gt; &#123;</span><br><span class="line">        const obj &#x3D; &#123;...x&#125;;</span><br><span class="line">        if (index &#x3D;&#x3D;&#x3D; j) &#123;</span><br><span class="line">          obj.values &#x3D; arr[0].values;</span><br><span class="line">        &#125;</span><br><span class="line">        return obj;</span><br><span class="line">      &#125;);</span><br><span class="line">      setEchartsData(Object.assign([...newArr]));</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  return (</span><br><span class="line">    &lt;div className&#x3D;&#123;styles.windRose&#125;&gt;</span><br><span class="line">      &lt;div className&#x3D;&#123;styles.title&#125;&gt;</span><br><span class="line">        &lt;span className&#x3D;&#123;styles.dot&#125; &#x2F;&gt;</span><br><span class="line">        &lt;span className&#x3D;&#123;styles.stationName&#125;&gt;&#123;picData.title&#125;&lt;&#x2F;span&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;ReactECharts option&#x3D;&#123;option&#125; style&#x3D;&#123;&#123;height: &#39;400px&#39;&#125;&#125; &#x2F;&gt;</span><br><span class="line">      &lt;div className&#x3D;&#123;styles.legend&#125;&gt;</span><br><span class="line">        &#123;titleArr.map((item: Title, index: number) &#x3D;&gt; &#123;</span><br><span class="line">          if (index + 1 &gt; (currentPage - 1) * 12 &amp;&amp; index + 1 &lt; currentPage * 12) &#123;</span><br><span class="line">            return (</span><br><span class="line">              &lt;div className&#x3D;&#123;styles.legendItem&#125; key&#x3D;&#123;item.title&#125;&gt;</span><br><span class="line">                &lt;span</span><br><span class="line">                  className&#x3D;&#123;styles.legendIcon&#125;</span><br><span class="line">                  style&#x3D;&#123;&#123;background: item.flag ? color[index] : &#39;#6c7379&#39;&#125;&#125;</span><br><span class="line">                  onClick&#x3D;&#123;() &#x3D;&gt; &#123;</span><br><span class="line">                    changeLegend(item, index);</span><br><span class="line">                  &#125;&#125;</span><br><span class="line">                &#x2F;&gt;</span><br><span class="line">                &lt;span className&#x3D;&#123;styles.legendName&#125;&gt;&#123;item.title&#125;&lt;&#x2F;span&gt;</span><br><span class="line">              &lt;&#x2F;div&gt;</span><br><span class="line">            );</span><br><span class="line">          &#125;</span><br><span class="line">          return &#39;&#39;;</span><br><span class="line">        &#125;)&#125;</span><br><span class="line">        &lt;div className&#x3D;&#123;styles.changePage&#125;&gt;</span><br><span class="line">          &lt;span</span><br><span class="line">            className&#x3D;&#123;styles.changePageA&#125;</span><br><span class="line">            onClick&#x3D;&#123;() &#x3D;&gt; &#123;</span><br><span class="line">              if (currentPage &#x3D;&#x3D;&#x3D; 1) &#123;</span><br><span class="line">                return;</span><br><span class="line">              &#125;</span><br><span class="line">              setCurrentPage(currentPage - 1);</span><br><span class="line">            &#125;&#125;&gt;</span><br><span class="line">            &#123;&#39;&lt;&#39;&#125;</span><br><span class="line">          &lt;&#x2F;span&gt;</span><br><span class="line">          &lt;span className&#x3D;&#123;styles.changePageB&#125;&gt;&#123;currentPage&#125;&lt;&#x2F;span&gt;</span><br><span class="line">          &lt;span className&#x3D;&#123;styles.changePageC&#125;&gt;&#123;&#96;&#x2F; $&#123;page&#125;&#96;&#125;&lt;&#x2F;span&gt;</span><br><span class="line">          &lt;span</span><br><span class="line">            className&#x3D;&#123;styles.changePageD&#125;</span><br><span class="line">            onClick&#x3D;&#123;() &#x3D;&gt; &#123;</span><br><span class="line">              if (currentPage &#x3D;&#x3D;&#x3D; page) &#123;</span><br><span class="line">                return;</span><br><span class="line">              &#125;</span><br><span class="line">              setCurrentPage(currentPage + 1);</span><br><span class="line">            &#125;&#125;&gt;</span><br><span class="line">            &#123;&#39;&gt;&#39;&#125;</span><br><span class="line">          &lt;&#x2F;span&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">export default EchartsPageB;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="样式代码"><a href="#样式代码" class="headerlink" title="样式代码"></a>样式代码</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br></pre></td><td class="code"><pre><span class="line">  <span class="selector-class">.windRose</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">flex-direction</span>: column;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">32%</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="selector-class">.title</span> &#123;</span><br><span class="line">      <span class="attribute">background-color</span>: <span class="number">#0a445a</span>;</span><br><span class="line">      <span class="attribute">display</span>: flex;</span><br><span class="line">      <span class="attribute">align-items</span>: center;</span><br><span class="line">      <span class="attribute">border-radius</span>: <span class="number">7px</span>;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">      <span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span><br><span class="line">      <span class="selector-class">.dot</span> &#123;</span><br><span class="line">        <span class="attribute">background-color</span>: <span class="number">#097488</span>;</span><br><span class="line">        <span class="attribute">margin-left</span>: <span class="number">10px</span>;</span><br><span class="line">        <span class="attribute">margin-right</span>: <span class="number">10px</span>;</span><br><span class="line">        <span class="attribute">border-radius</span>: <span class="number">2px</span>;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">5px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">17px</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="selector-class">.stationName</span> &#123;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">17px</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.legend</span> &#123;</span><br><span class="line">      <span class="attribute">position</span>: absolute;</span><br><span class="line">      <span class="attribute">right</span>: <span class="number">0px</span>;</span><br><span class="line">      <span class="attribute">top</span>: <span class="number">60px</span>;</span><br><span class="line">      <span class="attribute">display</span>: flex;</span><br><span class="line">      <span class="attribute">flex-direction</span>: column;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">110px</span>;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">350px</span>;</span><br><span class="line">      <span class="attribute">overflow</span>: hidden;</span><br><span class="line">      <span class="selector-class">.legendItem</span> &#123;</span><br><span class="line">        <span class="attribute">display</span>: flex;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">110px</span>;</span><br><span class="line">        <span class="attribute">align-items</span>: center;</span><br><span class="line">        <span class="attribute">justify-content</span>: space-between;</span><br><span class="line">        <span class="attribute">margin-bottom</span>: <span class="number">7px</span>;</span><br><span class="line">        <span class="selector-class">.legendIcon</span> &#123;</span><br><span class="line">          <span class="attribute">width</span>: <span class="number">12px</span>;</span><br><span class="line">          <span class="attribute">height</span>: <span class="number">12px</span>;</span><br><span class="line">          <span class="attribute">border-radius</span>: <span class="number">2px</span>;</span><br><span class="line">          <span class="attribute">cursor</span>: pointer;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.legendName</span> &#123;</span><br><span class="line">          <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">          <span class="attribute">width</span>: <span class="number">80px</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="selector-class">.changePage</span> &#123;</span><br><span class="line">        <span class="attribute">display</span>: flex;</span><br><span class="line">        <span class="attribute">align-items</span>: center;</span><br><span class="line">        <span class="attribute">justify-content</span>: space-between;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">        <span class="attribute">position</span>: absolute;</span><br><span class="line">        <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">        <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">        <span class="attribute">background-color</span>: <span class="number">#0a445a</span>;</span><br><span class="line">        <span class="selector-class">.changePageA</span> &#123;</span><br><span class="line">          <span class="attribute">width</span>: <span class="number">25px</span>;</span><br><span class="line">          <span class="attribute">height</span>: <span class="number">25px</span>;</span><br><span class="line">          <span class="attribute">text-align</span>: center;</span><br><span class="line">          <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#00e4ff</span>;</span><br><span class="line">          <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span><br><span class="line">          <span class="attribute">color</span>: <span class="number">#00e4ff</span>;</span><br><span class="line">          <span class="attribute">cursor</span>: pointer;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.changePageB</span> &#123;</span><br><span class="line">          <span class="attribute">width</span>: <span class="number">25px</span>;</span><br><span class="line">          <span class="attribute">height</span>: <span class="number">25px</span>;</span><br><span class="line">          <span class="attribute">text-align</span>: center;</span><br><span class="line">          <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#00e4ff</span>;</span><br><span class="line">          <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span><br><span class="line">          <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.changePageC</span> &#123;</span><br><span class="line">          <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.changePageD</span> &#123;</span><br><span class="line">          <span class="attribute">width</span>: <span class="number">25px</span>;</span><br><span class="line">          <span class="attribute">height</span>: <span class="number">25px</span>;</span><br><span class="line">          <span class="attribute">text-align</span>: center;</span><br><span class="line">          <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#00e4ff</span>;</span><br><span class="line">          <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span><br><span class="line">          <span class="attribute">color</span>: <span class="number">#00e4ff</span>;</span><br><span class="line">          <span class="attribute">cursor</span>: pointer;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.echartsBox</span> &#123;</span><br><span class="line">    <span class="attribute">overflow-y</span>: scroll;</span><br><span class="line">    <span class="attribute">height</span>: calc(<span class="number">100%</span> - <span class="number">48px</span>);</span><br><span class="line">    <span class="selector-class">.windFrqBox</span> &#123;</span><br><span class="line">      <span class="attribute">display</span>: flex;</span><br><span class="line">      <span class="attribute">flex-wrap</span>: wrap;</span><br><span class="line">      <span class="attribute">justify-content</span>: space-between;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.windRoseBox</span> &#123;</span><br><span class="line">      <span class="attribute">display</span>: flex;</span><br><span class="line">      <span class="attribute">flex-wrap</span>: wrap;</span><br><span class="line">      <span class="attribute">justify-content</span>: space-between;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.tooltipHr</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#4c555a</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">250px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">2px</span>;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.styleA</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">justify-content</span>: space-between;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">9px</span> <span class="number">0</span> <span class="number">9px</span>;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.styleE</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: bold;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.styleB</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.styleC</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#00e4ff</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">  <span class="attribute">margin-right</span>: <span class="number">8px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.styleD</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#6c7379</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Echarts柱状极坐标风向玫瑰图的实现&quot;&gt;&lt;a href=&quot;#Echarts柱状极坐标风向玫瑰图的实现&quot; class=&quot;headerlink&quot; title=&quot;Echarts柱状极坐标风向玫瑰图的实现&quot;&gt;&lt;/a&gt;Echarts柱状极坐标风向玫瑰图的实现&lt;/h2&gt;&lt;</summary>
      
    
    
    
    
    <category term="React" scheme="https://gitee.com/shimmer612/myBlog/tags/React/"/>
    
    <category term="echarts" scheme="https://gitee.com/shimmer612/myBlog/tags/echarts/"/>
    
  </entry>
  
  <entry>
    <title>reduxjs/toolkit使用</title>
    <link href="https://gitee.com/shimmer612/myBlog/2022/05/09/2022-05-09-reduxjsToolkit%E4%BD%BF%E7%94%A8/"/>
    <id>https://gitee.com/shimmer612/myBlog/2022/05/09/2022-05-09-reduxjsToolkit%E4%BD%BF%E7%94%A8/</id>
    <published>2022-05-08T16:00:00.000Z</published>
    <updated>2022-05-09T05:33:34.976Z</updated>
    
    <content type="html"><![CDATA[<h3 id="reduxjs-toolkit-使用"><a href="#reduxjs-toolkit-使用" class="headerlink" title="reduxjs/toolkit 使用"></a>reduxjs/toolkit 使用</h3><h4 id="1、安装"><a href="#1、安装" class="headerlink" title="1、安装"></a>1、安装</h4><p>要和<code>react-redux</code>一起使用</p><p><code>cnpm i react-redux @reduxjs/toolkit -D </code></p><h4 id="2、新建-redux-文件夹"><a href="#2、新建-redux-文件夹" class="headerlink" title="2、新建 redux 文件夹"></a>2、新建 redux 文件夹</h4><p>在下面新建<code>store.ts、slice.ts、hook.ts</code>三个文件</p><h5 id="store-ts"><a href="#store-ts" class="headerlink" title="store.ts"></a><code>store.ts</code></h5><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; configureStore &#125; <span class="keyword">from</span> <span class="string">&quot;@reduxjs/toolkit&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> stateSlice <span class="keyword">from</span> <span class="string">&quot;./slice&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> otherSlice <span class="keyword">from</span> <span class="string">&quot;./otherSlice&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> store = configureStore(&#123;</span><br><span class="line">  <span class="comment">// 每个reducer代表一个模块的状态管理器</span></span><br><span class="line">  reducer: &#123;</span><br><span class="line">    state: stateSlice,</span><br><span class="line">    other: otherSlice,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// RootState作用是返回store的方法getState的类型 function</span></span><br><span class="line"><span class="keyword">export</span> type RootState = ReturnType&lt;<span class="keyword">typeof</span> store.getState&gt;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// AppDispatch 作用是拿到Store的dispatch方法的类型 function</span></span><br><span class="line"><span class="keyword">export</span> type AppDispatch = <span class="keyword">typeof</span> store.dispatch;</span><br></pre></td></tr></table></figure><h5 id="slice-ts"><a href="#slice-ts" class="headerlink" title="slice.ts"></a><code>slice.ts</code></h5><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createSlice, createAsyncThunk, PayloadAction &#125; <span class="keyword">from</span> <span class="string">&quot;@reduxjs/toolkit&quot;</span>;</span><br><span class="line">interface InitialState &#123;</span><br><span class="line">  count: number;</span><br><span class="line">  text?: string;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> initialState: InitialState = &#123;</span><br><span class="line">  count: <span class="number">0</span>,</span><br><span class="line">  text: <span class="string">&quot;我是文字&quot;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">interface PromiseNum &#123;</span><br><span class="line">  number: number;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> promise_one: <span class="built_in">Promise</span>&lt;PromiseNum&gt; = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">res, rej</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    res(&#123; <span class="attr">number</span>: <span class="number">10</span> &#125;);</span><br><span class="line">  &#125;, <span class="number">3000</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 异步Action</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> getAsyncInfo = createAsyncThunk(<span class="string">&quot;getAsyncInfo&quot;</span>, <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> data = <span class="keyword">await</span> promise_one;</span><br><span class="line">  <span class="keyword">return</span> data;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> stateSlice = createSlice(&#123;</span><br><span class="line">  name: <span class="string">&quot;state&quot;</span>,</span><br><span class="line">  initialState,</span><br><span class="line">  reducers: &#123;</span><br><span class="line">    add: <span class="function">(<span class="params">state</span>) =&gt;</span> &#123;</span><br><span class="line">      state.count += <span class="number">1</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    minus: <span class="function">(<span class="params">state</span>) =&gt;</span> &#123;</span><br><span class="line">      state.count -= <span class="number">1</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    change: <span class="function">(<span class="params">state</span>) =&gt;</span> &#123;</span><br><span class="line">      state.text = <span class="string">&quot;我是改变了的文字&quot;</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    back: <span class="function">(<span class="params">state</span>) =&gt;</span> &#123;</span><br><span class="line">      state.text = <span class="string">&quot;我是文字&quot;</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  extraReducers: <span class="function">(<span class="params">builder</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 进行请求阶段的一些操作</span></span><br><span class="line">    builder.addCase(getAsyncInfo.pending, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">&quot;进行中&quot;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    builder.addCase(getAsyncInfo.fulfilled, <span class="function">(<span class="params">state, action</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">&quot;action.payload: &quot;</span>, action.payload); <span class="comment">//&#123;number:&quot;10&quot;&#125;</span></span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">&quot;state: &quot;</span>, state.text); <span class="comment">//我是文字</span></span><br><span class="line">      state.count += action.payload.number;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">&quot;成功&quot;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    builder.addCase(getAsyncInfo.rejected, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">&quot;失败&quot;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> &#123; add, minus, change, back &#125; = stateSlice.actions;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> stateSlice.reducer;</span><br></pre></td></tr></table></figure><h5 id="hook-ts"><a href="#hook-ts" class="headerlink" title="hook.ts"></a>hook.ts</h5><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; TypedUseSelectorHook, useDispatch, useSelector &#125; <span class="keyword">from</span> <span class="string">&quot;react-redux&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> type &#123; RootState, AppDispatch &#125; <span class="keyword">from</span> <span class="string">&quot;./store&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// use hook 节约每次引入type的工作</span></span><br><span class="line"><span class="comment">// useSelector: 节约配置RootState type</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useAppDispatch = <span class="function">() =&gt;</span> useDispatch&lt;AppDispatch&gt;();</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useAppSelector: TypedUseSelectorHook&lt;RootState&gt; = useSelector;</span><br></pre></td></tr></table></figure><h4 id="4、使用"><a href="#4、使用" class="headerlink" title="4、使用"></a>4、使用</h4><p>首先是在根页面，引入<code>store，Provider</code></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> ReactDOM <span class="keyword">from</span> <span class="string">&quot;react-dom/client&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;./index.css&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">&quot;./App&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> reportWebVitals <span class="keyword">from</span> <span class="string">&quot;./reportWebVitals&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; store &#125; <span class="keyword">from</span> <span class="string">&quot;./redux/store&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Provider &#125; <span class="keyword">from</span> <span class="string">&quot;react-redux&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> root = ReactDOM.createRoot(<span class="built_in">document</span>.getElementById(<span class="string">&quot;root&quot;</span>) <span class="keyword">as</span> HTMLElement);</span><br><span class="line">root.render(</span><br><span class="line">  &lt;React.StrictMode&gt;</span><br><span class="line">    &lt;Provider store=&#123;store&#125;&gt;</span><br><span class="line">      &lt;App /&gt;</span><br><span class="line">    &lt;/Provider&gt;</span><br><span class="line">  &lt;/React.StrictMode&gt;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">reportWebVitals();</span><br></pre></td></tr></table></figure><p>然后在对应页面中使用：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; shallowEqual &#125; <span class="keyword">from</span> <span class="string">&quot;react-redux&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useAppDispatch, useAppSelector &#125; <span class="keyword">from</span> <span class="string">&quot;../redux/hook&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; add, minus, getAsyncInfo &#125; <span class="keyword">from</span> <span class="string">&quot;../redux/slice&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> APage = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;A渲染了&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> &#123; count &#125; = useAppSelector(<span class="function">(<span class="params">state: any</span>) =&gt;</span> (&#123; ...state.state &#125;), shallowEqual);</span><br><span class="line">  <span class="keyword">const</span> dispatch = useAppDispatch();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;h1&gt;我是Apage&lt;/h1&gt;</span><br><span class="line">      &lt;h2&gt;我是count:&#123;count&#125;&lt;/h2&gt;</span><br><span class="line">      &lt;button</span><br><span class="line">        onClick=&#123;<span class="function">() =&gt;</span> &#123;</span><br><span class="line">          dispatch(add());</span><br><span class="line">        &#125;&#125;</span><br><span class="line">      &gt;</span><br><span class="line">        加<span class="number">1</span></span><br><span class="line">      &lt;/button&gt;</span><br><span class="line">      &lt;button</span><br><span class="line">        onClick=&#123;<span class="function">() =&gt;</span> &#123;</span><br><span class="line">          dispatch(minus());</span><br><span class="line">        &#125;&#125;</span><br><span class="line">      &gt;</span><br><span class="line">        减<span class="number">1</span></span><br><span class="line">      &lt;/button&gt;</span><br><span class="line">      &lt;button</span><br><span class="line">        onClick=&#123;<span class="function">() =&gt;</span> &#123;</span><br><span class="line">          dispatch(getAsyncInfo());</span><br><span class="line">        &#125;&#125;</span><br><span class="line">      &gt;</span><br><span class="line">        异步加<span class="number">10</span></span><br><span class="line">      &lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><strong>注意:同一个 slice 中的 state 只要改变了，那么只要使用该 slice 中数据的页面就会重新渲染。</strong></p><p><strong>使用其他 slice 中 state 的页面不受影响</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;reduxjs-toolkit-使用&quot;&gt;&lt;a href=&quot;#reduxjs-toolkit-使用&quot; class=&quot;headerlink&quot; title=&quot;reduxjs/toolkit 使用&quot;&gt;&lt;/a&gt;reduxjs/toolkit 使用&lt;/h3&gt;&lt;h4 id=&quot;1</summary>
      
    
    
    
    
    <category term="React" scheme="https://gitee.com/shimmer612/myBlog/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>useState问题记录</title>
    <link href="https://gitee.com/shimmer612/myBlog/2022/04/28/2022-04-28-useState%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    <id>https://gitee.com/shimmer612/myBlog/2022/04/28/2022-04-28-useState%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/</id>
    <published>2022-04-27T16:00:00.000Z</published>
    <updated>2022-04-28T06:18:41.831Z</updated>
    
    <content type="html"><![CDATA[<h3 id="useState问题记录"><a href="#useState问题记录" class="headerlink" title="useState问题记录"></a><code>useState</code>问题记录</h3><p>遇到这样一个问题，在一个新增页面，需要通过表单项，使<code>table</code>的<code>columns</code>动态的增加一列减少一列。</p><p>我就把<code>columns</code>放在<code>useState</code>中，对<code>然后通过useEffect</code>对<code>columns</code>的数组进行<code>push</code>和<code>pop</code></p><p>因为<code>columns</code>的操作项中有打开新的<code>tab</code>页的功能，发现打开同一个<code>tab</code>页的时候不是覆盖，而是会出现多个相同的<code>activekey</code></p><p>一开始很莫名其妙，觉得出鬼了，别的页面也是一样的，没有问题，就这个页面有问题，一步步<code>debugger</code>找了半天的原因，原来是框架的<code>addTab</code>事件使用了<code>useState</code>拿到的那个<code>panes</code>一直是打开新增页面的<code>panes</code>的值。</p><p>代码如下：差不多就是这么个场景</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> addPage = <span class="function">(<span class="params">props</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> columns = [</span><br><span class="line">    &#123;</span><br><span class="line">      title: <span class="string">&quot;奖品名称&quot;</span>,</span><br><span class="line">      dataIndex: <span class="string">&quot;name&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      title: <span class="string">&quot;操作&quot;</span>,</span><br><span class="line">      key: <span class="string">&quot;action&quot;</span>,</span><br><span class="line">      render: <span class="function">(<span class="params">record</span>) =&gt;</span> (</span><br><span class="line">          &lt;a</span><br><span class="line">            onClick=&#123;<span class="function">() =&gt;</span> &#123;</span><br><span class="line">              props.addTab(&#123;</span><br><span class="line">                initSetting: &#123;</span><br><span class="line">                  id: record.id,</span><br><span class="line">                &#125;,</span><br><span class="line">                path: <span class="string">&quot;/prize/add/detail&quot;</span>,</span><br><span class="line">                title: <span class="string">&quot;奖品详情&quot;</span>,</span><br><span class="line">              &#125;);</span><br><span class="line">            &#125;&#125;</span><br><span class="line">          &gt;</span><br><span class="line">            详情</span><br><span class="line">          &lt;/a&gt;</span><br><span class="line">      )</span><br><span class="line">    &#125;</span><br><span class="line">  ];</span><br><span class="line">    <span class="keyword">const</span> priceColumn =  &#123;</span><br><span class="line">      title: <span class="string">&quot;价格&quot;</span>,</span><br><span class="line">      dataIndex: <span class="string">&quot;price&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">const</span> [columns,setColumns] = useState(columns)</span><br><span class="line">    </span><br><span class="line">    useEffect(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(props.addColumns===<span class="string">&quot;1&quot;</span>) &#123;</span><br><span class="line">            setColumns(<span class="function"><span class="params">prev</span>=&gt;</span>&#123;</span><br><span class="line">                prev.push(priceColumn)</span><br><span class="line">                <span class="keyword">return</span> [...prev]</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(props.addColumns===<span class="string">&quot;2&quot;</span>)&#123;</span><br><span class="line">             setColumns(<span class="function"><span class="params">prev</span>=&gt;</span>&#123;</span><br><span class="line">                prev.pop()</span><br><span class="line">                <span class="keyword">return</span> [...prev]</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">    &#125;,[props.addColumns])</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">Table</span> <span class="attr">columns</span>=<span class="string">&#123;columns&#125;</span> <span class="attr">dataSource</span>=<span class="string">&#123;props.value&#125;</span>&gt;</span></span></span><br><span class="line"><span class="xml">&#125;</span></span><br></pre></td></tr></table></figure><p><code>addTab</code>的方法如下：</p><p><code>panes</code>一直是之前的<code>panes</code>，导致<code>existedPane</code>一直为<code>undefined</code></p><p><code>useRef</code>一直获取到的是最新的，所以就一直往<code>panes</code>里加入相同的<code>tab</code>页</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> AddTab = <span class="function">(<span class="params">props</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">//省略了一些代码.....</span></span><br><span class="line"> <span class="keyword">const</span> [panes, setPanes] = useState([]);</span><br><span class="line"> <span class="keyword">const</span> cachePanesRef = useRef(panes);</span><br><span class="line"> <span class="comment">//addtab后会调用的函数，就错在这里</span></span><br><span class="line"> <span class="keyword">const</span> handleTabAdd = <span class="function">(<span class="params">$route</span>) =&gt;</span> &#123;</span><br><span class="line">    setActivityPane($route.key);</span><br><span class="line">    <span class="keyword">const</span> existedPane = panes.find(<span class="function">(<span class="params">c</span>) =&gt;</span> c.key === $route.key);</span><br><span class="line">    <span class="keyword">const</span> currentPane = flatRoutes.find(<span class="function">(<span class="params">el</span>) =&gt;</span> el.key === $route.key);</span><br><span class="line">    <span class="keyword">if</span> (!existedPane) &#123;</span><br><span class="line">      setPanes([</span><br><span class="line">        ...cachePanesRef.current,</span><br><span class="line">        &#123;</span><br><span class="line">          key: currentPane.key,</span><br><span class="line">          path: currentPane.path,</span><br><span class="line">          C: currentPane.component,</span><br><span class="line">          name: $route.titleText || currentPane.name,</span><br><span class="line">          initSetting: $route?.initSetting,</span><br><span class="line">        &#125;,</span><br><span class="line">      ]);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//省略了一些代码.....</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样就形成了闭包，传过去<code>panes</code>数组一直是第一次点击打开的那个。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;useState问题记录&quot;&gt;&lt;a href=&quot;#useState问题记录&quot; class=&quot;headerlink&quot; title=&quot;useState问题记录&quot;&gt;&lt;/a&gt;&lt;code&gt;useState&lt;/code&gt;问题记录&lt;/h3&gt;&lt;p&gt;遇到这样一个问题，在一个新增页面，</summary>
      
    
    
    
    
    <category term="react" scheme="https://gitee.com/shimmer612/myBlog/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>虚拟Dom</title>
    <link href="https://gitee.com/shimmer612/myBlog/2022/04/02/2022-04-02-%E8%99%9A%E6%8B%9FDom/"/>
    <id>https://gitee.com/shimmer612/myBlog/2022/04/02/2022-04-02-%E8%99%9A%E6%8B%9FDom/</id>
    <published>2022-04-01T16:00:00.000Z</published>
    <updated>2022-04-02T11:22:23.103Z</updated>
    
    <content type="html"><![CDATA[<h3 id="虚拟Dom"><a href="#虚拟Dom" class="headerlink" title="虚拟Dom"></a>虚拟Dom</h3><p><strong>一直以来都知道虚拟dom这个概念就是用代码来生成Dom，可以用diff算法</strong></p><p>今天自己来实现一下，如下</p><p>创建一个对象，包含元素的各种属性，我这里就写了标签名和文字。嵌套的加个个Child</p><p>然后循环数组创建元素插入到body中，如果有child就插入到父元素中。</p><p><strong>因为是一个数组，每次改变的时候就可以对比上次和本次dom数组</strong></p><p><strong>判断哪里变化了，变化了才修改这就是diff算法</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">const</span> vDom = [</span></span><br><span class="line">        &#123;</span><br><span class="line"><span class="javascript">          node: <span class="string">&quot;p&quot;</span>,</span></span><br><span class="line"><span class="javascript">          text: <span class="string">&quot;我是p标签&quot;</span>,</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line"><span class="javascript">          node: <span class="string">&quot;div&quot;</span>,</span></span><br><span class="line"><span class="javascript">          text: <span class="string">&quot;我是div&quot;</span>,</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line"><span class="javascript">          node: <span class="string">&quot;ul&quot;</span>,</span></span><br><span class="line"><span class="javascript">          text: <span class="string">&quot;我是ul&quot;</span>,</span></span><br><span class="line"><span class="javascript">          child: [&#123; <span class="attr">node</span>: <span class="string">&quot;td&quot;</span>, <span class="attr">text</span>: <span class="string">&quot;我是td&quot;</span> &#125;],</span></span><br><span class="line">        &#125;,</span><br><span class="line">      ];</span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> tree = <span class="built_in">document</span>.body;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">const</span> showDom = <span class="function">(<span class="params">vDom, dom</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">        vDom.map(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">const</span> node = <span class="built_in">document</span>.createElement(item.node);</span></span><br><span class="line">          node.innerHTML = item.text;</span><br><span class="line">          if (item.child) &#123;</span><br><span class="line">            showDom(item.child, node);</span><br><span class="line">          &#125;</span><br><span class="line">          dom.appendChild(node);</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;;</span><br><span class="line">      showDom(vDom, tree);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>页面中和dom元素显示如下：</strong></p><p><img src="https://s1.ax1x.com/2022/04/02/qIkXAf.png" alt="qIkXAf.png"></p><p><img src="https://s1.ax1x.com/2022/04/02/qIkLHP.png" alt="qIkLHP.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;虚拟Dom&quot;&gt;&lt;a href=&quot;#虚拟Dom&quot; class=&quot;headerlink&quot; title=&quot;虚拟Dom&quot;&gt;&lt;/a&gt;虚拟Dom&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;一直以来都知道虚拟dom这个概念就是用代码来生成Dom，可以用diff算法&lt;/strong&gt;&lt;/p&gt;</summary>
      
    
    
    
    
    <category term="js" scheme="https://gitee.com/shimmer612/myBlog/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>js的内存机制、内存泄露</title>
    <link href="https://gitee.com/shimmer612/myBlog/2022/04/01/2022-04-01-Js%E5%86%85%E5%AD%98%E6%9C%BA%E5%88%B6%E3%80%81%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2/"/>
    <id>https://gitee.com/shimmer612/myBlog/2022/04/01/2022-04-01-Js%E5%86%85%E5%AD%98%E6%9C%BA%E5%88%B6%E3%80%81%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2/</id>
    <published>2022-03-31T16:00:00.000Z</published>
    <updated>2022-04-01T11:01:22.173Z</updated>
    
    <content type="html"><![CDATA[<h3 id="js-的内存机制、内存泄露"><a href="#js-的内存机制、内存泄露" class="headerlink" title="js 的内存机制、内存泄露"></a>js 的内存机制、内存泄露</h3><p><strong>面试被问到 Js 的内存机制，以为自己不会，其实就是问基础类型和引用类型的存储方式，栈和堆，很亏，记录一下</strong></p><h4 id="1、内存机制"><a href="#1、内存机制" class="headerlink" title="1、内存机制"></a>1、内存机制</h4><p>Js 的内存空间 分为栈和堆、还有池（一般归于堆中）。栈存储变量数字，字符等，堆存储复杂类型，对象数组等。池存储常量。</p><p>js 中的基础类型存储在栈中，闭包中除外。先进后出，后进先出，乒乓球盒子</p><p>引用类型存储在堆中。</p><h5 id="2、内存泄露"><a href="#2、内存泄露" class="headerlink" title="2、内存泄露"></a>2、内存泄露</h5><p>虽然 Js 有着垃圾回收机制，但是并不是随时都在执行的因为开销比较大。</p><p>所以日常开发中要注意代码的规范</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123; <span class="attr">name</span>: <span class="number">1</span> &#125;;</span><br><span class="line"><span class="comment">//obj 存在栈中 &#123; name: 1 &#125;存在堆中</span></span><br><span class="line"><span class="comment">//obj存的是&#123; name: 1 &#125;地址</span></span><br><span class="line"><span class="keyword">const</span> newObj = obj;</span><br><span class="line"><span class="comment">//newObj得到的其实是 &#123; name: 1 &#125;地址</span></span><br><span class="line"><span class="comment">//此时修改newObj，obj的值也会别修改，因为指向的同一个地址</span></span><br></pre></td></tr></table></figure><p>如下</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//不声明变量直接使用</span></span><br><span class="line">a = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//使用this,this指向window，因为在函数执行时判断this</span></span><br><span class="line"><span class="keyword">const</span> fn = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">this</span>.a = <span class="number">1</span>;</span><br><span class="line">&#125;;</span><br><span class="line">fn();</span><br><span class="line"><span class="comment">//闭包,不及时清除</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> a = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    a += <span class="number">1</span>;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//定时器没有清除一直触发</span></span><br><span class="line"><span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">&#125;, <span class="number">2000</span>);</span><br></pre></td></tr></table></figure><p><strong>怎么去解决内存泄露</strong></p><p>写代码的过程中注意规范</p><p>ES6 有两个新的数据类型<code>weakMap</code>和<code>weakSet</code>。如果改类型的值不再使用，就会被自动回收。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;js-的内存机制、内存泄露&quot;&gt;&lt;a href=&quot;#js-的内存机制、内存泄露&quot; class=&quot;headerlink&quot; title=&quot;js 的内存机制、内存泄露&quot;&gt;&lt;/a&gt;js 的内存机制、内存泄露&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;面试被问到 Js 的内存机制，以为自</summary>
      
    
    
    
    
    <category term="js" scheme="https://gitee.com/shimmer612/myBlog/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>git撤销提交</title>
    <link href="https://gitee.com/shimmer612/myBlog/2022/04/01/2022-04-01-%E6%92%A4%E9%94%80%E6%8F%90%E4%BA%A4/"/>
    <id>https://gitee.com/shimmer612/myBlog/2022/04/01/2022-04-01-%E6%92%A4%E9%94%80%E6%8F%90%E4%BA%A4/</id>
    <published>2022-03-31T16:00:00.000Z</published>
    <updated>2023-05-22T08:19:09.480Z</updated>
    
    <content type="html"><![CDATA[<p><strong>因为提交了错误的分支,记录一下后面使用</strong></p><h3 id="git-撤销提交"><a href="#git-撤销提交" class="headerlink" title="git 撤销提交"></a>git 撤销提交</h3><h5 id="1、git-log"><a href="#1、git-log" class="headerlink" title="1、git log"></a>1、git log</h5><p>git log 查看 commit 记录，记下自己要撤回的 commitId</p><p><strong>很重要因为 reset 后会删除提交记录，所以要把 commitId 记下来</strong></p><h5 id="2、git-reset-commitId"><a href="#2、git-reset-commitId" class="headerlink" title="2、git reset commitId"></a>2、git reset commitId</h5><p>撤销本地的提交</p><h5 id="3、-git-push-origin-“分支名称”-–force"><a href="#3、-git-push-origin-“分支名称”-–force" class="headerlink" title="3、 git push origin “分支名称” –force"></a>3、 git push origin “分支名称” –force</h5><p>本地覆盖仓库的代码</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;因为提交了错误的分支,记录一下后面使用&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;git-撤销提交&quot;&gt;&lt;a href=&quot;#git-撤销提交&quot; class=&quot;headerlink&quot; title=&quot;git 撤销提交&quot;&gt;&lt;/a&gt;git 撤销提交&lt;/h3&gt;&lt;h5 i</summary>
      
    
    
    
    
    <category term="git" scheme="https://gitee.com/shimmer612/myBlog/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>css显示隐藏元素</title>
    <link href="https://gitee.com/shimmer612/myBlog/2022/04/01/2022-04-01-css%E6%98%BE%E7%A4%BA%E9%9A%90%E8%97%8F%E5%85%83%E7%B4%A0/"/>
    <id>https://gitee.com/shimmer612/myBlog/2022/04/01/2022-04-01-css%E6%98%BE%E7%A4%BA%E9%9A%90%E8%97%8F%E5%85%83%E7%B4%A0/</id>
    <published>2022-03-31T16:00:00.000Z</published>
    <updated>2022-04-01T10:59:43.686Z</updated>
    
    <content type="html"><![CDATA[<h3 id="css-显示隐藏元素"><a href="#css-显示隐藏元素" class="headerlink" title="css 显示隐藏元素"></a>css 显示隐藏元素</h3><p><strong>面试问到的,记录一下</strong></p><h4 id="1、display-none"><a href="#1、display-none" class="headerlink" title="1、display:none"></a>1、display:none</h4><p><strong>元素在页面不显示</strong></p><p><strong>但是在 dom 结构上能看到</strong></p><p><strong>触发回流和重绘</strong></p><h6 id="1、其余属性"><a href="#1、其余属性" class="headerlink" title="1、其余属性"></a>1、其余属性</h6><p>block: 块元素</p><p>inline: 行内元素（默认值）</p><p>inline-block：行内块元素</p><p>inherit：继承父元素的 display 属性</p><hr><h4 id="2、opacity：0"><a href="#2、opacity：0" class="headerlink" title="2、opacity：0"></a>2、opacity：0</h4><p><strong>透明度为 0</strong></p><p><strong>只是看不到，但是还存在，点击事件可以触发</strong></p><p><strong>会触发页面的重绘，不会触发重排</strong></p><hr><h4 id="3、visibility-hidden"><a href="#3、visibility-hidden" class="headerlink" title="3、visibility:hidden"></a>3、visibility:hidden</h4><p><strong>元素不可见，但是会占据空间</strong></p><p><strong>不会触发事件</strong></p><p><strong>会触发页面的重绘，不会触发重排</strong></p><h6 id="1、其余属性-1"><a href="#1、其余属性-1" class="headerlink" title="1、其余属性"></a>1、其余属性</h6><p>visible： 默认值，可见</p><p>collapse：用在 table 元素上，表现和<code>display:none</code>一致；用在其它元素上，表现和<code>visibility:hidden</code>一致</p><p>inherit： 继承父元素的 visibility 的属性</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;css-显示隐藏元素&quot;&gt;&lt;a href=&quot;#css-显示隐藏元素&quot; class=&quot;headerlink&quot; title=&quot;css 显示隐藏元素&quot;&gt;&lt;/a&gt;css 显示隐藏元素&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;面试问到的,记录一下&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id</summary>
      
    
    
    
    
    <category term="css" scheme="https://gitee.com/shimmer612/myBlog/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>自己实现一个简单的redux</title>
    <link href="https://gitee.com/shimmer612/myBlog/2022/03/30/2022-03-30-%E8%87%AA%E5%B7%B1%E5%AE%9E%E7%8E%B0redux/"/>
    <id>https://gitee.com/shimmer612/myBlog/2022/03/30/2022-03-30-%E8%87%AA%E5%B7%B1%E5%AE%9E%E7%8E%B0redux/</id>
    <published>2022-03-29T16:00:00.000Z</published>
    <updated>2022-04-02T11:21:42.196Z</updated>
    
    <content type="html"><![CDATA[<h3 id="自己实现一个-redux"><a href="#自己实现一个-redux" class="headerlink" title="自己实现一个 redux"></a>自己实现一个 redux</h3><p>今天面试被问到 redux 的实现过程，晚上回来想一想发现自己也可以简单的实现一下</p><p>就是观察者订阅者模式</p><h6 id="1、createStore"><a href="#1、createStore" class="headerlink" title="1、createStore"></a>1、createStore</h6><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> reducer = <span class="built_in">require</span>(<span class="string">&quot;./reducer&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> createStore = <span class="function">(<span class="params">reducer, state</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> fnArr = [];</span><br><span class="line">  <span class="comment">//订阅</span></span><br><span class="line">  <span class="keyword">const</span> subscribe = <span class="function">(<span class="params">fn</span>) =&gt;</span> &#123;</span><br><span class="line">    fnArr.push(fn);</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="comment">//发布</span></span><br><span class="line">  <span class="keyword">const</span> dispatch = <span class="function">(<span class="params">action</span>) =&gt;</span> &#123;</span><br><span class="line">    reducer(state, &#123; ...action &#125;);</span><br><span class="line">    <span class="keyword">if</span> (fnArr.length !== <span class="number">0</span>) &#123;</span><br><span class="line">      fnArr.map(<span class="function">(<span class="params">fn</span>) =&gt;</span> fn());</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> getState = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123; ...state &#125;;</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="comment">// 初始化state</span></span><br><span class="line">  dispatch(&#123; <span class="attr">type</span>: <span class="literal">null</span> &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    getState,</span><br><span class="line">    dispatch,</span><br><span class="line">    subscribe,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> store = createStore(reducer.reducer, &#123; <span class="attr">num</span>: <span class="number">1</span> &#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">exports</span>.store = store;</span><br></pre></td></tr></table></figure><h6 id="2、reducer-js-这个没什么区别"><a href="#2、reducer-js-这个没什么区别" class="headerlink" title="2、reducer.js 这个没什么区别"></a>2、reducer.js 这个没什么区别</h6><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> reducer = <span class="function">(<span class="params">state, action</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (action.type === <span class="string">&quot;add&quot;</span>) &#123;</span><br><span class="line">    state.num = state.num + action.value;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> &#123; ...state &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">exports</span>.reducer = reducer;</span><br></pre></td></tr></table></figure><h6 id="3、使用"><a href="#3、使用" class="headerlink" title="3、使用"></a>3、使用</h6><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> store = <span class="built_in">require</span>(<span class="string">&quot;./store&quot;</span>);</span><br><span class="line"></span><br><span class="line">store.store.subscribe(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;值改变了&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">store.store.dispatch(&#123; <span class="attr">type</span>: <span class="string">&quot;add&quot;</span>, <span class="attr">value</span>: <span class="number">10</span> &#125;);</span><br><span class="line"><span class="built_in">console</span>.log(store.store.getState()); <span class="comment">//11</span></span><br></pre></td></tr></table></figure><p><strong>没想到本以为很复杂的东西，原理其实很简单。主要的还是编程的思想</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;自己实现一个-redux&quot;&gt;&lt;a href=&quot;#自己实现一个-redux&quot; class=&quot;headerlink&quot; title=&quot;自己实现一个 redux&quot;&gt;&lt;/a&gt;自己实现一个 redux&lt;/h3&gt;&lt;p&gt;今天面试被问到 redux 的实现过程，晚上回来想一想发现自</summary>
      
    
    
    
    
    <category term="React" scheme="https://gitee.com/shimmer612/myBlog/tags/React/"/>
    
  </entry>
  
</feed>
