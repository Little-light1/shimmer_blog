<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Shimmer</title>
  
  <subtitle>黑暗中寻光的人</subtitle>
  <link href="https://gitee.com/shimmer612/myBlog/atom.xml" rel="self"/>
  
  <link href="https://gitee.com/shimmer612/myBlog/"/>
  <updated>2022-03-25T10:48:57.114Z</updated>
  <id>https://gitee.com/shimmer612/myBlog/</id>
  
  <author>
    <name>Shimmer</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>pinia新的状态管理工具</title>
    <link href="https://gitee.com/shimmer612/myBlog/2022/03/25/pinia%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>https://gitee.com/shimmer612/myBlog/2022/03/25/pinia%E7%9A%84%E4%BD%BF%E7%94%A8/</id>
    <published>2022-03-24T16:00:00.000Z</published>
    <updated>2022-03-25T10:48:57.114Z</updated>
    
    <content type="html"><![CDATA[<h4 id="pinia新的状态管理工具"><a href="#pinia新的状态管理工具" class="headerlink" title="pinia新的状态管理工具"></a>pinia新的状态管理工具</h4><h5 id="1、安装"><a href="#1、安装" class="headerlink" title="1、安装"></a>1、安装</h5><p><code>npm install pinia --save</code></p><h5 id="2、新建store-在main-js中引入"><a href="#2、新建store-在main-js中引入" class="headerlink" title="2、新建store,在main.js中引入"></a>2、新建store,在main.js中引入</h5><p><strong>在根目录下新建store文件夹，新建index.js</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createPinia &#125; <span class="keyword">from</span> <span class="string">&quot;pinia&quot;</span>;</span><br><span class="line"><span class="comment">// 创建store</span></span><br><span class="line"><span class="keyword">const</span> store = createPinia();</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> store;</span><br></pre></td></tr></table></figure><p><strong>main.js</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">&quot;./App.vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">&quot;./store&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = createApp(App);</span><br><span class="line"></span><br><span class="line">app.use(store);</span><br><span class="line"></span><br><span class="line">app.mount(<span class="string">&quot;#app&quot;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="3、在store文件夹下新建stateStore-js"><a href="#3、在store文件夹下新建stateStore-js" class="headerlink" title="3、在store文件夹下新建stateStore.js"></a>3、在store文件夹下新建stateStore.js</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">&quot;pinia&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> stateStore = defineStore(&#123;</span><br><span class="line">  id: <span class="string">&quot;state&quot;</span>, <span class="comment">//命名</span></span><br><span class="line">  state: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      name: <span class="string">&quot;菠萝&quot;</span>,</span><br><span class="line">      age: <span class="number">99</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//类似于计算属性</span></span><br><span class="line">  getters: &#123;</span><br><span class="line">    <span class="function"><span class="title">getterName</span>(<span class="params">state</span>)</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">&quot;使用了getter&quot;</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;我是什么水果？我是&quot;</span> + state.name;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  actions: &#123;</span><br><span class="line">    <span class="comment">//还支持调用别的actions</span></span><br><span class="line">    <span class="function"><span class="title">updateName</span>(<span class="params">name, age</span>)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.name = name;</span><br><span class="line">      <span class="built_in">this</span>.updateAge(age);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function"><span class="title">updateAge</span>(<span class="params">age</span>)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//action 可以像写一个简单的函数一样支持 async/await的语法</span></span><br><span class="line">    <span class="keyword">async</span> <span class="function"><span class="title">asyncfun</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> timer = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = <span class="string">&quot;桃子&quot;</span>;</span><br><span class="line">      &#125;, <span class="number">1000</span>);</span><br><span class="line">      <span class="keyword">await</span> timer;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="4、使用"><a href="#4、使用" class="headerlink" title="4、使用"></a>4、使用</h5><p><strong>先引入创建的store</strong></p><p><strong>解构需要引入<code>storeToRefs</code></strong></p><p><strong>修改state数据可以直接修改，也可以使用<code>$patch</code>,也可以使用<code>actions</code>修改</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;h1&gt;pinia:&#123;&#123; name &#125;&#125;&lt;&#x2F;h1&gt;</span><br><span class="line">    &lt;h1&gt;pinia:&#123;&#123; age &#125;&#125;&lt;&#x2F;h1&gt;</span><br><span class="line">    &lt;h1&gt;pinia.getter:&#123;&#123; state.getterName &#125;&#125;&lt;&#x2F;h1&gt;</span><br><span class="line">    &lt;el-button type&#x3D;&quot;primary&quot; @click&#x3D;&quot;changeName&quot;&gt;修改pinia&lt;&#x2F;el-button&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; reactive, inject &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; stateStore &#125; from &quot;..&#x2F;store&#x2F;state&quot;;</span><br><span class="line">&#x2F;&#x2F;解构store</span><br><span class="line">import &#123; storeToRefs &#125; from &quot;pinia&quot;;</span><br><span class="line">const state &#x3D; stateStore();</span><br><span class="line">const &#123; age, name &#125; &#x3D; storeToRefs(state);</span><br><span class="line"></span><br><span class="line">const changeName &#x3D; () &#x3D;&gt; &#123;</span><br><span class="line">  &#x2F;&#x2F; 通过patch修改数据两种方式对象和函数</span><br><span class="line">  &#x2F;&#x2F; 1、对象</span><br><span class="line">  &#x2F;&#x2F;   state.$patch(&#123;</span><br><span class="line">  &#x2F;&#x2F;     name: &quot;西瓜&quot;,</span><br><span class="line">  &#x2F;&#x2F;     age: 100,</span><br><span class="line">  &#x2F;&#x2F;   &#125;);</span><br><span class="line">  &#x2F;&#x2F; 2、函数</span><br><span class="line">  &#x2F;&#x2F;   state.$patch((state) &#x3D;&gt; &#123;</span><br><span class="line">  &#x2F;&#x2F;     state.name &#x3D; &quot;哈密瓜&quot;;</span><br><span class="line">  &#x2F;&#x2F;     state.age &#x3D; 999;</span><br><span class="line">  &#x2F;&#x2F;   &#125;);</span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F; 通过action修改数据</span><br><span class="line">  state.updateName(&quot;香蕉&quot;, 88);</span><br><span class="line">  state.asyncfun();</span><br><span class="line">&#125;;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang&#x3D;&quot;less&quot; scoped&gt;&lt;&#x2F;style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;pinia新的状态管理工具&quot;&gt;&lt;a href=&quot;#pinia新的状态管理工具&quot; class=&quot;headerlink&quot; title=&quot;pinia新的状态管理工具&quot;&gt;&lt;/a&gt;pinia新的状态管理工具&lt;/h4&gt;&lt;h5 id=&quot;1、安装&quot;&gt;&lt;a href=&quot;#1、安装&quot;</summary>
      
    
    
    
    
    <category term="Vue3" scheme="https://gitee.com/shimmer612/myBlog/tags/Vue3/"/>
    
    <category term="pinia" scheme="https://gitee.com/shimmer612/myBlog/tags/pinia/"/>
    
  </entry>
  
  <entry>
    <title>react-hooks中useContext的使用</title>
    <link href="https://gitee.com/shimmer612/myBlog/2022/02/22/useContext/"/>
    <id>https://gitee.com/shimmer612/myBlog/2022/02/22/useContext/</id>
    <published>2022-02-21T16:00:00.000Z</published>
    <updated>2022-03-24T08:54:37.871Z</updated>
    
    <content type="html"><![CDATA[<h3 id="react-hooks中useContext的使用"><a href="#react-hooks中useContext的使用" class="headerlink" title="react-hooks中useContext的使用"></a>react-hooks中useContext的使用</h3><h5 id="1、作用"><a href="#1、作用" class="headerlink" title="1、作用"></a>1、作用</h5><p><strong>useContext可以多层嵌套传输数据和方法</strong></p><h5 id="2、使用"><a href="#2、使用" class="headerlink" title="2、使用"></a>2、使用</h5><p>1、新建一个store.js文件，使用React.createContext()创建一个自己的Context</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import React from &quot;react&quot;;</span><br><span class="line">const myContext &#x3D; React.createContext(null);</span><br><span class="line"></span><br><span class="line">export &#123; myContext &#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2、最外层组件</p><p>使用myContext.Provider包裹然后value传入自己需要的值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">import &#123; myContext &#125; from &quot;.&#x2F;store&quot;;</span><br><span class="line">import React, &#123; useState &#125; from &quot;react&quot;;</span><br><span class="line">import Child from &quot;.&#x2F;child&quot;;</span><br><span class="line">const App &#x3D; () &#x3D;&gt; &#123;</span><br><span class="line">  const [num, setNum] &#x3D; useState(0);</span><br><span class="line">  return (</span><br><span class="line">    &lt;myContext.Provider value&#x3D;&#123;&#123; setNum, num &#125;&#125;&gt;</span><br><span class="line">      &lt;Child&gt;&lt;&#x2F;Child&gt;</span><br><span class="line">    &lt;&#x2F;myContext.Provider&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">export default App;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>3、子组件</p><p>引入myContext并通过useContext获取到传入的值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">import &#123; myContext &#125; from &quot;.&#x2F;store&quot;;</span><br><span class="line">import React, &#123; useContext&#125; from &quot;react&quot;;</span><br><span class="line">import GrandSon from &quot;.&#x2F;grandSon&quot;;</span><br><span class="line"></span><br><span class="line">const Child &#x3D; (props) &#x3D;&gt; &#123;</span><br><span class="line">  const &#123; setNum, num &#125; &#x3D; useContext(myContext);</span><br><span class="line">  return (</span><br><span class="line">    &lt;&gt;</span><br><span class="line">      &lt;h1&gt;&#123;num&#125;&lt;&#x2F;h1&gt;</span><br><span class="line">      &lt;button</span><br><span class="line">        onClick&#x3D;&#123;() &#x3D;&gt; &#123;</span><br><span class="line">          setNum((prev) &#x3D;&gt; prev + 1);</span><br><span class="line">        &#125;&#125;</span><br><span class="line">      &gt;</span><br><span class="line">        添加</span><br><span class="line">      &lt;&#x2F;button&gt;</span><br><span class="line">      &lt;GrandSon num&#x3D;&#123;num&#125; &#x2F;&gt;</span><br><span class="line">    &lt;&#x2F;&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">export default Child;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>3、孙组件</p><p>和子组件中一样</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">import &#123; myContext &#125; from &quot;.&#x2F;store&quot;;</span><br><span class="line">import React, &#123; useContext &#125; from &quot;react&quot;;</span><br><span class="line"></span><br><span class="line">const GrandSon &#x3D; (props) &#x3D;&gt; &#123;</span><br><span class="line">  const &#123; setNum, num &#125; &#x3D; useContext(myContext);</span><br><span class="line">  return (</span><br><span class="line">    &lt;&gt;</span><br><span class="line">      &lt;h1&gt;我是孙子&lt;&#x2F;h1&gt;</span><br><span class="line">      &lt;h1&gt;&#123;num&#125;&lt;&#x2F;h1&gt;</span><br><span class="line">      &lt;button</span><br><span class="line">        onClick&#x3D;&#123;() &#x3D;&gt; &#123;</span><br><span class="line">          setNum((prev) &#x3D;&gt; prev + 1);</span><br><span class="line">        &#125;&#125;</span><br><span class="line">      &gt;</span><br><span class="line">        添加</span><br><span class="line">      &lt;&#x2F;button&gt;</span><br><span class="line">    &lt;&#x2F;&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">export default GrandSon;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>多层传值的话结构比较清晰，不需要层层用props传值，在一个单独的组件中传值中比较方便</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;react-hooks中useContext的使用&quot;&gt;&lt;a href=&quot;#react-hooks中useContext的使用&quot; class=&quot;headerlink&quot; title=&quot;react-hooks中useContext的使用&quot;&gt;&lt;/a&gt;react-hooks</summary>
      
    
    
    
    
    <category term="react-hooks" scheme="https://gitee.com/shimmer612/myBlog/tags/react-hooks/"/>
    
  </entry>
  
  <entry>
    <title>useRef的使用</title>
    <link href="https://gitee.com/shimmer612/myBlog/2022/02/21/useRef/"/>
    <id>https://gitee.com/shimmer612/myBlog/2022/02/21/useRef/</id>
    <published>2022-02-20T16:00:00.000Z</published>
    <updated>2022-03-24T08:54:44.622Z</updated>
    
    <content type="html"><![CDATA[<h4 id="react-hooks之useRef的使用"><a href="#react-hooks之useRef的使用" class="headerlink" title="react-hooks之useRef的使用"></a>react-hooks之useRef的使用</h4><h5 id="1、函数内部使用"><a href="#1、函数内部使用" class="headerlink" title="1、函数内部使用"></a>1、函数内部使用</h5><p><strong>useRef可以用来做数据持久化，也可以用来获取到元素实例</strong></p><p><strong>ref.current的变化并不会导致函数组件的重新加载不像useState</strong></p><p><strong>可以用一个假的useState，结合useEffect的依赖让useRef的值改变后重新加载函数</strong></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> React, &#123; useState, useContext, useRef, useEffect &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> App = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> [num, setNum] = useState(<span class="number">0</span>);</span><br><span class="line">  <span class="keyword">const</span> myRef = useRef(<span class="number">0</span>);</span><br><span class="line">  <span class="keyword">const</span> btnRef = useRef();</span><br><span class="line">    </span><br><span class="line">  useEffect(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    myRef.current += <span class="number">1</span>;</span><br><span class="line">  &#125;, [num]);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;h1&gt;我是Ref:&#123;myRef.current&#125;&lt;/h1&gt;</span><br><span class="line">      &lt;button</span><br><span class="line">        ref=&#123;btnRef&#125;</span><br><span class="line">        onClick=&#123;<span class="function">() =&gt;</span> &#123;</span><br><span class="line">          setNum(<span class="function">(<span class="params">prev</span>) =&gt;</span> prev + <span class="number">1</span>);</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">&quot;button的文字: &quot;</span>, btnRef.current.innerText);<span class="comment">//改变ref</span></span><br><span class="line">        &#125;&#125;</span><br><span class="line">      &gt;</span><br><span class="line">        改变ref</span><br><span class="line">      &lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> App;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="2、子组件使用"><a href="#2、子组件使用" class="headerlink" title="2、子组件使用"></a>2、子组件使用</h5><p><strong>子组件使用不能直接<code>&lt;Child ref=&#123;childRef&#125;&gt;&lt;Child/&gt;</code></strong></p><p><strong>这样子组件获取不到ref，要用forwordRef把子组件包裹起来传入两个参数（props,ref）</strong></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//父组件</span></span><br><span class="line"><span class="keyword">import</span> React, &#123; useState, useContext, useRef, useEffect &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> Child <span class="keyword">from</span> <span class="string">&quot;./child&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> App = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> [num, setNum] = useState(<span class="number">0</span>);</span><br><span class="line">  <span class="keyword">const</span> myRef = useRef(<span class="number">0</span>);</span><br><span class="line">  <span class="keyword">const</span> btnRef = useRef();</span><br><span class="line">    </span><br><span class="line">  useEffect(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    myRef.current += <span class="number">1</span>;</span><br><span class="line">  &#125;, [num]);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;h1&gt;我是Ref:&#123;myRef.current&#125;&lt;/h1&gt;</span><br><span class="line">      &lt;button</span><br><span class="line">        ref=&#123;btnRef&#125;</span><br><span class="line">        onClick=&#123;<span class="function">() =&gt;</span> &#123;</span><br><span class="line">          setNum(<span class="function">(<span class="params">prev</span>) =&gt;</span> prev + <span class="number">1</span>);</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">&quot;button的文字: &quot;</span>, btnRef.current.innerText);<span class="comment">//改变ref</span></span><br><span class="line">        &#125;&#125;</span><br><span class="line">      &gt;</span><br><span class="line">        改变ref</span><br><span class="line">      &lt;/button&gt;</span><br><span class="line">      &lt;Child ref=&#123;childRef&#125;&gt;&lt;/Child&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> App;</span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//子组件</span></span><br><span class="line"><span class="keyword">import</span> React, &#123;useEffect, forwardRef &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> Child = forwardRef(<span class="function">(<span class="params">props, ref</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;props: &quot;</span>, props);</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;div ref=&#123;ref&#125;&gt;</span><br><span class="line">      &lt;h1&gt;我是子组件&lt;/h1&gt;</span><br><span class="line">      &lt;h1&gt;&#123;num&#125;&lt;/h1&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> Child;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;react-hooks之useRef的使用&quot;&gt;&lt;a href=&quot;#react-hooks之useRef的使用&quot; class=&quot;headerlink&quot; title=&quot;react-hooks之useRef的使用&quot;&gt;&lt;/a&gt;react-hooks之useRef的使用&lt;/</summary>
      
    
    
    
    
    <category term="react-hooks" scheme="https://gitee.com/shimmer612/myBlog/tags/react-hooks/"/>
    
  </entry>
  
  <entry>
    <title>react hooks介绍</title>
    <link href="https://gitee.com/shimmer612/myBlog/2022/01/15/react-hook/"/>
    <id>https://gitee.com/shimmer612/myBlog/2022/01/15/react-hook/</id>
    <published>2022-01-14T16:00:00.000Z</published>
    <updated>2022-03-24T08:54:52.864Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Hook-是什么？"><a href="#Hook-是什么？" class="headerlink" title="Hook 是什么？"></a>Hook 是什么？</h2><p>“Hook 是 React 16.8 的新增特性。它可以让你在不编写 class 的情况下使用 state 以及其他的 React 特性。”</p><p>从使用感官上来说，主要是对class组件中 <code>setState</code>和生命周期的“替换”。</p><h2 id="Hook的优势"><a href="#Hook的优势" class="headerlink" title="Hook的优势"></a>Hook的优势</h2><ul><li>脱离了class和this。（前端更偏爱组装而不是继承。this因为方法嵌套，箭头函数，call，apply，bind等，逐渐复杂化）。</li><li>拆分生命周期。（ 对于复杂组件， componentDidUpdate 中可能包含很多逻辑，用useeffect拆分后，条理更清晰 ）。</li><li>复用状态逻辑。</li></ul><h2 id="在react开发中经常关注的问题"><a href="#在react开发中经常关注的问题" class="headerlink" title="在react开发中经常关注的问题"></a>在react开发中经常关注的问题</h2><ul><li><p>什么行为会触发组件更新？</p></li><li><ul><li>setState</li><li>props</li><li>useReducer</li></ul></li><li><p>如何让数据在更新过程中不被重置？</p></li><li><ul><li>useMemo</li><li>useState</li><li>const a = useRef(); a.current = 1;</li><li>把变量定义在组件的外层</li></ul></li></ul><h2 id="useState和useEffect"><a href="#useState和useEffect" class="headerlink" title="useState和useEffect"></a>useState和useEffect</h2><ul><li><p>useState兼具触发更新和保存数据的功能。</p></li><li><p>useEffect用于弥补函数式组件生命周期的缺失 </p></li><li><ul><li>依赖缺失会导致哪些问题？</li></ul></li><li><ul><li><ul><li>useEffect(fun, []);</li><li>读取到旧数据``</li></ul></li></ul></li><li><ul><li>依赖的数据类型？</li></ul></li><li><ul><li><ul><li>useEffect(fun, [[123] === [123], props, fn]);</li><li>function 用useCallback进行包裹，useCallback(fn ,[])</li></ul></li></ul></li><li><ul><li>哪些东西不需要写在依赖列表</li></ul></li><li><ul><li><ul><li>import，service，moment</li><li>useRef()</li><li></li></ul></li></ul></li></ul><h2 id="useImperativeHandle和useRef"><a href="#useImperativeHandle和useRef" class="headerlink" title="useImperativeHandle和useRef"></a>useImperativeHandle和useRef</h2><ul><li> useRef可以方便的实现数据持久化，对于不需要进行展示，或者可以依赖其它<code>useState</code>来借东风。 </li><li> ref转发？ </li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">FancyInput</span>(<span class="params">props, ref</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> inputRef = useRef();</span><br><span class="line">  useImperativeHandle(ref, <span class="function">() =&gt;</span> (&#123;</span><br><span class="line">    focus: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      inputRef.current.focus();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;), []);</span><br><span class="line">  <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">ref</span>=<span class="string">&#123;inputRef&#125;</span> /&gt;</span></span>;</span><br><span class="line">&#125;</span><br><span class="line">FancyInput = forwardRef(FancyInput);</span><br></pre></td></tr></table></figure><h2 id="useCallback和useMemo"><a href="#useCallback和useMemo" class="headerlink" title="useCallback和useMemo"></a>useCallback和useMemo</h2><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use<span class="constructor">Callback(<span class="params">fn</span>, <span class="params">deps</span>)</span>` 相当于 `use<span class="constructor">Memo(()</span> =&gt; fn, deps)</span><br></pre></td></tr></table></figure><h2 id="其它一些Hook"><a href="#其它一些Hook" class="headerlink" title="其它一些Hook"></a>其它一些Hook</h2><ul><li>useContext</li><li>useReducer</li></ul><h2 id="自定义Hook"><a href="#自定义Hook" class="headerlink" title="自定义Hook"></a>自定义Hook</h2><p>复用状态逻辑</p><h2 id=""><a href="#" class="headerlink" title=""></a></h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Hook-是什么？&quot;&gt;&lt;a href=&quot;#Hook-是什么？&quot; class=&quot;headerlink&quot; title=&quot;Hook 是什么？&quot;&gt;&lt;/a&gt;Hook 是什么？&lt;/h2&gt;&lt;p&gt;“Hook 是 React 16.8 的新增特性。它可以让你在不编写 class 的</summary>
      
    
    
    
    
    <category term="react-hooks" scheme="https://gitee.com/shimmer612/myBlog/tags/react-hooks/"/>
    
  </entry>
  
  <entry>
    <title>2022年来啦</title>
    <link href="https://gitee.com/shimmer612/myBlog/2022/01/01/2022/"/>
    <id>https://gitee.com/shimmer612/myBlog/2022/01/01/2022/</id>
    <published>2021-12-31T16:00:00.000Z</published>
    <updated>2022-01-01T14:38:19.748Z</updated>
    
    <content type="html"><![CDATA[<h5 id="2022年元旦"><a href="#2022年元旦" class="headerlink" title="2022年元旦"></a>2022年元旦</h5><p><strong>新的一年又到来了</strong></p><p>工作的时间过的飞快，转眼间已经当了一年的打工人了。</p><p>这一年经历了很多，实习、毕业、工作、旅游、隔离、加班。</p><p>毕业后一个人留在了常州，开始没什么朋友，过的很烦闷和痛苦。</p><p>虽然工作中遇到了几个同事与好友，但是人的喜好并不相同。</p><p>但也是很开心的。至少工作中又很多欢乐。</p><p>经历了很多也收获了很多，从一开始的写一些小需求，到现在开发整个版本，调研新的技术。</p><p>现在应该算一个真正的前端程序员了吧。</p><p>就是自己技术的广度没多大提升。</p><p>每天从早写到晚，下班或者放假的时候学习新技术是可以屈指可数的。</p><p>今年慢慢加油吧。</p><p>今天元旦，华姐邀请我去她家吃饭，但是还要我自己烧饭，还是很快乐的，只是没有发挥好，最后出锅忘记了放盐，没有华姐做的好吃。饭后打打牌，做做小游戏，美中不足是没有打到羽毛球。</p><p>周末能和好朋友们一起玩一玩真的挺棒的，不会那么烦闷。</p><p>新的一年继续加油。</p><p>希望今年父母健康，一切都好。</p><p>自己一切都好，我爱的人和爱我的人一切都好。</p><p>新年快乐！</p><p><a href="%E4%B8%AD%E5%8D%88%E7%9A%84%E8%8F%9C"><img src="https://s4.ax1x.com/2022/01/01/TIXkW9.jpg" alt="TIXkW9.jpg"></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h5 id=&quot;2022年元旦&quot;&gt;&lt;a href=&quot;#2022年元旦&quot; class=&quot;headerlink&quot; title=&quot;2022年元旦&quot;&gt;&lt;/a&gt;2022年元旦&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;新的一年又到来了&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;工作的时间过的飞快，转眼间已经当了</summary>
      
    
    
    
    
    <category term="随笔" scheme="https://gitee.com/shimmer612/myBlog/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>react项目国际化</title>
    <link href="https://gitee.com/shimmer612/myBlog/2021/12/04/react%E9%A1%B9%E7%9B%AE%E5%9B%BD%E9%99%85%E5%8C%96/"/>
    <id>https://gitee.com/shimmer612/myBlog/2021/12/04/react%E9%A1%B9%E7%9B%AE%E5%9B%BD%E9%99%85%E5%8C%96/</id>
    <published>2021-12-03T16:00:00.000Z</published>
    <updated>2022-03-24T08:40:05.438Z</updated>
    
    <content type="html"><![CDATA[<h3 id="react项目国际化"><a href="#react项目国际化" class="headerlink" title="react项目国际化"></a>react项目国际化</h3><h4 id="这里使用的react-intl"><a href="#这里使用的react-intl" class="headerlink" title="这里使用的react-intl"></a>这里使用的react-intl</h4><h5 id="1、安装react-intl"><a href="#1、安装react-intl" class="headerlink" title="1、安装react-intl"></a>1、安装react-intl</h5><p><code>npm install react-intl --save</code> 或者 <code>cnpm install react-intl --save</code></p><h5 id="2、引入"><a href="#2、引入" class="headerlink" title="2、引入"></a>2、引入</h5><p>在需要国际化的文件引入react-intl</p><p>需要全局国际化就在app.js文件中引入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">import React, &#123; Component &#125; from &quot;react&quot;;</span><br><span class="line">import &#123; IntlProvider &#125; from &quot;react-intl&quot;;</span><br><span class="line"></span><br><span class="line">class Page extends Component &#123;</span><br><span class="line">    </span><br><span class="line">    render() &#123;</span><br><span class="line">        return (</span><br><span class="line">            &lt;IntlProvider&gt;</span><br><span class="line">            &lt;div&gt;</span><br><span class="line">            &lt;&#x2F;div&gt;</span><br><span class="line">            &lt;&#x2F;IntlProvider&gt;</span><br><span class="line">        )</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3、创建翻译数据文件"><a href="#3、创建翻译数据文件" class="headerlink" title="3、创建翻译数据文件"></a>3、创建翻译数据文件</h5><p>在src目录下新建一个文件夹i18n包含两个js文件一个<code>locales.js</code> 需要的语言一个<code>messages.js</code>需要翻译的数据</p><p>我这里是中文英语和尼泊尔语</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;locales.js</span><br><span class="line">export const LOCALES &#x3D; &#123;</span><br><span class="line">  NEPAIL: &quot;ne-Ne&quot;,</span><br><span class="line">  CHINESE: &quot;zh-CN&quot;,</span><br><span class="line">  ENGLISH: &quot;en&quot;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;messages.js</span><br><span class="line">import &#123; LOCALES &#125; from &quot;.&#x2F;locales&quot;;</span><br><span class="line"></span><br><span class="line">export const messages &#x3D; &#123;</span><br><span class="line">  [LOCALES.NEPAIL]: &#123;</span><br><span class="line">    chinese: &quot;चिनियाँ&quot;,</span><br><span class="line">    nepail: &quot;नेपाली&quot;,</span><br><span class="line">    change_lan: &quot;एउटा भाषा छान्नुहोस्&quot;,</span><br><span class="line">    station_name: &quot;चार्जिङ स्टेशनको नाम&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  [LOCALES.CHINESE]: &#123;</span><br><span class="line">    change_lan: &quot;选择语言&quot;,</span><br><span class="line">    chinese: &quot;中文&quot;,</span><br><span class="line">    nepail: &quot;尼泊尔语&quot;,</span><br><span class="line">    station_name: &quot;电站名称&quot;,</span><br><span class="line"> </span><br><span class="line">  &#125;,</span><br><span class="line">  [LOCALES.ENGLISH]: &#123;</span><br><span class="line">    change_lan: &quot;languages&quot;,</span><br><span class="line">    chinese: &quot;chinese&quot;,</span><br><span class="line">    nepail: &quot;Nepail&quot;,</span><br><span class="line">    station_name: &quot;stationName&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="4、使用"><a href="#4、使用" class="headerlink" title="4、使用"></a>4、使用</h5><p> 使用<code>FormattedMessage</code> 组件，允许用户对简单到复杂的字符串和消息进行翻译和格式化 </p><p>这个<code>locale</code> ，它接受一个字符串，决定了我们的应用程序是以什么语言呈现的。这里我使用<code>select</code>动态地改变这个值。</p><p><code>messages</code> 对象包含一组准备在前台显示的翻译字符串。这些也将根据当前的语言环境动态地添加。</p><p><code>defaultLocale</code> 道具是默认的locale，应该与应用程序的默认语言相匹配。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">import React, &#123; Component &#125; from &quot;react&quot;;</span><br><span class="line">import &#123; IntlProvider,FormattedMessage &#125; from &quot;react-intl&quot;;</span><br><span class="line">import &#123; LOCALES &#125; from &quot;..&#x2F;..&#x2F;i18n&#x2F;locales&quot;;</span><br><span class="line">import &#123; messages &#125; from &quot;..&#x2F;..&#x2F;i18n&#x2F;messages&quot;;</span><br><span class="line"></span><br><span class="line">class Page extends Component &#123;</span><br><span class="line">     constructor(props) &#123;</span><br><span class="line">     super(props);</span><br><span class="line">     this.state &#x3D; &#123;</span><br><span class="line">         &#x2F;&#x2F;默认语言</span><br><span class="line">      locale: LOCALES.CHINESE,</span><br><span class="line">     &#125;;</span><br><span class="line">    render() &#123;</span><br><span class="line">          const &#123; locale &#125; &#x3D; this.state;</span><br><span class="line">        return (</span><br><span class="line">            &lt;IntlProvider  </span><br><span class="line">                messages&#x3D;&#123;messages[locale]&#125; </span><br><span class="line">                locale&#x3D;&#123;locale&#125; </span><br><span class="line">                &#x2F;&#x2F;默认语言</span><br><span class="line">                defaultLocale&#x3D;&#123;locale.CHINESE&#125;&gt;</span><br><span class="line">            &lt;div&gt;</span><br><span class="line">                &lt;span&gt;</span><br><span class="line">                  &lt;span style&#x3D;&#123;&#123; marginRight: &quot;5px&quot; &#125;&#125;&gt;</span><br><span class="line">                    &lt;FormattedMessage id&#x3D;&quot;change_lan&quot; &#x2F;&gt;:</span><br><span class="line">                  &lt;&#x2F;span&gt;</span><br><span class="line">                  &lt;Select</span><br><span class="line">                    defaultValue&#x3D;&#123;1&#125;</span><br><span class="line">                    placeholder&#x3D;&#123;&lt;FormattedMessage id&#x3D;&quot;change_lan&quot; &#x2F;&gt;&#125;</span><br><span class="line">                    onChange&#x3D;&#123;(val) &#x3D;&gt; &#123;</span><br><span class="line">                      if (val &#x3D;&#x3D;&#x3D; 1) &#123;</span><br><span class="line">                        this.setState(&#123;</span><br><span class="line">                          locale: LOCALES.CHINESE,</span><br><span class="line">                        &#125;);</span><br><span class="line">                      &#125; else if (val &#x3D;&#x3D;&#x3D; 2) &#123;</span><br><span class="line">                        this.setState(&#123;</span><br><span class="line">                          locale: LOCALES.NEPAIL,</span><br><span class="line">                        &#125;);</span><br><span class="line">                      &#125; else if (val &#x3D;&#x3D;&#x3D; 3) &#123;</span><br><span class="line">                        this.setState(&#123;</span><br><span class="line">                          locale: LOCALES.ENGLISH,</span><br><span class="line">                        &#125;);</span><br><span class="line">                      &#125;</span><br><span class="line">                    &#125;&#125;</span><br><span class="line">                    style&#x3D;&#123;&#123; width: &quot;150px&quot; &#125;&#125;</span><br><span class="line">                  &gt;</span><br><span class="line">                    &lt;Option value&#x3D;&#123;1&#125;&gt;中文&lt;&#x2F;Option&gt;</span><br><span class="line">                    &lt;Option value&#x3D;&#123;2&#125;&gt;Nepail&lt;&#x2F;Option&gt;</span><br><span class="line">                    &lt;Option value&#x3D;&#123;3&#125;&gt;Engilish&lt;&#x2F;Option&gt;</span><br><span class="line">                  &lt;&#x2F;Select&gt;</span><br><span class="line">                &lt;&#x2F;span&gt;</span><br><span class="line">            &lt;&#x2F;div&gt;</span><br><span class="line">            &lt;&#x2F;IntlProvider&gt;</span><br><span class="line">        )</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="5、占位符placeholder使用、message提示的使用"><a href="#5、占位符placeholder使用、message提示的使用" class="headerlink" title="5、占位符placeholder使用、message提示的使用"></a>5、占位符placeholder使用、message提示的使用</h5><p>不能使用FormattedMessage因为返回的是一个html</p><p>首先使用<code>injectIntl</code>包装React组件， 注入<code>intl</code>上下文 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">import React, &#123; Component &#125; from &quot;react&quot;;</span><br><span class="line">import &#123; Form,  Input, message &#125; from &quot;antd&quot;;</span><br><span class="line">import &#123; FormattedMessage, injectIntl &#125; from &quot;react-intl&quot;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class Add extends Component &#123;</span><br><span class="line">  constructor(props) &#123;</span><br><span class="line">    super(props);</span><br><span class="line">    this.state &#x3D; &#123;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">  onFinish &#x3D; () &#x3D;&gt; &#123;</span><br><span class="line">    this.props.form.validateFields((err, values) &#x3D;&gt; &#123;</span><br><span class="line">      if (!err) &#123;</span><br><span class="line">            const msg2 &#x3D; this.props.intl.formatMessage(&#123; id: &quot;save_success&quot; &#125;);</span><br><span class="line">            message.success(msg2, 5);</span><br><span class="line">            this.props.form.resetFields();</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  render() &#123;</span><br><span class="line">    const &#123; getFieldDecorator, setFieldsValue &#125; &#x3D; this.props.form;</span><br><span class="line">    const placeholder &#x3D; this.props.intl.formatMessage(&#123; id: &quot;input&quot; &#125;);</span><br><span class="line">    return (</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;Form  name&#x3D;&quot;basic&quot; onSubmit&#x3D;&#123;this.onFinish&#125;&gt;</span><br><span class="line">          &lt;Form.Item label&#x3D;&#123;&lt;FormattedMessage id&#x3D;&quot;station_name&quot; &#x2F;&gt;&#125;&gt;</span><br><span class="line">            &#123;getFieldDecorator(&quot;name&quot;, &#123;</span><br><span class="line">              rules: [&#123; </span><br><span class="line">                  required: true, </span><br><span class="line">                  whitespace: true, </span><br><span class="line">                  message: &lt;FormattedMessage id&#x3D;&quot;required&quot; &#x2F;&gt;</span><br><span class="line">              &#125;],</span><br><span class="line">              initialValue: &quot;&quot;,</span><br><span class="line">            &#125;)(&lt;Input placeholder&#x3D;&#123;placeholder&#125; &#x2F;&gt;)&#125;</span><br><span class="line">          &lt;&#x2F;Form.Item&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Add &#x3D; Form.create(&#123;&#125;)(Add);</span><br><span class="line"></span><br><span class="line">export default injectIntl(Add);</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;react项目国际化&quot;&gt;&lt;a href=&quot;#react项目国际化&quot; class=&quot;headerlink&quot; title=&quot;react项目国际化&quot;&gt;&lt;/a&gt;react项目国际化&lt;/h3&gt;&lt;h4 id=&quot;这里使用的react-intl&quot;&gt;&lt;a href=&quot;#这里使用的r</summary>
      
    
    
    
    
    <category term="React" scheme="https://gitee.com/shimmer612/myBlog/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>react中使用谷歌地图</title>
    <link href="https://gitee.com/shimmer612/myBlog/2021/12/02/react%E4%B8%AD%E4%BD%BF%E7%94%A8%E8%B0%B7%E6%AD%8C%E5%9C%B0%E5%9B%BE/"/>
    <id>https://gitee.com/shimmer612/myBlog/2021/12/02/react%E4%B8%AD%E4%BD%BF%E7%94%A8%E8%B0%B7%E6%AD%8C%E5%9C%B0%E5%9B%BE/</id>
    <published>2021-12-01T16:00:00.000Z</published>
    <updated>2022-03-24T08:40:00.030Z</updated>
    
    <content type="html"><![CDATA[<h4 id="react中使用谷歌地图"><a href="#react中使用谷歌地图" class="headerlink" title="react中使用谷歌地图"></a>react中使用谷歌地图</h4><h5 id="1、引入"><a href="#1、引入" class="headerlink" title="1、引入"></a>1、引入</h5><p><strong>index.html文件中引入谷歌地图</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;shrink-to-fit=no&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;theme-color&quot;</span> <span class="attr">content</span>=<span class="string">&quot;#000000&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;shortcut icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;%PUBLIC_URL%/favicon.ico&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>OMS<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://maps.googleapis.com/maps/api/js?key=AIzaSyDVTk78W-PvhqUC08l6MBqUHTjJXSGcP4g&amp;libraries=places&amp;language=&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="2、使用"><a href="#2、使用" class="headerlink" title="2、使用"></a>2、使用</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line">import React, &#123; Component &#125; from &quot;react&quot;;</span><br><span class="line">import &#123; Button, Input &#125; from &quot;antd&quot;;</span><br><span class="line">import &#123; FormattedMessage &#125; from &quot;react-intl&quot;;</span><br><span class="line"></span><br><span class="line">const googleMap &#x3D; window.google &amp;&amp; window.google.maps;</span><br><span class="line"></span><br><span class="line">class Map extends Component &#123;</span><br><span class="line">  constructor(props) &#123;</span><br><span class="line">    super(props);</span><br><span class="line">    this.state &#x3D; &#123;</span><br><span class="line">      map: null,</span><br><span class="line">      lat: null,</span><br><span class="line">      lng: null,</span><br><span class="line">      marker: [],</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F; 初始化谷歌地图</span><br><span class="line">  componentDidMount() &#123;</span><br><span class="line">    if (&quot;geolocation&quot; in navigator) &#123;</span><br><span class="line">      &#x2F;&#x2F;检测当前设备是否支持H5Geolocation API</span><br><span class="line">      navigator.geolocation.getCurrentPosition((position) &#x3D;&gt; &#123;</span><br><span class="line">        let mapProp &#x3D; &#123;</span><br><span class="line">          center: new googleMap.LatLng(position.coords.latitude, position.coords.longitude),</span><br><span class="line">          zoom: 17,</span><br><span class="line">          mapTypeId: googleMap.MapTypeId.ROADMAP,</span><br><span class="line">        &#125;;</span><br><span class="line">        let map &#x3D; new googleMap.Map(document.getElementById(&quot;googleMap&quot;), mapProp);</span><br><span class="line"></span><br><span class="line">        if (this.state.marker[0] &amp;&amp; this.state.marker[0].setMap) &#123;</span><br><span class="line">          this.state.marker[0].setMap(null);</span><br><span class="line">        &#125;</span><br><span class="line">        const arr &#x3D; [];</span><br><span class="line">        arr[0] &#x3D; new googleMap.Marker(&#123;</span><br><span class="line">          position: new googleMap.LatLng(position.coords.latitude, position.coords.longitude),</span><br><span class="line">        &#125;);</span><br><span class="line">        this.setState(</span><br><span class="line">          &#123;</span><br><span class="line">            marker: arr,</span><br><span class="line">            lat: position.coords.latitude,</span><br><span class="line">            lng: position.coords.longitude,</span><br><span class="line">            map,</span><br><span class="line">          &#125;,</span><br><span class="line">          () &#x3D;&gt; &#123;</span><br><span class="line">            this.state.marker[0].setMap(map);</span><br><span class="line">          &#125;</span><br><span class="line">        );</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      alert(&quot;该浏览器不支持获取地理位置&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  addMap &#x3D; () &#x3D;&gt; &#123;</span><br><span class="line">    googleMap.event.addListener(this.state.map, &quot;click&quot;, (e) &#x3D;&gt; &#123;</span><br><span class="line">      if (this.state.marker[0] &amp;&amp; this.state.marker[0].setMap) &#123;</span><br><span class="line">        this.state.marker[0].setMap(null);</span><br><span class="line">      &#125;</span><br><span class="line">      const arr &#x3D; [];</span><br><span class="line">      arr[0] &#x3D; new googleMap.Marker(&#123;</span><br><span class="line">        position: new googleMap.LatLng(e.latLng.lat(), e.latLng.lng()),</span><br><span class="line">      &#125;);</span><br><span class="line">      this.setState(</span><br><span class="line">        &#123;</span><br><span class="line">          marker: arr,</span><br><span class="line">          lat: e.latLng.lat(),</span><br><span class="line">          lng: e.latLng.lng(),</span><br><span class="line">        &#125;,</span><br><span class="line">        () &#x3D;&gt; &#123;</span><br><span class="line">          this.state.marker[0].setMap(this.state.map);</span><br><span class="line">        &#125;</span><br><span class="line">      );</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;;</span><br><span class="line">  render() &#123;</span><br><span class="line">    return (</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;div style&#x3D;&#123;&#123; display: &quot;flex&quot;, alignItems: &quot;center&quot;, marginBottom: 10 &#125;&#125;&gt;</span><br><span class="line">          &lt;span&gt;</span><br><span class="line">            &lt;FormattedMessage id&#x3D;&quot;lng&quot; &#x2F;&gt;：</span><br><span class="line">          &lt;&#x2F;span&gt;</span><br><span class="line">          &lt;Input style&#x3D;&#123;&#123; width: &quot;200px&quot; &#125;&#125; value&#x3D;&#123;this.state.lng&#125; disabled &#x2F;&gt;</span><br><span class="line">          &lt;span style&#x3D;&#123;&#123; marginLeft: 20 &#125;&#125;&gt;</span><br><span class="line">            &lt;FormattedMessage id&#x3D;&quot;lat&quot; &#x2F;&gt;：</span><br><span class="line">          &lt;&#x2F;span&gt;</span><br><span class="line">          &lt;Input style&#x3D;&#123;&#123; width: &quot;200px&quot; &#125;&#125; value&#x3D;&#123;this.state.lat&#125; disabled &#x2F;&gt;</span><br><span class="line"></span><br><span class="line">          &lt;Button</span><br><span class="line">            style&#x3D;&#123;&#123; marginLeft: 20 &#125;&#125;</span><br><span class="line">            type&#x3D;&quot;primary&quot;</span><br><span class="line">            onClick&#x3D;&#123;() &#x3D;&gt; &#123;</span><br><span class="line">              this.props.addLatLng(this.state.lat, this.state.lng);</span><br><span class="line">              this.props.onCancel();</span><br><span class="line">            &#125;&#125;</span><br><span class="line">          &gt;</span><br><span class="line">            &lt;FormattedMessage id&#x3D;&quot;ok&quot; &#x2F;&gt;</span><br><span class="line">          &lt;&#x2F;Button&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div id&#x3D;&quot;googleMap&quot; style&#x3D;&#123;&#123; width: &quot;900px&quot;, height: &quot;500px&quot; &#125;&#125; onClick&#x3D;&#123;this.addMap&#125;&gt;&lt;&#x2F;div&gt;;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">export default Map;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;react中使用谷歌地图&quot;&gt;&lt;a href=&quot;#react中使用谷歌地图&quot; class=&quot;headerlink&quot; title=&quot;react中使用谷歌地图&quot;&gt;&lt;/a&gt;react中使用谷歌地图&lt;/h4&gt;&lt;h5 id=&quot;1、引入&quot;&gt;&lt;a href=&quot;#1、引入&quot; cla</summary>
      
    
    
    
    
    <category term="React" scheme="https://gitee.com/shimmer612/myBlog/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>Redux的使用方法（复习）</title>
    <link href="https://gitee.com/shimmer612/myBlog/2021/11/03/redux&amp;&amp;reacy-redux%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>https://gitee.com/shimmer612/myBlog/2021/11/03/redux&amp;&amp;reacy-redux%E7%9A%84%E4%BD%BF%E7%94%A8/</id>
    <published>2021-11-02T16:00:00.000Z</published>
    <updated>2022-03-24T08:39:54.625Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Redux的使用方法"><a href="#Redux的使用方法" class="headerlink" title="Redux的使用方法"></a>Redux的使用方法</h3><h6 id="1、安装redux"><a href="#1、安装redux" class="headerlink" title="1、安装redux"></a>1、安装redux</h6><p><code>npm i redux --save</code></p><h6 id="2、新建文件"><a href="#2、新建文件" class="headerlink" title="2、新建文件"></a>2、新建文件</h6><p><strong>新建文件夹store包含store.js/reducer.js/action.js</strong></p><h6 id="3、新建reducer-action-引入store"><a href="#3、新建reducer-action-引入store" class="headerlink" title="3、新建reducer/action/引入store"></a>3、新建reducer/action/引入store</h6><p><strong>reducer.js</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> defaultData = &#123; <span class="attr">num</span>: <span class="number">0</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> reducer = <span class="function">(<span class="params">state = defaultData, action</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;action: &quot;</span>, action);</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;state: &quot;</span>, state);</span><br><span class="line">  <span class="keyword">const</span> newData = <span class="built_in">JSON</span>.parse(<span class="built_in">JSON</span>.stringify(state));</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;newData: &quot;</span>, newData);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">switch</span> (action.type) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&quot;add&quot;</span>:</span><br><span class="line">      newData.num++;</span><br><span class="line">      <span class="keyword">return</span> newData;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&quot;minus&quot;</span>:</span><br><span class="line">      newData.num--;</span><br><span class="line">      <span class="keyword">return</span> newData;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&quot;getVal&quot;</span>:</span><br><span class="line">      newData.num = action.value;</span><br><span class="line">      <span class="keyword">return</span> newData;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">      <span class="keyword">return</span> newData;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> reducer;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>action.js</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> add = <span class="function">(<span class="params">value</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123; <span class="attr">type</span>: <span class="string">&quot;add&quot;</span>, value &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> minus = <span class="function">(<span class="params">value</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123; <span class="attr">type</span>: <span class="string">&quot;minus&quot;</span>, value &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> changeVal = <span class="function">(<span class="params">value</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123; <span class="attr">type</span>: <span class="string">&quot;getVal&quot;</span>, value &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123; add, minus, changeVal &#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>store.js</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Redux的使用方法&quot;&gt;&lt;a href=&quot;#Redux的使用方法&quot; class=&quot;headerlink&quot; title=&quot;Redux的使用方法&quot;&gt;&lt;/a&gt;Redux的使用方法&lt;/h3&gt;&lt;h6 id=&quot;1、安装redux&quot;&gt;&lt;a href=&quot;#1、安装redux&quot; c</summary>
      
    
    
    
    
    <category term="React" scheme="https://gitee.com/shimmer612/myBlog/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>除法数值转换精度</title>
    <link href="https://gitee.com/shimmer612/myBlog/2021/10/08/%E9%99%A4%E6%B3%95%E7%9A%84%E7%99%BE%E5%88%86%E6%AF%94%E7%B2%BE%E5%BA%A6/"/>
    <id>https://gitee.com/shimmer612/myBlog/2021/10/08/%E9%99%A4%E6%B3%95%E7%9A%84%E7%99%BE%E5%88%86%E6%AF%94%E7%B2%BE%E5%BA%A6/</id>
    <published>2021-10-07T16:00:00.000Z</published>
    <updated>2022-03-24T08:40:53.916Z</updated>
    
    <content type="html"><![CDATA[<h3 id="除法数值转换精度"><a href="#除法数值转换精度" class="headerlink" title="除法数值转换精度"></a>除法数值转换精度</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//arg1:除数</span></span><br><span class="line"><span class="comment">//arg2:被除数</span></span><br><span class="line"><span class="comment">// 除法转换数值精度</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> editDiscountNum = <span class="function">(<span class="params">arg1, arg2</span>) =&gt;</span> &#123;</span><br><span class="line">  arg1 = <span class="built_in">Number</span>(arg1);</span><br><span class="line">  arg2 = <span class="built_in">Number</span>(arg2);</span><br><span class="line">  <span class="keyword">if</span> (!arg2) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (!arg1 &amp;&amp; arg1 !== <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (arg1 === <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  arg1 = toNonExponential(arg1);</span><br><span class="line">  arg2 = toNonExponential(arg2);</span><br><span class="line">  <span class="keyword">let</span> n1, n2;</span><br><span class="line">  <span class="keyword">let</span> r1, r2; <span class="comment">// 小数位数</span></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    r1 = arg1.toString().split(<span class="string">&quot;.&quot;</span>)[<span class="number">1</span>].length;</span><br><span class="line">  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">    r1 = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    r2 = arg2.toString().split(<span class="string">&quot;.&quot;</span>)[<span class="number">1</span>].length;</span><br><span class="line">  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">    r2 = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  n1 = <span class="built_in">Number</span>(arg1.toString().replace(<span class="string">&quot;.&quot;</span>, <span class="string">&quot;&quot;</span>));</span><br><span class="line">  n2 = <span class="built_in">Number</span>(arg2.toString().replace(<span class="string">&quot;.&quot;</span>, <span class="string">&quot;&quot;</span>));</span><br><span class="line">  <span class="keyword">return</span> floatMultiply(n1 / n2, <span class="built_in">Math</span>.pow(<span class="number">10</span>, r2 - r1));</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 乘法数值精度</span></span><br><span class="line"><span class="keyword">const</span> floatMultiply = <span class="function">(<span class="params">arg1, arg2</span>) =&gt;</span> &#123;</span><br><span class="line">  arg1 = <span class="built_in">Number</span>(arg1);</span><br><span class="line">  arg2 = <span class="built_in">Number</span>(arg2);</span><br><span class="line">  <span class="keyword">if</span> ((!arg1 &amp;&amp; arg1 !== <span class="number">0</span>) || (!arg2 &amp;&amp; arg2 !== <span class="number">0</span>)) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  arg1 = toNonExponential(arg1);</span><br><span class="line">  arg2 = toNonExponential(arg2);</span><br><span class="line">  <span class="keyword">let</span> n1, n2;</span><br><span class="line">  <span class="keyword">let</span> r1, r2; <span class="comment">// 小数位数</span></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    r1 = arg1.toString().split(<span class="string">&quot;.&quot;</span>)[<span class="number">1</span>].length;</span><br><span class="line">  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">    r1 = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    r2 = arg2.toString().split(<span class="string">&quot;.&quot;</span>)[<span class="number">1</span>].length;</span><br><span class="line">  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">    r2 = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  n1 = <span class="built_in">Number</span>(arg1.toString().replace(<span class="string">&quot;.&quot;</span>, <span class="string">&quot;&quot;</span>));</span><br><span class="line">  n2 = <span class="built_in">Number</span>(arg2.toString().replace(<span class="string">&quot;.&quot;</span>, <span class="string">&quot;&quot;</span>));</span><br><span class="line">  <span class="keyword">return</span> (n1 * n2) / <span class="built_in">Math</span>.pow(<span class="number">10</span>, r1 + r2);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> toNonExponential = <span class="function">(<span class="params">num</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (num == <span class="literal">null</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> num;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> num == <span class="string">&quot;number&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> m = num.toExponential().match(<span class="regexp">/\d(?:\.(\d*))?e([+-]\d+)/</span>);</span><br><span class="line">    <span class="keyword">return</span> num.toFixed(<span class="built_in">Math</span>.max(<span class="number">0</span>, (m[<span class="number">1</span>] || <span class="string">&quot;&quot;</span>).length - m[<span class="number">2</span>]));</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> num;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;除法数值转换精度&quot;&gt;&lt;a href=&quot;#除法数值转换精度&quot; class=&quot;headerlink&quot; title=&quot;除法数值转换精度&quot;&gt;&lt;/a&gt;除法数值转换精度&lt;/h3&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class</summary>
      
    
    
    
    
    <category term="JavaScript" scheme="https://gitee.com/shimmer612/myBlog/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>常用正则表达式</title>
    <link href="https://gitee.com/shimmer612/myBlog/2021/09/27/%E5%B8%B8%E7%94%A8%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>https://gitee.com/shimmer612/myBlog/2021/09/27/%E5%B8%B8%E7%94%A8%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</id>
    <published>2021-09-26T16:00:00.000Z</published>
    <updated>2022-03-24T08:40:42.734Z</updated>
    
    <content type="html"><![CDATA[<h5 id="常用正则表达式"><a href="#常用正则表达式" class="headerlink" title="常用正则表达式"></a>常用正则表达式</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//手机号</span></span><br><span class="line"><span class="keyword">var</span> phoneReg = <span class="regexp">/^1[3456789]\d&#123;9&#125;$/</span>; </span><br><span class="line"><span class="comment">// 详细手机号校验规则</span></span><br><span class="line"><span class="keyword">var</span> phoneReg1 = <span class="regexp">/^(13[0-9]|14[579]|15[0-3,5-9]|16[6]|17[0135678]|18[0-9]|19[89])\d&#123;8&#125;$/</span>; </span><br><span class="line"><span class="comment">//验证手机号和固定电话</span></span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/^((0\d&#123;2,3&#125;-\d&#123;7,8&#125;)|(1[34578]\d&#123;9&#125;))$/</span>;;  </span><br><span class="line"></span><br><span class="line"><span class="comment">//邮箱</span></span><br><span class="line"><span class="keyword">var</span> emailReg = <span class="regexp">/[\w!#$%&amp;&#x27;*+/=?^_`&#123;|&#125;~-]+(?:\.[\w!#$%&amp;&#x27;*+/=?^_`&#123;|&#125;~-]+)*@(?:[\w](?:[\w-]*[\w])?\.)+[\w](?:[\w-]*[\w])?/</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//用户名校验</span></span><br><span class="line"><span class="keyword">var</span> userNameReg = <span class="regexp">/^[a-zA-Z0-9_-]&#123;6,16&#125;$/</span>;  <span class="comment">//6-16位的包含大小写字母、数字、特殊符号- _ 的用户名</span></span><br><span class="line"><span class="keyword">var</span> userNameReg1 = <span class="regexp">/^(?![0-9]*$)(?![a-zA-Z]*$)[a-zA-Z0-9]&#123;6,20&#125;$/</span>; <span class="comment">//6-20位字母和数字组合</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//身份证验证</span></span><br><span class="line"> <span class="keyword">var</span> idcardReg = <span class="regexp">/(^\d&#123;15&#125;$)|(^\d&#123;18&#125;$)|(^\d&#123;17&#125;(\d|X|x)$)/</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//验证是否两位小数</span></span><br><span class="line"><span class="keyword">var</span> twoDigReg = <span class="regexp">/(^[1-9]([0-9]+)?(\.[0-9]&#123;1,2&#125;)?$)|(^(0)&#123;1&#125;$)|(^[0-9]\.[0-9]([0-9])?$)/</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//内容只能由英文、数字、下划线组成</span></span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/^\w+$/</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//内容只能包含英文字母和数字</span></span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/^[a-z0-9]+$/i</span>；</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h5 id=&quot;常用正则表达式&quot;&gt;&lt;a href=&quot;#常用正则表达式&quot; class=&quot;headerlink&quot; title=&quot;常用正则表达式&quot;&gt;&lt;/a&gt;常用正则表达式&lt;/h5&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gu</summary>
      
    
    
    
    
    <category term="正则" scheme="https://gitee.com/shimmer612/myBlog/tags/%E6%AD%A3%E5%88%99/"/>
    
  </entry>
  
  <entry>
    <title>数组的map方法会不会改变原数组</title>
    <link href="https://gitee.com/shimmer612/myBlog/2021/09/21/%E6%95%B0%E7%BB%84%E7%9A%84map%E6%96%B9%E6%B3%95/"/>
    <id>https://gitee.com/shimmer612/myBlog/2021/09/21/%E6%95%B0%E7%BB%84%E7%9A%84map%E6%96%B9%E6%B3%95/</id>
    <published>2021-09-20T16:00:00.000Z</published>
    <updated>2022-03-24T08:40:24.612Z</updated>
    
    <content type="html"><![CDATA[<h5 id="数组的map方法会不会改变原数组"><a href="#数组的map方法会不会改变原数组" class="headerlink" title="数组的map方法会不会改变原数组"></a>数组的map方法会不会改变原数组</h5><p>****父组件朝子组件传值，二次渲染以后有一个数组的值改变了，发现该数组使用了map，map不是不会改变原数组吗。</p><h6 id="会改变原数组"><a href="#会改变原数组" class="headerlink" title="会改变原数组"></a>会改变原数组</h6><p>于是就自己试了一下</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [&#123; <span class="attr">name</span>: <span class="string">&quot;aa&quot;</span>, <span class="attr">num</span>: <span class="number">1</span> &#125;];</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> newArr = arr.map(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">  item.num *= <span class="number">10</span>;</span><br><span class="line">  <span class="keyword">return</span> item;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;arr: &quot;</span>, arr);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;newArr: &quot;</span>, newArr);</span><br><span class="line"><span class="comment">/*********************</span></span><br><span class="line"><span class="comment">arr:  [ &#123; name: &#x27;aa&#x27;, num: 10 &#125; ]</span></span><br><span class="line"><span class="comment">newArr:  [ &#123; name: &#x27;aa&#x27;, num: 10 &#125; ]</span></span><br><span class="line"><span class="comment">*******************/</span></span><br></pre></td></tr></table></figure><p> <strong>上面代码我们看出原数组arr的值改变了，数组内是引用类型</strong></p><h6 id="不会改变原数组"><a href="#不会改变原数组" class="headerlink" title="不会改变原数组"></a>不会改变原数组</h6><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]; </span><br><span class="line"> <span class="keyword">const</span> newArr = arr.map(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">   <span class="keyword">return</span> item * <span class="number">10</span>;</span><br><span class="line"> &#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;arr: &quot;</span>, arr);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;newArr: &quot;</span>, newArr);</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">arr:  [ 1, 2, 3, 4, 5 ]</span></span><br><span class="line"><span class="comment">newArr:  [ 10, 20, 30, 40, 50 ]</span></span><br><span class="line"><span class="comment">**/</span></span><br></pre></td></tr></table></figure><p><strong>我又试了一下值类型，发现值类型不会被改变</strong></p><p><strong>看来数组的map方法会改变原数组</strong></p><h6 id="不改变的写法"><a href="#不改变的写法" class="headerlink" title="不改变的写法"></a>不改变的写法</h6><p><strong>怎么样能让map方法不改变原数组呢？</strong></p><p><strong>改变原数组的原因是直接对item进行操作。</strong></p><p><strong>可以返回一个新的，如下</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [&#123; <span class="attr">name</span>: <span class="string">&quot;aa&quot;</span>, <span class="attr">num</span>: <span class="number">1</span> &#125;];</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> newArr = arr.map(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">  name:item.name,</span><br><span class="line">  num:item.num*<span class="number">10</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;arr: &quot;</span>, arr);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;newArr: &quot;</span>, newArr);</span><br><span class="line"><span class="comment">/***</span></span><br><span class="line"><span class="comment">arr:  [ &#123; name: &#x27;aa&#x27;, num: 1 &#125; ]</span></span><br><span class="line"><span class="comment">newArr:  [ &#123; name: &#x27;aa&#x27;, num: 10 &#125; ]</span></span><br><span class="line"><span class="comment">***/</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h5 id=&quot;数组的map方法会不会改变原数组&quot;&gt;&lt;a href=&quot;#数组的map方法会不会改变原数组&quot; class=&quot;headerlink&quot; title=&quot;数组的map方法会不会改变原数组&quot;&gt;&lt;/a&gt;数组的map方法会不会改变原数组&lt;/h5&gt;&lt;p&gt;****父组件朝子组件传值，</summary>
      
    
    
    
    
    <category term="JavaScript" scheme="https://gitee.com/shimmer612/myBlog/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>文件作为参数上传</title>
    <link href="https://gitee.com/shimmer612/myBlog/2021/08/12/%E6%96%87%E4%BB%B6%E4%BD%9C%E4%B8%BA%E5%8F%82%E6%95%B0%E4%B8%8A%E4%BC%A0/"/>
    <id>https://gitee.com/shimmer612/myBlog/2021/08/12/%E6%96%87%E4%BB%B6%E4%BD%9C%E4%B8%BA%E5%8F%82%E6%95%B0%E4%B8%8A%E4%BC%A0/</id>
    <published>2021-08-11T16:00:00.000Z</published>
    <updated>2022-03-24T08:40:57.755Z</updated>
    
    <content type="html"><![CDATA[<h5 id="文件作为参数上传"><a href="#文件作为参数上传" class="headerlink" title="文件作为参数上传"></a>文件作为参数上传</h5><p>文件作为参数上传，需要使用<code>formData</code>格式。</p><p>本次是使用<code>Ant Design的form组件和Upload组件</code>实现</p><p>若需要别的参数，也要通过<code>formData的append的方法</code>把参数添加到formData中</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//formData中添加参数</span></span><br><span class="line">formData.append(<span class="string">&quot;参数名&quot;</span>，<span class="string">&quot;参数值&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br></pre></td><td class="code"><pre><span class="line">import React, &#123; Component &#125; from &quot;react&quot;;</span><br><span class="line">import &#123; Form, Button, Input, message, Upload &#125; from &quot;antd&quot;;</span><br><span class="line">import fetchHandler from &quot;@&#x2F;fetch&#x2F;fetchHandler&quot;;</span><br><span class="line">import &#123; prefixFile, rebateUpload &#125; from &quot;@&#x2F;fetch&#x2F;fetchApi&quot;;</span><br><span class="line">import axios from &quot;axios&quot;;</span><br><span class="line"></span><br><span class="line">const &#123; TextArea &#125; &#x3D; Input;</span><br><span class="line"></span><br><span class="line">class UploadForm extends Component &#123;</span><br><span class="line">  constructor(props) &#123;</span><br><span class="line">    super(props);</span><br><span class="line">    this.props &#x3D; props;</span><br><span class="line">    this.state &#x3D; &#123;</span><br><span class="line">      fileList: [],</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  normFile &#x3D; (e) &#x3D;&gt; &#123;</span><br><span class="line">    console.log(&quot;Upload event:&quot;, e);</span><br><span class="line">    if (Array.isArray(e)) &#123;</span><br><span class="line">      return e;</span><br><span class="line">    &#125;</span><br><span class="line">    return e &amp;&amp; e.fileList;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F; 表单提交</span><br><span class="line">  onFinish &#x3D; (e) &#x3D;&gt; &#123;</span><br><span class="line">    e.preventDefault();</span><br><span class="line">    this.props.form.validateFields((err, values) &#x3D;&gt; &#123;</span><br><span class="line">      if (!err) &#123;</span><br><span class="line">        const &#123; fileList &#125; &#x3D; this.state;</span><br><span class="line">        const formData &#x3D; new FormData();</span><br><span class="line">        fileList.forEach((file) &#x3D;&gt; &#123;</span><br><span class="line">          formData.append(&quot;file&quot;, file);</span><br><span class="line">          formData.append(&quot;rebateName&quot;, values.rebateName);</span><br><span class="line">          formData.append(&quot;remark&quot;, values.remark);</span><br><span class="line">          formData.append(&quot;activityName&quot;, values.activityName);</span><br><span class="line">        &#125;);</span><br><span class="line">        axios(&#123;</span><br><span class="line">          method: &quot;post&quot;,</span><br><span class="line">          url: &#96;$&#123;prefixFile&#125;&#x2F;webApi&#x2F;rebate&#x2F;upload&#96;,</span><br><span class="line">          data: formData,</span><br><span class="line">          header: &#123;</span><br><span class="line">            Authorization: window.sessionStorage.getItem(&quot;token&quot;),</span><br><span class="line">          &#125;,</span><br><span class="line">        &#125;).then((res) &#x3D;&gt; &#123;</span><br><span class="line">          console.log(res);</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F; 模板下载</span><br><span class="line">  downloadTemplate &#x3D; () &#x3D;&gt; &#123;</span><br><span class="line">    if (this.fileUrl) &#123;</span><br><span class="line">      window.location.href &#x3D; this.fileUrl;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      window.location.href &#x3D; &#96;$&#123;prefixFile&#125;&#x2F;templates&#x2F;批量返利模板.xls&#96;;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  render() &#123;</span><br><span class="line">    const &#123; getFieldDecorator &#125; &#x3D; this.props.form;</span><br><span class="line">    const &#123; fileList &#125; &#x3D; this.state;</span><br><span class="line">    const tailFormItemLayout &#x3D; &#123;</span><br><span class="line">      wrapperCol: &#123;</span><br><span class="line">        xs: &#123; span: 24, offset: 0 &#125;,</span><br><span class="line">        sm: &#123; span: 16, offset: 5 &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;;</span><br><span class="line">    const formItemLayout &#x3D; &#123;</span><br><span class="line">      labelCol: &#123;</span><br><span class="line">        xs: &#123; span: 24 &#125;,</span><br><span class="line">        sm: &#123; span: 4 &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">      wrapperCol: &#123;</span><br><span class="line">        xs: &#123; span: 24 &#125;,</span><br><span class="line">        sm: &#123; span: 12, offset: 1 &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;;</span><br><span class="line">    const uploadProps &#x3D; &#123;</span><br><span class="line">      name: &quot;file&quot;,</span><br><span class="line">      accept: &quot;.xls&quot;,</span><br><span class="line">      &#x2F;&#x2F; onChange: this.handleChange,</span><br><span class="line">      onRemove: (file) &#x3D;&gt; &#123;</span><br><span class="line">        this.setState((state) &#x3D;&gt; &#123;</span><br><span class="line">          const index &#x3D; state.fileList.indexOf(file);</span><br><span class="line">          const newFileList &#x3D; state.fileList.slice();</span><br><span class="line">          newFileList.splice(index, 1);</span><br><span class="line">          this.props.form.setFieldsValue(&#123;</span><br><span class="line">            file: &quot;&quot;,</span><br><span class="line">          &#125;);</span><br><span class="line">          return &#123;</span><br><span class="line">            fileList: newFileList,</span><br><span class="line">          &#125;;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;,</span><br><span class="line">      beforeUpload: (file) &#x3D;&gt; &#123;</span><br><span class="line">        this.setState(</span><br><span class="line">          &#123;</span><br><span class="line">            fileList: [file],</span><br><span class="line">          &#125;,</span><br><span class="line">          () &#x3D;&gt; &#123;</span><br><span class="line">            const &#123; fileList &#125; &#x3D; this.state;</span><br><span class="line">            const formData &#x3D; new FormData();</span><br><span class="line">            fileList.forEach((file) &#x3D;&gt; &#123;</span><br><span class="line">              formData.append(&quot;file&quot;, file);</span><br><span class="line">            &#125;);</span><br><span class="line">            this.props.form.setFieldsValue(&#123;</span><br><span class="line">              file: formData,</span><br><span class="line">            &#125;);</span><br><span class="line">          &#125;</span><br><span class="line">        );</span><br><span class="line">        return false;</span><br><span class="line">      &#125;,</span><br><span class="line">      fileList,</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    return (</span><br><span class="line">      &lt;Form name&#x3D;&quot;basic&quot; onSubmit&#x3D;&#123;this.onFinish&#125;&gt;</span><br><span class="line">        &lt;Form.Item label&#x3D;&quot;返利批次名称&quot; &#123;...formItemLayout&#125;&gt;</span><br><span class="line">          &#123;getFieldDecorator(&quot;rebateName&quot;, &#123;</span><br><span class="line">            rules: [&#123; required: true, message: &quot;该项是必填项&quot; &#125;],</span><br><span class="line">            initialValue: &quot;&quot;,</span><br><span class="line">          &#125;)(&lt;Input placeholder&#x3D;&quot;请输入返利批次名称&quot; maxLength&#x3D;&#123;100&#125; &#x2F;&gt;)&#125;</span><br><span class="line">        &lt;&#x2F;Form.Item&gt;</span><br><span class="line">        &lt;Form.Item label&#x3D;&quot;活动名称&quot; &#123;...formItemLayout&#125;&gt;</span><br><span class="line">          &#123;getFieldDecorator(&quot;activityName&quot;, &#123;</span><br><span class="line">            rules: [&#123; required: true, message: &quot;该项是必填项&quot; &#125;],</span><br><span class="line">            initialValue: &quot;&quot;,</span><br><span class="line">          &#125;)(&lt;Input placeholder&#x3D;&quot;请输入活动名称&quot; maxLength&#x3D;&#123;100&#125; &#x2F;&gt;)&#125;</span><br><span class="line">        &lt;&#x2F;Form.Item&gt;</span><br><span class="line">        &lt;Form.Item label&#x3D;&quot;备注&quot; &#123;...formItemLayout&#125;&gt;</span><br><span class="line">          &#123;getFieldDecorator(&quot;remark&quot;, &#123;</span><br><span class="line">            rules: [&#123; required: false &#125;],</span><br><span class="line">            initialValue: &quot;&quot;,</span><br><span class="line">          &#125;)(&lt;TextArea rows&#x3D;&#123;5&#125; maxLength&#x3D;&#123;50&#125; placeholder&#x3D;&quot;请输入备注&quot; &#x2F;&gt;)&#125;</span><br><span class="line">        &lt;&#x2F;Form.Item&gt;</span><br><span class="line"></span><br><span class="line">        &lt;Form.Item label&#x3D;&quot;批量上传&quot; &#123;...formItemLayout&#125;&gt;</span><br><span class="line">          &#123;getFieldDecorator(&quot;file&quot;, &#123;</span><br><span class="line">            valuePropName: &quot;fileList&quot;,</span><br><span class="line">            getValueFromEvent: this.normFile,</span><br><span class="line">            rules: [&#123; required: true, message: &quot;该项是必填项&quot; &#125;],</span><br><span class="line">          &#125;)(</span><br><span class="line">            &lt;div&gt;</span><br><span class="line">              &lt;Upload &#123;...uploadProps&#125;&gt;</span><br><span class="line">                &lt;Button type&#x3D;&quot;dashed&quot;&gt;上传文件&lt;&#x2F;Button&gt;</span><br><span class="line">              &lt;&#x2F;Upload&gt;</span><br><span class="line">              &lt;a style&#x3D;&#123;&#123; marginRight: &quot;10px&quot; &#125;&#125;&gt;模板&lt;&#x2F;a&gt;</span><br><span class="line">              &lt;a onClick&#x3D;&#123;this.downloadTemplate&#125;&gt;点击下载&lt;&#x2F;a&gt;</span><br><span class="line">            &lt;&#x2F;div&gt;</span><br><span class="line">          )&#125;</span><br><span class="line">        &lt;&#x2F;Form.Item&gt;</span><br><span class="line">        &lt;Form.Item &#123;...tailFormItemLayout&#125;&gt;</span><br><span class="line">          &lt;Button</span><br><span class="line">            onClick&#x3D;&#123;() &#x3D;&gt; &#123;</span><br><span class="line">              this.props.onCancel();</span><br><span class="line">            &#125;&#125;</span><br><span class="line">            style&#x3D;&#123;&#123; marginRight: &quot;20px&quot; &#125;&#125;</span><br><span class="line">          &gt;</span><br><span class="line">            退出</span><br><span class="line">          &lt;&#x2F;Button&gt;</span><br><span class="line">          &lt;Button type&#x3D;&quot;primary&quot; htmlType&#x3D;&quot;submit&quot;&gt;</span><br><span class="line">            提交</span><br><span class="line">          &lt;&#x2F;Button&gt;</span><br><span class="line">        &lt;&#x2F;Form.Item&gt;</span><br><span class="line">      &lt;&#x2F;Form&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">UploadForm &#x3D; Form.create(&#123;&#125;)(UploadForm);</span><br><span class="line"></span><br><span class="line">export default UploadForm;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h5 id=&quot;文件作为参数上传&quot;&gt;&lt;a href=&quot;#文件作为参数上传&quot; class=&quot;headerlink&quot; title=&quot;文件作为参数上传&quot;&gt;&lt;/a&gt;文件作为参数上传&lt;/h5&gt;&lt;p&gt;文件作为参数上传，需要使用&lt;code&gt;formData&lt;/code&gt;格式。&lt;/p&gt;
&lt;p&gt;本</summary>
      
    
    
    
    
    <category term="React" scheme="https://gitee.com/shimmer612/myBlog/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>表单添加多组规则</title>
    <link href="https://gitee.com/shimmer612/myBlog/2021/07/30/2021-07-30-%E8%A1%A8%E5%8D%95%E6%B7%BB%E5%8A%A0%E5%A4%9A%E7%BB%84%E8%A7%84%E5%88%99/"/>
    <id>https://gitee.com/shimmer612/myBlog/2021/07/30/2021-07-30-%E8%A1%A8%E5%8D%95%E6%B7%BB%E5%8A%A0%E5%A4%9A%E7%BB%84%E8%A7%84%E5%88%99/</id>
    <published>2021-07-29T16:00:00.000Z</published>
    <updated>2022-03-24T08:25:35.162Z</updated>
    
    <content type="html"><![CDATA[<p><strong>起因</strong></p><p>框架 react+ant3（老项目重构很难）</p><p>新版本一个需求原型如下：[<img src="https://z3.ax1x.com/2021/07/30/WX1q58.png" alt="WX1q58.png"></p><p>可以有多个规则，且规则之间时间需要连续。上一个结束时间的第二天要是下一个规则的开始时间。</p><p>如果第一个结束时间是 7 月 30 号,下个月的开始时间要是 7.31 号。依次类推。</p><p>还要可以批量设置。就是一次性设置多个。</p><p>首先肯定想到的是用数组 map,用的 form 表单。就新建一个数组<code>arr=[0]</code>,点击添加按钮的时候就再<code>push</code>一个 0，删除按钮就<code>arr.splice(index,1)</code>,index 是当前元素下标。但是<code>form.item</code>的依赖字段会重复。</p><p>然后只能自己用<code>datePicker、Input</code>还有框架封装好的获取企业 Id 的模糊查询的组件。</p><p>且有规则后再修改可以回显数据。</p><p>如下：</p><p>这是外层的 Modal:</p><p>因为批量多个参数逗号分隔。</p><p>初始化<code>indexOf</code>判断有没有逗号，是单个还是批量，单个的话就获取数据，且把获取到的数据通过 props 传到子组件当中。因为 render 是先 render。所以这里用个 flag。保证获取到的数据可以传到子组件。</p><p>再把需要的一些方法传到子组件当中。</p><p>子组件中，通过<code>onChange</code>获取到值放到一个对象中添加到数组里。</p><p>添加的时候获取到当前的结束时间。通过<code>moment().add(1,&#39;day&#39;)</code>当然这里要判断是不是数组中的第一个</p><p>还有就是对时间的判断。</p><p>因为时间的连续的删除只能删除最后一个。</p><p>基本完成了功能，但是感觉很冗余，还要修改，一些细节还要完善。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br></pre></td><td class="code"><pre><span class="line">import React,&#123;Component&#125; from &#39;react&#39;</span><br><span class="line">import &#123;  Form, Button, Input, message &#125; from &quot;antd&quot;</span><br><span class="line">import fetchHandler from &#39;@&#x2F;fetch&#x2F;fetchHandler&#39;</span><br><span class="line">import TrusteeshipForm from &#39;.&#x2F;TrusteeshipForm&#39;;</span><br><span class="line">import moment from &#39;moment&#39;;</span><br><span class="line">import &#123;settlementSetting,getSettlementSetting&#125; from &#39;@&#x2F;fetch&#x2F;fetchApi&#39;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class Trusteeship extends Component &#123;</span><br><span class="line">  constructor(props) &#123;</span><br><span class="line">      super(props)</span><br><span class="line">      this.props &#x3D; props</span><br><span class="line">      this.state &#x3D; &#123;</span><br><span class="line">          domArr : [],</span><br><span class="line">          stubId:this.props.stubId,</span><br><span class="line">          info:[],</span><br><span class="line">          flag:true</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  componentWillMount() &#123;</span><br><span class="line">      this.getInfo()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> async getInfo () &#123;</span><br><span class="line">    if(this.props.stubId.indexOf(&#39;,&#39;)&gt;0) &#123;</span><br><span class="line">        return</span><br><span class="line">    &#125;</span><br><span class="line">    this.setState(&#123;</span><br><span class="line">        flag:false</span><br><span class="line">    &#125;)</span><br><span class="line">    await fetchHandler(getSettlementSetting,&#123;</span><br><span class="line">        stubId:this.props.stubId</span><br><span class="line">    &#125;).then( (res)&#x3D;&gt;&#123;</span><br><span class="line">        if(res&amp;&amp;res.code&#x3D;&#x3D;&#x3D;&#39;success&#39;) &#123;</span><br><span class="line">           const domArr &#x3D; []</span><br><span class="line">            res.data.map((item,index)&#x3D;&gt;&#123;</span><br><span class="line">                     let obj &#x3D; &#123;&#125;</span><br><span class="line">                     obj.unitPrice &#x3D; item.unitPrice</span><br><span class="line">                     obj.paymentCompanyId&#x3D;item.paymentCompanyId</span><br><span class="line">                     obj.startDate &#x3D; moment(item.startDate).format(&quot;YYYY-MM-DD&quot;)</span><br><span class="line">                     obj.endDate &#x3D; moment(item.endDate).format(&quot;YYYY-MM-DD&quot;)</span><br><span class="line">                     obj.companyName &#x3D; item.companyName</span><br><span class="line">                     domArr.push(obj)</span><br><span class="line">           &#125;)</span><br><span class="line">             this.setState(&#123;</span><br><span class="line">                 domArr,</span><br><span class="line">                 info:res.data,</span><br><span class="line">                 flag:true</span><br><span class="line">             &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  onAdd &#x3D; (newArr)&#x3D;&gt;&#123;</span><br><span class="line">        this.setState(&#123;</span><br><span class="line">            domArr:newArr</span><br><span class="line">        &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">  onDel &#x3D; ()&#x3D;&gt;&#123;</span><br><span class="line">    const domArr &#x3D; this.state.domArr</span><br><span class="line">    domArr.splice(domArr.length-1,1)</span><br><span class="line">    this.setState(&#123;</span><br><span class="line">        domArr</span><br><span class="line">    &#125;)</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;    判断对象是否存在空值</span><br><span class="line">   getDetaios(arr) &#123;</span><br><span class="line">    for (var i in arr) &#123;</span><br><span class="line">      if (arr[i] &#x3D;&#x3D; null) &#123;</span><br><span class="line">        return true</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return false</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">   onChange &#x3D; (obj)&#x3D;&gt;&#123;</span><br><span class="line">    this.props.form.setFieldsValue(&#123;</span><br><span class="line">        stubPeriodSetting: obj</span><br><span class="line">    &#125;)</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">onFinish &#x3D; (e) &#x3D;&gt; &#123;</span><br><span class="line">    const domArr &#x3D; this.state.domArr</span><br><span class="line">    const isNull &#x3D; this.getDetaios(domArr[domArr.length-1])</span><br><span class="line">    console.log(domArr);</span><br><span class="line">    if(isNull) &#123;</span><br><span class="line">        message.warning(&quot;存在未填项或开始时间在结束时间之前，请检查&quot;)</span><br><span class="line">        return</span><br><span class="line">    &#125;</span><br><span class="line">    e.preventDefault();</span><br><span class="line">    this.props.form.validateFields((err, values) &#x3D;&gt; &#123;</span><br><span class="line">        if (!err) &#123;</span><br><span class="line">            values.stubIds &#x3D; this.state.stubId</span><br><span class="line">            fetchHandler(settlementSetting,values ).then((res) &#x3D;&gt; &#123;</span><br><span class="line">                console.log(res);</span><br><span class="line">                if (res.code &#x3D;&#x3D;&#x3D; &quot;success&quot;) &#123;</span><br><span class="line">                    message.success(&quot;保存成功！&quot;)</span><br><span class="line">                    this.props.fresh()</span><br><span class="line">                    this.props.onCancel()</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line">setFlag  () &#123;</span><br><span class="line">    this.setState(&#123;</span><br><span class="line">        flag:true</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">render () &#123;</span><br><span class="line">    const &#123;getFieldDecorator&#125; &#x3D; this.props.form</span><br><span class="line">    const &#123;domArr,flag,info&#125;  &#x3D; this.state</span><br><span class="line">    console.log(domArr);</span><br><span class="line">    console.log(info);</span><br><span class="line">    return (</span><br><span class="line">        &lt;Form</span><br><span class="line">        name&#x3D;&quot;basic&quot;</span><br><span class="line">        onSubmit&#x3D;&#123;this.onFinish&#125;</span><br><span class="line">    &gt;</span><br><span class="line">           &lt;h5&gt;收费规则&lt;&#x2F;h5&gt;</span><br><span class="line">        &#123;flag? &lt;div&gt;&lt;Form.Item label&#x3D;&quot;合同编号&quot;  style&#x3D;&#123;&#123; display:&quot;flex&quot; &#125;&#125; &gt;</span><br><span class="line">            &#123;getFieldDecorator(&#39;concatNo&#39;, &#123;</span><br><span class="line">                rules: [&#123; required: true, message: &#39;该项是必填项&#39; &#125;],</span><br><span class="line">                initialValue: (info.length!&#x3D;&#x3D;0)?info[0].concatNo:&quot;&quot;</span><br><span class="line">            &#125;)(</span><br><span class="line">                &lt;Input style&#x3D;&#123;&#123; &#39;width&#39;: &#39;300px&#39; &#125;&#125; placeholder&#x3D;&quot;请输入合同编号&quot; &#x2F;&gt;,</span><br><span class="line">            )&#125;</span><br><span class="line">        &lt;&#x2F;Form.Item&gt;</span><br><span class="line"></span><br><span class="line">         &lt;Form.Item&gt;</span><br><span class="line">         &#123;getFieldDecorator(&#39;stubPeriodSetting&#39;, &#123;</span><br><span class="line">                rules: [&#123; required: true, message: &#39;该项是必填项&#39;,type: &#39;array&#39; &#125;],</span><br><span class="line">                initialValue:  &quot;&quot;</span><br><span class="line">            &#125;)(</span><br><span class="line">                &lt;TrusteeshipForm</span><br><span class="line">                    setFlag&#x3D;&#123;()&#x3D;&gt;&#123;this.setFlag&#125;&#125;</span><br><span class="line">                    domArr&#x3D;&#123;domArr&#125;</span><br><span class="line">                    onAdd &#x3D; &#123;this.onAdd&#125;</span><br><span class="line">                    onDel&#x3D;&#123;this.onDel&#125;</span><br><span class="line">                    onChange&#x3D;&#123;this.onChange&#125; &#x2F;&gt;,</span><br><span class="line">            )&#125;</span><br><span class="line">        &lt;&#x2F;Form.Item&gt;&lt;&#x2F;div&gt;:&quot;&quot;&#125;</span><br><span class="line">            &lt;Form.Item style&#x3D;&#123;&#123;display: &quot;flex&quot;,justifyContent:&quot;center&quot;&#125;&#125;&gt;</span><br><span class="line">            &lt;Button type&#x3D;&quot;dashed&quot; htmlType&#x3D;&quot;submit&quot;&gt;</span><br><span class="line">                保存</span><br><span class="line">            &lt;&#x2F;Button&gt;</span><br><span class="line">        &lt;&#x2F;Form.Item&gt;</span><br><span class="line">    &lt;&#x2F;Form&gt;</span><br><span class="line">    )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Trusteeship &#x3D; Form.create(&#123;&#125;)(Trusteeship)</span><br><span class="line"></span><br><span class="line">export default Trusteeship</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 引入react</span><br><span class="line">import React, &#123;</span><br><span class="line">    PureComponent</span><br><span class="line">&#125; from &#39;react&#39;;</span><br><span class="line">import &#123; Form, Button, Input, message,DatePicker &#125; from &quot;antd&quot;</span><br><span class="line">import fetchHandler from &#39;@&#x2F;fetch&#x2F;fetchHandler&#39;</span><br><span class="line">import &#123;companyList &#125; from &#39;@&#x2F;fetch&#x2F;fetchApi&#39;</span><br><span class="line">import AutoSearch from &#39;@&#x2F;components&#x2F;display&#x2F;input&#x2F;AutoSearch&#39;;</span><br><span class="line">import moment from &#39;moment&#39;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class TrusteeshipForm extends PureComponent &#123;</span><br><span class="line">    constructor(props) &#123;</span><br><span class="line">        super(props);</span><br><span class="line">        this.props &#x3D; props</span><br><span class="line">        this.state &#x3D; &#123;</span><br><span class="line">            domArr :this.props.domArr</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">   style &#x3D; &#123;</span><br><span class="line">    display: &#39;flex&#39;,</span><br><span class="line">    alignItems:&quot;center&quot;,</span><br><span class="line">    marginBottom:&quot;20px&quot;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;    判断对象是否存在空值</span><br><span class="line">   getDetaios(arr) &#123;</span><br><span class="line">    for (var i in arr) &#123;</span><br><span class="line">      if (arr[i] &#x3D;&#x3D; null) &#123;</span><br><span class="line">        return true</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return false</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">componentDidMount () &#123;</span><br><span class="line">    this.props.onChange(this.state.domArr)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   onAdd &#x3D; ()&#x3D;&gt;&#123;</span><br><span class="line">       const &#123;domArr&#125; &#x3D; this.state</span><br><span class="line">       this.props.setFlag()</span><br><span class="line">       if(domArr.length&gt;&#x3D;10) &#123;</span><br><span class="line">        message.warning(&quot;最多添加10条！&quot;)</span><br><span class="line">        return</span><br><span class="line">       &#125;</span><br><span class="line">       if(this.getDetaios(domArr[domArr.length-1])) &#123;</span><br><span class="line">           message.warning(&quot;存在未填项或数据不正确，请检查！&quot;)</span><br><span class="line">           return</span><br><span class="line">       &#125;</span><br><span class="line">       let nextStartDate &#x3D; moment(new Date()).format(&quot;YYYY-MM-DD&quot;)</span><br><span class="line">       let nextEndDate &#x3D; moment(new Date()).add(7,&#39;day&#39;).format(&quot;YYYY-MM-DD&quot;)</span><br><span class="line">       if(domArr.length&gt;0) &#123;</span><br><span class="line">         nextStartDate &#x3D; moment(domArr[domArr.length-1].endDate).add(1,&#39;day&#39;).format(&quot;YYYY-MM-DD&quot;)</span><br><span class="line">         nextEndDate &#x3D; moment(nextStartDate).add(7,&#39;day&#39;).format(&quot;YYYY-MM-DD&quot;)</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       const  obj &#x3D;&#123;</span><br><span class="line">        unitPrice:null,</span><br><span class="line">        paymentCompanyId:null,</span><br><span class="line">        startDate:nextStartDate,</span><br><span class="line">        endDate: nextEndDate,</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">       domArr.push(obj)</span><br><span class="line">           this.setState(&#123;</span><br><span class="line">               domArr,</span><br><span class="line">           &#125;,()&#x3D;&gt;&#123;</span><br><span class="line">               this.props.onAdd(domArr)</span><br><span class="line">           &#125;</span><br><span class="line">           )</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   startChange (startDate,index) &#123;</span><br><span class="line">    const domArr &#x3D; this.state.domArr</span><br><span class="line">    const time &#x3D; moment(startDate).diff(moment(domArr[index].endDate))</span><br><span class="line">    if(time&gt;0) &#123;</span><br><span class="line">        message.warning(&quot;开始时间必须在结束时间之前！&quot;)</span><br><span class="line">        return</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    domArr[index].startDate &#x3D; startDate</span><br><span class="line">       this.setState(&#123;</span><br><span class="line">        domArr</span><br><span class="line">       &#125;,()&#x3D;&gt;&#123;</span><br><span class="line">        const domArr &#x3D; this.state.domArr</span><br><span class="line">           this.props.onChange(domArr)</span><br><span class="line">           this.props.onAdd(domArr)</span><br><span class="line">       &#125;)</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">   endChange (endDate,index) &#123;</span><br><span class="line">    const domArr &#x3D; this.state.domArr</span><br><span class="line">    let time</span><br><span class="line">    if( domArr[index+1]) &#123;</span><br><span class="line">        time &#x3D; moment(endDate).diff(moment(domArr[index+1].endDate))</span><br><span class="line">    &#125;</span><br><span class="line">    if(time&gt;0||time&#x3D;&#x3D;&#x3D;0) &#123;</span><br><span class="line">       domArr.forEach((item,i)&#x3D;&gt;&#123;</span><br><span class="line">           if(i&gt;index) &#123;</span><br><span class="line">               item.endDate &#x3D; null</span><br><span class="line">               item.startDate &#x3D; null</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    if(domArr[index+1]) &#123;</span><br><span class="line">        domArr[index+1].startDate &#x3D; moment(endDate).add(1,&#39;day&#39;).format(&quot;YYYY-MM-DD&quot;)</span><br><span class="line">    &#125;</span><br><span class="line">     domArr[index].endDate &#x3D; endDate</span><br><span class="line">       this.setState(&#123;</span><br><span class="line">        domArr</span><br><span class="line">       &#125;,()&#x3D;&gt;&#123;</span><br><span class="line">        const domArr &#x3D; this.state.domArr</span><br><span class="line">           this.props.onChange(domArr)</span><br><span class="line">           this.props.onAdd(domArr)</span><br><span class="line">       &#125;)</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   feeChange (fee,index) &#123;</span><br><span class="line">    const domArr &#x3D; this.state.domArr</span><br><span class="line">    domArr[index].unitPrice &#x3D; fee</span><br><span class="line">       this.setState(&#123;</span><br><span class="line">        domArr</span><br><span class="line">       &#125;,()&#x3D;&gt;&#123;</span><br><span class="line">        const domArr &#x3D; this.state.domArr</span><br><span class="line">           this.props.onChange(domArr)</span><br><span class="line">           this.props.onAdd(domArr)</span><br><span class="line">       &#125;)</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   companyChange  (e,index) &#123;</span><br><span class="line">    const domArr &#x3D; this.state.domArr</span><br><span class="line">    domArr[index].paymentCompanyId &#x3D; e</span><br><span class="line">       this.setState(&#123;</span><br><span class="line">        domArr</span><br><span class="line">       &#125;,()&#x3D;&gt;&#123;</span><br><span class="line">        const domArr &#x3D; this.state.domArr</span><br><span class="line">           this.props.onChange(domArr)</span><br><span class="line">           this.props.onAdd(domArr)</span><br><span class="line">       &#125;)</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    render() &#123;</span><br><span class="line">        const &#123;domArr&#125; &#x3D; this.state</span><br><span class="line">        return &lt;div style&#x3D;&#123;&#123;width:&quot;552px&quot;&#125;&#125;&gt;</span><br><span class="line">           &#123;domArr&amp;&amp;domArr.map((item,index)&#x3D;&gt;&#123;</span><br><span class="line">               return &lt;div key&#x3D;&#123;index&#125;&gt;</span><br><span class="line">               &lt;div style&#x3D;&#123;this.style&#125;&gt;</span><br><span class="line">                    &lt;label&gt;&lt;span style&#x3D;&#123;&#123;color:&quot;red&quot;&#125;&#125;&gt;*&lt;&#x2F;span&gt; 时间周期：&lt;&#x2F;label&gt;</span><br><span class="line">                     &lt;DatePicker</span><br><span class="line">                        placeholder&#x3D;&quot;开始时间&quot;</span><br><span class="line">                        disabled&#x3D;&#123;index!&#x3D;&#x3D;0&#125;</span><br><span class="line">                        value &#x3D; &#123;moment(item.startDate,&quot;YYYY-MM-DD&quot;)&#125;</span><br><span class="line">                        onChange&#x3D;&#123;(e,date)&#x3D;&gt;&#123;</span><br><span class="line">                        this.startChange(date,index)</span><br><span class="line">                    &#125;&#125;&#x2F;&gt;</span><br><span class="line">                     &lt;span&gt;—&lt;&#x2F;span&gt;</span><br><span class="line">                    &lt;DatePicker</span><br><span class="line">                    placeholder&#x3D;&quot;结束时间&quot;</span><br><span class="line">                    defaultValue&#x3D;&#123;moment(item.endDate,&quot;YYYY-MM-DD&quot;)&#125;</span><br><span class="line">                    disabledDate&#x3D;&#123;(current)&#x3D;&gt; &#123;</span><br><span class="line">                         return current &amp;&amp; current &lt;moment(item.startDate)</span><br><span class="line">                       &#125;&#125;</span><br><span class="line">                    onChange&#x3D;&#123;(e,date)&#x3D;&gt;&#123;</span><br><span class="line">                        this.endChange(date,index)</span><br><span class="line">                    &#125;&#125; &#x2F;&gt;</span><br><span class="line">               &lt;&#x2F;div&gt;</span><br><span class="line">               &lt;div style&#x3D;&#123;this.style&#125;&gt;</span><br><span class="line">                      &lt;label&gt;&lt;span style&#x3D;&#123;&#123;color:&quot;red&quot;&#125;&#125;&gt;*&lt;&#x2F;span&gt; 托管费用：&lt;&#x2F;label&gt;</span><br><span class="line">                      &lt;Input</span><br><span class="line">                       defaultValue&#x3D;&#123;item.unitPrice&#125;</span><br><span class="line">                       type&#x3D;&quot;number&quot;</span><br><span class="line">                       style&#x3D;&#123;&#123; &#39;width&#39;: &#39;300px&#39; &#125;&#125;</span><br><span class="line">                       onChange&#x3D;&#123;(e)&#x3D;&gt;&#123;</span><br><span class="line">                        this.feeChange(e.target.value,index)</span><br><span class="line">                       &#125;&#125;</span><br><span class="line">                       placeholder&#x3D;&quot;请输入托管费用&quot; addonAfter&#x3D;&quot;元&#x2F;年&quot; &#x2F;&gt;</span><br><span class="line">               &lt;&#x2F;div&gt;</span><br><span class="line">               &lt;div style&#x3D;&#123;this.style&#125;&gt;</span><br><span class="line">                  &lt;label&gt;&lt;span style&#x3D;&#123;&#123;color:&quot;red&quot;&#125;&#125;&gt;*&lt;&#x2F;span&gt; 承担企业：&lt;&#x2F;label&gt;</span><br><span class="line">               &lt;AutoSearch</span><br><span class="line">                  key&#x3D;&#123;item.companyName||&#39;add&#39;&#125;</span><br><span class="line">                  placeholder&#x3D;&#39;请输入商户名称模糊搜索&#39;</span><br><span class="line">                  config&#x3D;&#123;&#123;</span><br><span class="line">                    allowClear: true,&#x2F;&#x2F;是否允许清除,</span><br><span class="line">                    showParam: &#39;companyName&#39;, &#x2F;&#x2F; 展示的条目参数</span><br><span class="line">                    choseParam: &#39;companyId&#39;, &#x2F;&#x2F; 选中的参数</span><br><span class="line">                    sourceApi: companyList, &#x2F;&#x2F; 选项接口</span><br><span class="line">                    initialValue: item.companyName,</span><br><span class="line">                    fetchParams:&#123;</span><br><span class="line">                      status:1</span><br><span class="line">                    &#125;</span><br><span class="line">                  &#125;&#125;</span><br><span class="line">                  module&#x3D;&#39;company&#39;</span><br><span class="line">                  setValue&#x3D;&#123;(e) &#x3D;&gt; &#123;</span><br><span class="line">                    this.companyChange(e,index)</span><br><span class="line">                  &#125;&#125;</span><br><span class="line">                &#x2F;&gt;</span><br><span class="line">                 &lt;&#x2F;div&gt;</span><br><span class="line">                 &lt;hr&#x2F;&gt;</span><br><span class="line">               &lt;&#x2F;div&gt;</span><br><span class="line">               &#125;) &#125;</span><br><span class="line">                  &lt;div style&#x3D;&#123;&#123;display: &quot;flex&quot;,justifyContent:&quot;center&quot;&#125;&#125;&gt;</span><br><span class="line">                  &lt;Button  type&#x3D;&quot;primary&quot;  onClick&#x3D;&#123;()&#x3D;&gt;&#123;</span><br><span class="line">                       this.onAdd()</span><br><span class="line">                   &#125;&#125;&gt; 添加规则&lt;&#x2F;Button&gt;</span><br><span class="line">                   &#123;domArr&amp;&amp;domArr.length!&#x3D;&#x3D;0? &lt;Button style&#x3D;&#123;&#123;marginLeft:&quot;20px&quot;&#125;&#125; type&#x3D;&quot;primary&quot; onClick&#x3D;&#123;()&#x3D;&gt;&#123;</span><br><span class="line">                       this.props.onDel()</span><br><span class="line">                  &#125;&#125;&gt;删除&lt;&#x2F;Button&gt;:&quot;&quot;&#125;</span><br><span class="line">                 &lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">              &lt;&#x2F;div&gt;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">TrusteeshipForm &#x3D; Form.create(&#123;&#125;)(TrusteeshipForm)</span><br><span class="line"></span><br><span class="line">export default TrusteeshipForm;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;起因&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;框架 react+ant3（老项目重构很难）&lt;/p&gt;
&lt;p&gt;新版本一个需求原型如下：[&lt;img src=&quot;https://z3.ax1x.com/2021/07/30/WX1q58.png&quot; alt=&quot;WX1q58.pn</summary>
      
    
    
    
    
    <category term="antd" scheme="https://gitee.com/shimmer612/myBlog/tags/antd/"/>
    
  </entry>
  
  <entry>
    <title>星球空间站项目总结</title>
    <link href="https://gitee.com/shimmer612/myBlog/2021/06/30/2021-06-30-%E6%98%9F%E7%90%83%E7%A9%BA%E9%97%B4%E7%AB%99%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/"/>
    <id>https://gitee.com/shimmer612/myBlog/2021/06/30/2021-06-30-%E6%98%9F%E7%90%83%E7%A9%BA%E9%97%B4%E7%AB%99%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/</id>
    <published>2021-06-29T16:00:00.000Z</published>
    <updated>2021-06-30T14:10:40.226Z</updated>
    
    <content type="html"><![CDATA[<h5 id="“星球空间站”项目总结"><a href="#“星球空间站”项目总结" class="headerlink" title="“星球空间站”项目总结"></a>“星球空间站”项目总结</h5><p>星球空间站是OMS项目的3.0版本，入职以来，都是在老项目中写页面，上一个项目组中的新项目《重卡换电》场站管理系统，做到80%,就被调走了，不过也只是写写页面，项目都是健哥搭的<code>umijs</code></p><p>星球空间站算是第一个全部由我开发的项目。虽然只算是OMS的一个导航页面。不过对于我来说，也是很好的锻炼了。</p><p>今天把遇到的一些知识点记录一下。</p><p>最终图差不多如下。</p><p><img src="https://z3.ax1x.com/2021/06/30/RDFBzd.png" alt="RDFBzd.png"></p><p><strong>如下</strong></p><p><strong>1、</strong>首页有三个echarts图表，一个曲线折线图。两个环形图。</p><p>​     这个比较简单一些，因为之前有recat引用echarts的经验，所以官网找到相关的示例。</p><p>只是改样式比较麻烦。只能慢慢找配置项。</p><p>这里记录一下用到的配置项，里面详细的配置就不记录了。</p><p><strong>配置项的地址如下</strong></p><p><code>https://echarts.apache.org/zh/option.html</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">legend 图例。</span><br><span class="line">dataZoom 用于区域缩放，就是图表可以放大缩小，左右滑动</span><br><span class="line">tooltip提示框。 鼠标移到表格上可以提示数据</span><br><span class="line">series系列列表。每个系列通过 type 决定自己的图表类型，放数据以及数据怎么展示的地方</span><br><span class="line">xAxis 直角坐标轴  x轴</span><br><span class="line">yAxis 直角坐标轴  y轴  </span><br><span class="line">等等</span><br></pre></td></tr></table></figure><p>然后还有的就是。echarts的加载、数据动态绑定等，大小随窗口变化等要注意的地方</p><hr><p><strong>2、</strong>下面导航按钮图标使用iconfont</p><p>之前使用iconfont都是下载的png图片，这里要用代码引入</p><p>一开始使用的css引入发现图标没有颜色都是黑的，问了一下，要用symbol 方式引入，就是js方式：</p><p>1：我是先新建了一个iconfont的js文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"> <span class="keyword">import</span> &#123; Icon &#125; <span class="keyword">from</span> <span class="string">&#x27;antd&#x27;</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">const</span> IconFont = Icon.createFromIconfontCN(&#123;</span><br><span class="line"> </span><br><span class="line">  scriptUrl: <span class="string">&#x27;symbol方式在线地址&#x27;</span></span><br><span class="line"> </span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> IconFont;</span><br></pre></td></tr></table></figure><p>2：使用，type就是图标的名</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">IconFont</span> <span class="attr">type</span>=<span class="string">&quot;icon-ali-pay&quot;</span> <span class="attr">style</span>=</span></span><span class="template-variable">&#123;&#123; <span class="name">fontSize:</span> <span class="string">&#x27;16px&#x27;</span>, color: <span class="string">&#x27;lightblue&#x27;</span> &#125;&#125;</span><span class="xml"><span class="tag"> /&gt;</span></span></span><br></pre></td></tr></table></figure><p><strong>3、</strong>日历组件</p><p>最烦的就是这个花了我大量的时间，本来想使用ant的现成组件，可是不会复写样式，而且也麻烦，心一横手写吧。</p><p>因为之前在小程序中写过，获取到当月的天数，然后通过第一天是星期几，来判断上月显示几天，下月显示几天。我这里第一天是兴趣一，要是上个月最后一天是星期天就不用显示了。是星期一的话就显示最后一天，星期二最后2天以此类推。下个月就是下个月第一天是星期一就不用显示。星期天就显示下个月第一天。星期二就显示下个月一二两天，依次类推。</p><p>然后三个数组拼成一个数组用<code>arr.concat()</code>连接数组。</p><p>又因为日期要可以点击，样式产生变化，而且可以获取到当前日期，</p><p>日期数组中，每一项的结构如下,</p><p>flag是判断当前哪个日期被选中了，初始化当天的flag为true</p><p>isActivity是判断当前日前有没有活动</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[&#123;</span><br><span class="line">year:<span class="number">2021</span>,</span><br><span class="line">month：<span class="number">6</span>,</span><br><span class="line">day:<span class="number">30</span>,</span><br><span class="line">flag:<span class="literal">true</span>,</span><br><span class="line">isActivity:<span class="literal">true</span></span><br><span class="line">&#125;]</span><br></pre></td></tr></table></figure><p>然后就是点击上月日期和下月日期切换月份。</p><p>判断当前点击的日期月份。</p><p>select框也是和数据绑定，</p><p>需要考虑的就是<code>setState()</code>是异步的，需要在<code>setState()</code>的回调中，或者<code>setTimeout()</code>调用相关的方法,以及方法的传参等等。</p><p><strong>4、</strong>主要的就是这些，还有的就是路由传值、跳转，因为oms没有路由通过tabs页签切换页面的，吧tab的</p><p>key传过去等</p><p>父组件中跳转传参</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">this</span>.props.history.push(&#123;</span><br><span class="line">    pathname:<span class="string">&quot;/index&quot;</span>,</span><br><span class="line">    name:<span class="string">&quot;xxx&quot;</span>,<span class="comment">//参数</span></span><br><span class="line">    age:<span class="string">&quot;18&quot;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>子组件中：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//父组件通过props传给子组件</span></span><br><span class="line">&lt;Child history=&#123;<span class="built_in">this</span>.props.history&#125;/&gt;</span><br><span class="line">   </span><br><span class="line">    <span class="built_in">this</span>.props.history.push(&#123;</span><br><span class="line">    pathname:<span class="string">&quot;/index&quot;</span>,</span><br><span class="line">    name:<span class="string">&quot;xxx&quot;</span>,<span class="comment">//参数</span></span><br><span class="line">    age:<span class="string">&quot;18&quot;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>接收在location：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">this</span>.props.history.location.name</span><br><span class="line"><span class="built_in">this</span>.props.history.location.age</span><br></pre></td></tr></table></figure><p>还有就是moment.js计算两天某天相差多少天,倒计时</p><p><code>moment(endTime).diff(moment(startTime),&#39;day&#39;)</code> 天</p><p><code>moment(endTime).diff(moment(startTime),&#39;month&#39;)</code>月</p><p><code>moment(endTime).diff(moment(startTime),&#39;year&#39;)</code> 年</p><p>还有就是一些布局方面注意的东西。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h5 id=&quot;“星球空间站”项目总结&quot;&gt;&lt;a href=&quot;#“星球空间站”项目总结&quot; class=&quot;headerlink&quot; title=&quot;“星球空间站”项目总结&quot;&gt;&lt;/a&gt;“星球空间站”项目总结&lt;/h5&gt;&lt;p&gt;星球空间站是OMS项目的3.0版本，入职以来，都是在老项目中写页面，</summary>
      
    
    
    
    
    <category term="react" scheme="https://gitee.com/shimmer612/myBlog/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>菊次郎的夏天观后感</title>
    <link href="https://gitee.com/shimmer612/myBlog/2021/06/12/2021-06-12-%E8%8F%8A%E6%AC%A1%E9%83%8E%E7%9A%84%E5%A4%8F%E5%A4%A9%E8%A7%82%E5%90%8E%E6%84%9F/"/>
    <id>https://gitee.com/shimmer612/myBlog/2021/06/12/2021-06-12-%E8%8F%8A%E6%AC%A1%E9%83%8E%E7%9A%84%E5%A4%8F%E5%A4%A9%E8%A7%82%E5%90%8E%E6%84%9F/</id>
    <published>2021-06-11T16:00:00.000Z</published>
    <updated>2021-06-12T09:56:33.113Z</updated>
    
    <content type="html"><![CDATA[<h5 id="《菊次郎的夏天》观后感"><a href="#《菊次郎的夏天》观后感" class="headerlink" title="《菊次郎的夏天》观后感"></a>《菊次郎的夏天》观后感</h5><h6 id="1、"><a href="#1、" class="headerlink" title="1、"></a>1、</h6><p>《菊次郎的夏天》这部电影评分很高</p><p>久石让给电影配乐</p><p>就算你不知道这部电影</p><p>也应该听过</p><p>让人很舒服的曲子</p><p>剧中大叔菊次郎帮正太找妈妈</p><p>结果正太的妈妈有了新的家庭</p><p>”地方对了，人不对“</p><p>欢笑中见温情</p><p>剧中他们遇到的人都很温柔</p><p>小情侣、摩托二人组、吟游诗人</p><p>其实这个电影就是说大叔菊次郎小时候的故事</p><p>熟悉的音乐开始</p><p>熟悉的音乐结束</p><p>只是片尾的音乐多了一丝轻快与愉悦</p><p>温馨的音乐，</p><p>像夏天傍晚微凉的风迎面吹来，看着大海</p><p>这样的音乐</p><p>却不经意就让人湿了眼眶</p><h6 id="2、"><a href="#2、" class="headerlink" title="2、"></a>2、</h6><p>其实很怀念剧中的夏天</p><p>谁的童年不曾有过那样的一个类似的暑假呢</p><p>只是现在就算回到了童年的场景</p><p>也不有当时的人了</p><p>那时的景那时的人</p><p>停留在那时空了</p><h6 id="3、"><a href="#3、" class="headerlink" title="3、"></a>3、</h6><p>最近很闲</p><p>有个十天左右的时间</p><p>不用上班</p><p>很闲</p><p>九十点就睡觉，五六点就起床</p><p>睡得早、起的早</p><p>像个老年人</p><p>想想人生的前几个阶段</p><p>我好像不是一个善于维护关系的人</p><p>每一个阶段看起来都和身边的人玩的很好</p><p>当那个阶段结束</p><p>就从来不联系了</p><p>仿佛这个人没有在我的生命中出现过一样</p><p>我总以为</p><p>该在的人，总会一直在那的</p><p>无需联系</p><p>需要联系我也不知道联系什么</p><p>我本是一个无趣的人</p><p>生活中见不起什么波澜</p><p>也没有什么分享欲</p><p>按理说我应该很合适一个人的</p><p>但是我有希望时不时能有个人陪我一起去干点什么</p><p>其实每个人身边都应该有一两个好朋友的</p><p>可我没有</p><p>按理说我其实也不差</p><p>做事情从来不会想太多</p><p>直言直语</p><p>可为什么有人背后说我有心机太重</p><p>很莫名其妙</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h5 id=&quot;《菊次郎的夏天》观后感&quot;&gt;&lt;a href=&quot;#《菊次郎的夏天》观后感&quot; class=&quot;headerlink&quot; title=&quot;《菊次郎的夏天》观后感&quot;&gt;&lt;/a&gt;《菊次郎的夏天》观后感&lt;/h5&gt;&lt;h6 id=&quot;1、&quot;&gt;&lt;a href=&quot;#1、&quot; class=&quot;head</summary>
      
    
    
    
    
    <category term="观后感" scheme="https://gitee.com/shimmer612/myBlog/tags/%E8%A7%82%E5%90%8E%E6%84%9F/"/>
    
  </entry>
  
  <entry>
    <title>杂记07(再见我的学生时代)</title>
    <link href="https://gitee.com/shimmer612/myBlog/2021/06/10/2021-06-10-%E6%9D%82%E8%AE%B007(%E5%86%8D%E8%A7%81%E6%88%91%E7%9A%84%E5%AD%A6%E7%94%9F%E6%97%B6%E4%BB%A3)/"/>
    <id>https://gitee.com/shimmer612/myBlog/2021/06/10/2021-06-10-%E6%9D%82%E8%AE%B007(%E5%86%8D%E8%A7%81%E6%88%91%E7%9A%84%E5%AD%A6%E7%94%9F%E6%97%B6%E4%BB%A3)/</id>
    <published>2021-06-09T16:00:00.000Z</published>
    <updated>2021-06-10T04:13:52.028Z</updated>
    
    <content type="html"><![CDATA[<h5 id="和学生的身份说再见"><a href="#和学生的身份说再见" class="headerlink" title="和学生的身份说再见"></a>和学生的身份说再见</h5><p>时间真的过的很快</p><p>曾经遥遥无期的毕业</p><p>也来到了眼前</p><p>这次的毕业也真正的要与学生的身份说再见了</p><p>以前总是想尽快的告别学生的身份</p><p>走进社会干一番大事业</p><p>当这个时间点真实的到达眼前</p><p>却想着时间你能不能再慢一点</p><p>小学、初中、高中以往的毕业总是离别中带着一丝轻松愉快的</p><p>考完试，就是漫长的假期，不紧不慢</p><p>有大把的时间能让我们去迎接下一阶段的生活</p><p>大学毕业却是紧迫的</p><p>实习的我，半只脚已经踏入社会</p><p>请假答辩交材料</p><p>聚会、离别</p><p>租房、搬家</p><p>在一天天的忙碌中</p><p>我离开了校园</p><p>自由却又束缚</p><p>不像我想的那样美好</p><p>租房确实给了自己一方天地</p><p>我养了猫</p><p>名字叫   拾月</p><p>是个橘猫妹妹</p><p>这个小家伙</p><p>给我的生活带来了很多的惊喜</p><p>同时也很闹心</p><p>就和养一个孩子一样</p><p>我不是一个很乐观的人</p><p>但总是会在悲观的情绪中给自己一点暗示</p><p>会好起来的</p><p>最后</p><p>再见我的学生时代</p><p>（睡觉的拾月）</p><p><img src="https://z3.ax1x.com/2021/06/10/2g75SH.jpg" alt="2g75SH.jpg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h5 id=&quot;和学生的身份说再见&quot;&gt;&lt;a href=&quot;#和学生的身份说再见&quot; class=&quot;headerlink&quot; title=&quot;和学生的身份说再见&quot;&gt;&lt;/a&gt;和学生的身份说再见&lt;/h5&gt;&lt;p&gt;时间真的过的很快&lt;/p&gt;
&lt;p&gt;曾经遥遥无期的毕业&lt;/p&gt;
&lt;p&gt;也来到了眼前&lt;/p</summary>
      
    
    
    
    
    <category term="随感" scheme="https://gitee.com/shimmer612/myBlog/tags/%E9%9A%8F%E6%84%9F/"/>
    
  </entry>
  
  <entry>
    <title>把多层嵌套的一层数据结构转换成原本的多层</title>
    <link href="https://gitee.com/shimmer612/myBlog/2021/04/20/2021-04-20-%E6%8A%8A%E5%A4%9A%E5%B1%82%E5%B5%8C%E5%A5%97%E7%9A%84%E4%B8%80%E5%B1%82%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%BD%AC%E6%8D%A2%E6%88%90%E5%8E%9F%E6%9C%AC%E7%9A%84%E5%A4%9A%E5%B1%82/"/>
    <id>https://gitee.com/shimmer612/myBlog/2021/04/20/2021-04-20-%E6%8A%8A%E5%A4%9A%E5%B1%82%E5%B5%8C%E5%A5%97%E7%9A%84%E4%B8%80%E5%B1%82%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%BD%AC%E6%8D%A2%E6%88%90%E5%8E%9F%E6%9C%AC%E7%9A%84%E5%A4%9A%E5%B1%82/</id>
    <published>2021-04-19T16:00:00.000Z</published>
    <updated>2021-04-21T00:44:36.572Z</updated>
    
    <content type="html"><![CDATA[<h5 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h5><p>一个多层嵌套评论回复的场景，但是孤儿后端，把所有的回复数据，放到一个数组里返回给我，只有一层，我要给数据转换成原先的多层嵌套的模式。</p><p>数据结构如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//commitId是最外层的评论ID</span></span><br><span class="line"><span class="comment">//id是每条回复自己的ID</span></span><br><span class="line"><span class="comment">//replyId是回复父级的Id</span></span><br><span class="line"><span class="comment">//现在要把每个子级回复放到父级回复的child里面</span></span><br><span class="line"><span class="keyword">let</span> data = [</span><br><span class="line">    &#123;</span><br><span class="line">        commentId: <span class="string">&quot;5786ea2a-7921-4d2e-bb1e-fc8ddb69d2b4&quot;</span>,</span><br><span class="line">        id: <span class="string">&quot;da642ba6-52b2-4965-bf39-c21f8f2ceaf0&quot;</span>,</span><br><span class="line">        replyId: <span class="string">&quot;fb0a7604-68cb-45c7-b149-99dceb5a6004&quot;</span>,</span><br><span class="line">        replyMsg: <span class="string">&quot;1-1-1&quot;</span>,</span><br><span class="line">        child: []</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        commentId: <span class="string">&quot;5786ea2a-7921-4d2e-bb1e-fc8ddb69d2b4&quot;</span>,</span><br><span class="line">        id: <span class="string">&quot;e5def846-c747-496b-9ab8-270655bc269b&quot;</span>,</span><br><span class="line">        replyId: <span class="string">&quot;a583dd34-ff71-44dd-9eaa-5b753501b9a6&quot;</span>,</span><br><span class="line">        replyMsg: <span class="string">&quot;2-1&quot;</span>,</span><br><span class="line">        child: []</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        commentId: <span class="string">&quot;5786ea2a-7921-4d2e-bb1e-fc8ddb69d2b4&quot;</span>,</span><br><span class="line">        id: <span class="string">&quot;a583dd34-ff71-44dd-9eaa-5b753501b9a6&quot;</span>,</span><br><span class="line">        replyId: <span class="string">&quot;5786ea2a-7921-4d2e-bb1e-fc8ddb69d2b4&quot;</span>,</span><br><span class="line">        replyMsg: <span class="string">&quot;2&quot;</span>,</span><br><span class="line">        child: []</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        commentId: <span class="string">&quot;5786ea2a-7921-4d2e-bb1e-fc8ddb69d2b4&quot;</span>,</span><br><span class="line">        id: <span class="string">&quot;9de4bb96-16e5-4570-b03f-60ac2beb8965&quot;</span>,</span><br><span class="line">        replyId: <span class="string">&quot;f7788b92-66cf-4463-ac44-5da0fcd95aa0&quot;</span>,</span><br><span class="line">        replyMsg: <span class="string">&quot;1-2&quot;</span>,</span><br><span class="line">        child: []</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        commentId: <span class="string">&quot;5786ea2a-7921-4d2e-bb1e-fc8ddb69d2b4&quot;</span>,</span><br><span class="line">        id: <span class="string">&quot;fb0a7604-68cb-45c7-b149-99dceb5a6004&quot;</span>,</span><br><span class="line">        replyId: <span class="string">&quot;f7788b92-66cf-4463-ac44-5da0fcd95aa0&quot;</span>,</span><br><span class="line">        replyMsg: <span class="string">&quot;1-1&quot;</span>,</span><br><span class="line">        child: []</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        commentId: <span class="string">&quot;5786ea2a-7921-4d2e-bb1e-fc8ddb69d2b4&quot;</span>,</span><br><span class="line">        id: <span class="string">&quot;f7788b92-66cf-4463-ac44-5da0fcd95aa0&quot;</span>,</span><br><span class="line">        replyId: <span class="string">&quot;5786ea2a-7921-4d2e-bb1e-fc8ddb69d2b4&quot;</span>,</span><br><span class="line">        replyMsg: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">        child: []</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>看到这个场景，第一时间想到的就是递归。</p><p>但是逻辑想了很久才想出来。</p><p>其实很简单，想不通，想死了都想不出来。</p><p>想通了就很简单。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dg</span>(<span class="params">id</span>) </span>&#123;</span><br><span class="line">           </span><br><span class="line">    <span class="keyword">let</span> arr = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>;i&lt;data.length;i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(data[i].replyId === id)&#123;</span><br><span class="line">            arr.push(data[i])</span><br><span class="line">            data[i].child = dg(data[i].id)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> arr</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>如下</strong></p><p><img src="https://z3.ax1x.com/2021/04/20/cH8eZq.png" alt="cH8eZq.png"></p><p><strong>tips:今天是她的生日，我什么都没干，太棒了！</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h5 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h5&gt;&lt;p&gt;一个多层嵌套评论回复的场景，但是孤儿后端，把所有的回复数据，放到一个数组里返回给我，只有一层，我要给数据转换成原先的多层嵌套的模式。&lt;/p&gt;</summary>
      
    
    
    
    
    <category term="javascript" scheme="https://gitee.com/shimmer612/myBlog/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>递归实现多层评论</title>
    <link href="https://gitee.com/shimmer612/myBlog/2021/04/19/2021-04-19-%E9%80%92%E5%BD%92%E5%AE%9E%E7%8E%B0%E5%A4%9A%E5%B1%82%E8%AF%84%E8%AE%BA/"/>
    <id>https://gitee.com/shimmer612/myBlog/2021/04/19/2021-04-19-%E9%80%92%E5%BD%92%E5%AE%9E%E7%8E%B0%E5%A4%9A%E5%B1%82%E8%AF%84%E8%AE%BA/</id>
    <published>2021-04-18T16:00:00.000Z</published>
    <updated>2021-04-19T09:12:22.880Z</updated>
    
    <content type="html"><![CDATA[<h5 id="多层评论递归嵌套"><a href="#多层评论递归嵌套" class="headerlink" title="多层评论递归嵌套"></a>多层评论递归嵌套</h5><p>递归函数两部曲 1：找规律 2：找出口</p><p> <strong>数据格式</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> obj = [</span><br><span class="line">    &#123;</span><br><span class="line">        commentId: <span class="string">&quot;6cfc5ff4-2af1-4621-bc52-b3d6ff22973c&quot;</span>,</span><br><span class="line">        commentIdList: <span class="literal">null</span>,</span><br><span class="line">        commentReplyId: <span class="string">&quot;c800325e-e123-4ac3-81cf-a24c8ba54d5f&quot;</span>,</span><br><span class="line">        replyId: <span class="string">&quot;6cfc5ff4-2af1-4621-bc52-b3d6ff22973c&quot;</span>,</span><br><span class="line">        replyImg: <span class="literal">null</span>,</span><br><span class="line">        replyMsg: <span class="string">&quot;哦看看&quot;</span>,</span><br><span class="line">        replyTargetUserId: <span class="literal">null</span>,</span><br><span class="line">        replyTargetUserName: <span class="literal">null</span>,</span><br><span class="line">        replyTime: <span class="string">&quot;2021.04.15 17:02:26&quot;</span>,</span><br><span class="line">        replyUserAvatar: <span class="string">&quot;https://app-cdn.starcharge.com/32360E48-6011-47CA-99BE-171AD0B555AC-iOS.jpg&quot;</span>,</span><br><span class="line">        replyUserId: <span class="string">&quot;6266ff37-29fb-46fe-b8a3-76e1b5da75dc&quot;</span>,</span><br><span class="line">        replyUserName: <span class="string">&quot;03591的昵称真的很长哦看❤️这里&quot;</span>,</span><br><span class="line">        replyUserType: <span class="literal">null</span>,</span><br><span class="line">        childCommentReplyBo: [</span><br><span class="line">            &#123;</span><br><span class="line">                commentId: <span class="string">&quot;6cfc5ff4-2af1-4621-bc52-b3d6ff22973c&quot;</span>,</span><br><span class="line">                commentIdList: <span class="literal">null</span>,</span><br><span class="line">                commentReplyId: <span class="string">&quot;c800325e-e123-4ac3-81cf-a24c8ba54d5f&quot;</span>,</span><br><span class="line">                replyId: <span class="string">&quot;6cfc5ff4-2af1-4621-bc52-b3d6ff22973c&quot;</span>,</span><br><span class="line">                replyImg: <span class="literal">null</span>,</span><br><span class="line">                replyMsg: <span class="string">&quot;哦看看&quot;</span>,</span><br><span class="line">                replyTargetUserId: <span class="literal">null</span>,</span><br><span class="line">                replyTargetUserName: <span class="literal">null</span>,</span><br><span class="line">                replyTime: <span class="string">&quot;2021.04.15 17:02:26&quot;</span>,</span><br><span class="line">                replyUserAvatar: <span class="string">&quot;https://app-cdn.starcharge.com/32360E48-6011-47CA-99BE-171AD0B555AC-iOS.jpg&quot;</span>,</span><br><span class="line">                replyUserId: <span class="string">&quot;6266ff37-29fb-46fe-b8a3-76e1b5da75dc&quot;</span>,</span><br><span class="line">                replyUserName: <span class="string">&quot;03591的昵称真的很长哦看❤️这里&quot;</span>,</span><br><span class="line">                replyUserType: <span class="literal">null</span>,</span><br><span class="line">                childCommentReplyBo: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        commentId: <span class="string">&quot;6cfc5ff4-2af1-4621-bc52-b3d6ff22973c&quot;</span>,</span><br><span class="line">                        commentIdList: <span class="literal">null</span>,</span><br><span class="line">                        commentReplyId: <span class="string">&quot;c800325e-e123-4ac3-81cf-a24c8ba54d5f&quot;</span>,</span><br><span class="line">                        replyId: <span class="string">&quot;6cfc5ff4-2af1-4621-bc52-b3d6ff22973c&quot;</span>,</span><br><span class="line">                        replyImg: <span class="literal">null</span>,</span><br><span class="line">                        replyMsg: <span class="string">&quot;哦看看&quot;</span>,</span><br><span class="line">                        replyTargetUserId: <span class="literal">null</span>,</span><br><span class="line">                        replyTargetUserName: <span class="literal">null</span>,</span><br><span class="line">                        replyTime: <span class="string">&quot;2021.04.15 17:02:26&quot;</span>,</span><br><span class="line">                        replyUserAvatar: <span class="string">&quot;https://app-cdn.starcharge.com/32360E48-6011-47CA-99BE-171AD0B555AC-iOS.jpg&quot;</span>,</span><br><span class="line">                        replyUserId: <span class="string">&quot;6266ff37-29fb-46fe-b8a3-76e1b5da75dc&quot;</span>,</span><br><span class="line">                        replyUserName: <span class="string">&quot;03591的昵称真的很长哦看❤️这里&quot;</span>,</span><br><span class="line">                        replyUserType: <span class="literal">null</span>,</span><br><span class="line">                        childCommentReplyBo: []</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        commentId: <span class="string">&quot;6cfc5ff4-2af1-4621-bc52-b3d6ff22973c&quot;</span>,</span><br><span class="line">                        commentIdList: <span class="literal">null</span>,</span><br><span class="line">                        commentReplyId: <span class="string">&quot;c800325e-e123-4ac3-81cf-a24c8ba54d5f&quot;</span>,</span><br><span class="line">                        replyId: <span class="string">&quot;6cfc5ff4-2af1-4621-bc52-b3d6ff22973c&quot;</span>,</span><br><span class="line">                        replyImg: <span class="literal">null</span>,</span><br><span class="line">                        replyMsg: <span class="string">&quot;哦看看&quot;</span>,</span><br><span class="line">                        replyTargetUserId: <span class="literal">null</span>,</span><br><span class="line">                        replyTargetUserName: <span class="literal">null</span>,</span><br><span class="line">                        replyTime: <span class="string">&quot;2021.04.15 17:02:26&quot;</span>,</span><br><span class="line">                        replyUserAvatar: <span class="string">&quot;https://app-cdn.starcharge.com/32360E48-6011-47CA-99BE-171AD0B555AC-iOS.jpg&quot;</span>,</span><br><span class="line">                        replyUserId: <span class="string">&quot;6266ff37-29fb-46fe-b8a3-76e1b5da75dc&quot;</span>,</span><br><span class="line">                        replyUserName: <span class="string">&quot;03591的昵称真的很长哦看❤️这里&quot;</span>,</span><br><span class="line">                        replyUserType: <span class="literal">null</span>,</span><br><span class="line">                        childCommentReplyBo: [</span><br><span class="line">                            &#123;</span><br><span class="line">                                commentId: <span class="string">&quot;6cfc5ff4-2af1-4621-bc52-b3d6ff22973c&quot;</span>,</span><br><span class="line">                                commentIdList: <span class="literal">null</span>,</span><br><span class="line">                                commentReplyId: <span class="string">&quot;c800325e-e123-4ac3-81cf-a24c8ba54d5f&quot;</span>,</span><br><span class="line">                                replyId: <span class="string">&quot;6cfc5ff4-2af1-4621-bc52-b3d6ff22973c&quot;</span>,</span><br><span class="line">                                replyImg: <span class="literal">null</span>,</span><br><span class="line">                                replyMsg: <span class="string">&quot;哦看看&quot;</span>,</span><br><span class="line">                                replyTargetUserId: <span class="literal">null</span>,</span><br><span class="line">                                replyTargetUserName: <span class="literal">null</span>,</span><br><span class="line">                                replyTime: <span class="string">&quot;2021.04.15 17:02:26&quot;</span>,</span><br><span class="line">                                replyUserAvatar: <span class="string">&quot;https://app-cdn.starcharge.com/32360E48-6011-47CA-99BE-171AD0B555AC-iOS.jpg&quot;</span>,</span><br><span class="line">                                replyUserId: <span class="string">&quot;6266ff37-29fb-46fe-b8a3-76e1b5da75dc&quot;</span>,</span><br><span class="line">                                replyUserName: <span class="string">&quot;03591的昵称真的很长哦看❤️这里&quot;</span>,</span><br><span class="line">                                replyUserType: <span class="literal">null</span>,</span><br><span class="line">                                childCommentReplyBo: []</span><br><span class="line">                            &#125;,</span><br><span class="line">                        ]</span><br><span class="line">                    &#125;</span><br><span class="line">                ]</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//   评论递归</span></span><br><span class="line">  repleyRecursion = <span class="function">(<span class="params">k</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> &#123; replyArr &#125; = <span class="built_in">this</span>.state</span><br><span class="line">      <span class="keyword">if</span> (k.length !== <span class="number">0</span>) &#123;</span><br><span class="line">          k.map(<span class="function">(<span class="params">item, index</span>) =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">              replyArr.push(<span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">width:</span> &quot;<span class="attr">700px</span>&quot;, <span class="attr">display:</span> &quot;<span class="attr">flex</span>&quot;, <span class="attr">justifyContent:</span> &quot;<span class="attr">space-between</span>&quot;, <span class="attr">alignItems:</span> &quot;<span class="attr">center</span>&quot;, <span class="attr">marginBottom:</span> &quot;<span class="attr">10px</span>&quot; &#125;&#125;&gt;</span></span></span><br><span class="line"><span class="xml">                  <span class="tag">&lt;<span class="name">span</span>&gt;</span>用户账号：&#123;item.replyUserName&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">                  <span class="tag">&lt;<span class="name">span</span>&gt;</span>回复时间: &#123;item.replyTime&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">                  <span class="tag">&lt;<span class="name">span</span>&gt;</span>回复内容：&#123;item.replyMsg&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line">                  &lt;div&gt;</span><br><span class="line">                      &lt;Button type=&quot;primary&quot; onClick=&#123;() =&gt; &#123;</span><br><span class="line">                          this.setState(&#123;</span><br><span class="line">                              replyVisible: true,</span><br><span class="line">                              commentId: item.commentReplyId,</span><br><span class="line">                              userId: item.replyUserId</span><br><span class="line">                          &#125;)</span><br><span class="line">                      &#125;&#125;&gt;回复&lt;/Button&gt;</span><br><span class="line">                      &lt;Popconfirm</span><br><span class="line">                          title=&quot;确认删除评论吗？&quot;</span><br><span class="line">                          onConfirm=&#123;() =&gt; &#123;</span><br><span class="line">                              this.deleteReply(item.commentId)</span><br><span class="line">                          &#125;&#125;</span><br><span class="line">                          onCancel=&#123;&quot;&quot;&#125;</span><br><span class="line">                          okText=&quot;确定&quot;</span><br><span class="line">                          cancelText=&quot;取消&quot;</span><br><span class="line">                      &gt;</span><br><span class="line">                          &lt;Button type=&quot;primary&quot;&gt;删除&lt;/Button&gt;</span><br><span class="line">                      &lt;/Popconfirm&gt;</span><br><span class="line"><span class="xml">                  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span>)</span><br><span class="line">              <span class="built_in">this</span>.repleyRecursion(item.childCommentReplyBo)</span><br><span class="line"></span><br><span class="line">          &#125;)</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">return</span> replyArr.map(<span class="function">(<span class="params">item, i</span>) =&gt;</span> &#123;</span><br><span class="line">              <span class="keyword">return</span> item</span><br><span class="line">          &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h5 id=&quot;多层评论递归嵌套&quot;&gt;&lt;a href=&quot;#多层评论递归嵌套&quot; class=&quot;headerlink&quot; title=&quot;多层评论递归嵌套&quot;&gt;&lt;/a&gt;多层评论递归嵌套&lt;/h5&gt;&lt;p&gt;递归函数两部曲 1：找规律 2：找出口&lt;/p&gt;
&lt;p&gt; &lt;strong&gt;数据格式&lt;/stro</summary>
      
    
    
    
    
    <category term="-javascript" scheme="https://gitee.com/shimmer612/myBlog/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>javascript排序算法01</title>
    <link href="https://gitee.com/shimmer612/myBlog/2021/04/15/2021-04-15-javascript%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%9501/"/>
    <id>https://gitee.com/shimmer612/myBlog/2021/04/15/2021-04-15-javascript%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%9501/</id>
    <published>2021-04-14T16:00:00.000Z</published>
    <updated>2021-04-15T09:42:04.768Z</updated>
    
    <content type="html"><![CDATA[<h5 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h5><p>两两对比，如果n项大于n+1项，就交换位置。</p><p><strong>基本的</strong></p><p><code>forEach</code>执行就是所有循环结束，不能<code>break</code>。<code>map</code>同理</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">90</span>, <span class="number">33</span>, <span class="number">23</span>, <span class="number">43</span>, <span class="number">54</span>, <span class="number">123</span>, <span class="number">78</span>, <span class="number">56</span>, <span class="number">76</span>, <span class="number">112</span>]</span><br><span class="line"><span class="comment">// const arr = [1, 2, 3, 4, 5, 6, 7]</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> a = <span class="number">0</span></span><br><span class="line"><span class="comment">//基本</span></span><br><span class="line"> arr.forEach(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">     arr.forEach(<span class="function">(<span class="params">k, i</span>) =&gt;</span> &#123;</span><br><span class="line">         <span class="keyword">const</span> count = arr[i + <span class="number">1</span>]</span><br><span class="line">         <span class="keyword">if</span> (arr[i] &gt; arr[i + <span class="number">1</span>]) &#123;</span><br><span class="line">             arr[i + <span class="number">1</span>] = arr[i]</span><br><span class="line">             arr[i] = count</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;)</span><br><span class="line"> &#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br><span class="line"><span class="built_in">console</span>.log(arr); <span class="comment">//[ 23, 33, 43,  54,  56, 76, 78, 90, 112, 123 ]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>优化版</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 优化</span></span><br><span class="line"><span class="keyword">const</span> arr = [<span class="number">90</span>, <span class="number">33</span>, <span class="number">23</span>, <span class="number">43</span>, <span class="number">54</span>, <span class="number">123</span>, <span class="number">78</span>, <span class="number">56</span>, <span class="number">76</span>, <span class="number">112</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">var</span> flag = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; arr.length - i - <span class="number">1</span>; j++) &#123;</span><br><span class="line">        a++</span><br><span class="line">        <span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>]) &#123;</span><br><span class="line">            <span class="keyword">var</span> temp = arr[j];</span><br><span class="line">            arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">            arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">            flag = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (flag == <span class="literal">false</span>) &#123;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(arr); <span class="comment">//[ 23, 33, 43,  54,  56, 76, 78, 90, 112, 123 ]</span></span><br></pre></td></tr></table></figure><h5 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h5><p>每次排序把最大的或者最小的放到开头或者末尾</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">90</span>, <span class="number">33</span>, <span class="number">23</span>, <span class="number">43</span>, <span class="number">54</span>, <span class="number">123</span>, <span class="number">78</span>, <span class="number">56</span>, <span class="number">76</span>, <span class="number">112</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">selectSort</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> minIndex, temp</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; arr.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        <span class="comment">// 保存当前下标</span></span><br><span class="line">        minIndex = i</span><br><span class="line">        <span class="comment">// 找到最小的数的下标</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> j = i + <span class="number">1</span>; j &lt; arr.length; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[j] &lt; arr[minIndex]) &#123;</span><br><span class="line">                minIndex = j</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 每次找出的最小数和当前的数交换位置</span></span><br><span class="line">        temp = arr[i];</span><br><span class="line">        arr[i] = arr[minIndex];</span><br><span class="line">        arr[minIndex] = temp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> arr</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">selectSort(arr)</span><br><span class="line"><span class="built_in">console</span>.log(arr);<span class="comment">//[ 23, 33, 43,  54,  56, 76, 78, 90, 112, 123 ]</span></span><br></pre></td></tr></table></figure><h5 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h5><p>从第二个数开始，如果当前数大于或者小于前一个数，就交换位置</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> arr = [<span class="number">90</span>, <span class="number">33</span>, <span class="number">23</span>, <span class="number">43</span>, <span class="number">54</span>, <span class="number">123</span>, <span class="number">78</span>, <span class="number">56</span>, <span class="number">76</span>, <span class="number">112</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">insertSort</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> len = arr.length;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; len; i++) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//key为当前数</span></span><br><span class="line">        <span class="keyword">var</span> key = arr[i];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// j为前一个数的下标</span></span><br><span class="line">        <span class="keyword">var</span> j = i - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//如果前一个数大于当前数</span></span><br><span class="line">        <span class="keyword">while</span> (j &gt;= <span class="number">0</span> &amp;&amp; arr[j] &gt; key) &#123;</span><br><span class="line">            <span class="comment">//当前数等于前一个数</span></span><br><span class="line">            arr[j + <span class="number">1</span>] = arr[j];</span><br><span class="line"></span><br><span class="line">            <span class="comment">//j减一</span></span><br><span class="line">            j--;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        <span class="comment">//满足条件的最前面的数等于当前数</span></span><br><span class="line">        arr[j + <span class="number">1</span>] = key;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> arr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">insertSort(arr)</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(arr); <span class="comment">//[ 23, 33, 43,  54,  56, 76, 78, 90, 112, 123 ]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h5 id=&quot;冒泡排序&quot;&gt;&lt;a href=&quot;#冒泡排序&quot; class=&quot;headerlink&quot; title=&quot;冒泡排序&quot;&gt;&lt;/a&gt;冒泡排序&lt;/h5&gt;&lt;p&gt;两两对比，如果n项大于n+1项，就交换位置。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;基本的&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;cod</summary>
      
    
    
    
    
    <category term="算法" scheme="https://gitee.com/shimmer612/myBlog/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="排序" scheme="https://gitee.com/shimmer612/myBlog/tags/%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>聊天框自动定位到最底部</title>
    <link href="https://gitee.com/shimmer612/myBlog/2021/04/12/2021-04-12-%E8%81%8A%E5%A4%A9%E6%A1%86%E8%87%AA%E5%8A%A8%E5%AE%9A%E4%BD%8D%E5%88%B0%E6%9C%80%E5%BA%95%E9%83%A8/"/>
    <id>https://gitee.com/shimmer612/myBlog/2021/04/12/2021-04-12-%E8%81%8A%E5%A4%A9%E6%A1%86%E8%87%AA%E5%8A%A8%E5%AE%9A%E4%BD%8D%E5%88%B0%E6%9C%80%E5%BA%95%E9%83%A8/</id>
    <published>2021-04-11T16:00:00.000Z</published>
    <updated>2021-04-12T08:52:27.818Z</updated>
    
    <content type="html"><![CDATA[<h5 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h5><p>最近通过webSocket实现了客服聊天的功能，但是当消息超出聊天框的时候，消息框并不会自动滚到到最新消息的地方。要手动滚动，很蠢。</p><p>而且一开始的滚动条很丑，顺便美化了一下滚动条。</p><p><strong>vue中写在updated的生命周期里/react写在componentDidUpdate生命周期里</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">updated () &#123;</span><br><span class="line">    <span class="comment">// 聊天定位到底部</span></span><br><span class="line">    <span class="built_in">this</span>.$nextTick(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> msg = <span class="built_in">document</span>.getElementsByClassName(<span class="string">&#x27;chat-info&#x27;</span>) <span class="comment">// 获取对象</span></span><br><span class="line">      msg[<span class="number">0</span>].scrollTop = msg[<span class="number">0</span>].scrollHeight <span class="comment">// 滚动高度</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><p><strong>css</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">::-webkit-scrollbar &#123;</span><br><span class="line">  // display: none;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgb</span>(<span class="number">239</span>, <span class="number">239</span>, <span class="number">239</span>);</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">2px</span>;</span><br><span class="line">&#125;</span><br><span class="line">::-webkit-scrollbar-thumb &#123;</span><br><span class="line">  background: <span class="number">#bfbfbf</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h5 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h5&gt;&lt;p&gt;最近通过webSocket实现了客服聊天的功能，但是当消息超出聊天框的时候，消息框并不会自动滚到到最新消息的地方。要手动滚动，很蠢。&lt;/p&gt;</summary>
      
    
    
    
    
    <category term="javascript" scheme="https://gitee.com/shimmer612/myBlog/tags/javascript/"/>
    
    <category term="css" scheme="https://gitee.com/shimmer612/myBlog/tags/css/"/>
    
  </entry>
  
</feed>
