{"meta":{"title":"Shimmer's Blog","subtitle":"黑暗中寻光的人","description":"","author":"Shimmer","url":"https://gitee.com/shimmer612","root":"/shimmer-blog/"},"pages":[{"title":"tags","date":"2021-02-23T09:07:02.000Z","updated":"2021-02-23T09:08:25.950Z","comments":true,"path":"tags/index.html","permalink":"https://gitee.com/shimmer612/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"davJs学习02","slug":"umi中，davjs学习02","date":"2021-02-23T16:00:00.000Z","updated":"2021-02-24T07:24:18.291Z","comments":true,"path":"2021/02/24/umi中，davjs学习02/","link":"","permalink":"https://gitee.com/shimmer612/2021/02/24/umi%E4%B8%AD%EF%BC%8Cdavjs%E5%AD%A6%E4%B9%A002/","excerpt":"","text":"最近公司新项目用的UmiJs3.x，整个项目的数据，通过内置的Davjs来控制。 昨天自己分析了一下Davjs。但是脑海中的概念还是很模糊。今天再梳理一下。 第一步首先是在Models文件夹下创建一个JS文件 123456789101112131415161718192021222324252627282930313233const GlobalModel = &#123; //model的名称 namespace: &quot;global&quot;, state: &#123; //放数据的地方 user:&#123;&#125; &#125;, effects: &#123; // 异步获取数据，不能直接修改数据，需要通过put调用reducers的方法。 `其中call和普通是dva 提供的effect 函数内部的处理函数 call：执行异步函数， put：发出一个 Action，类似于 dispatch select获取数据，` *getTableData(&#123; payload &#125;, &#123; put, select, call &#125;) &#123; const tableList = yield select((state) =&gt; state.global.tableData); yield put(&#123; type: &quot;setTableParams&quot;, payload, &#125;); &#125;, reducers: &#123; //同步获取数据 setTableParams(state) &#123; return &#123; ...state &#125; &#125; &#125;,&#125;;export default GlobalModel; 第二步对应页面中 12345678910111213141516171819202122232425262728import React from &quot;react&quot;;import &#123; connect &#125; from &quot;umi&quot;;const TableDemo = (props) =&gt; &#123; //能直接获取到users const &#123;dispatch, users&#125; = props dispatch(&#123; //global这个model中，getTableData这个异步操作函数 type: &quot;global/getTableData&quot;, payload: &#123; &#125;, &#125;); return ( &lt;div&gt; &#123;users.name&#125; &lt;/div&gt; )&#125;//把global中state中的数据绑定到页面的props上export default connect((&#123; global &#125;) =&gt; (&#123; users: global.users&#125;))(TableDemo); 还可以调用Service文件夹里的接口，获取数据","categories":[],"tags":[{"name":"-UmiJs -Davjs -React","slug":"UmiJs-Davjs-React","permalink":"https://gitee.com/shimmer612/tags/UmiJs-Davjs-React/"}]},{"title":"关于我","slug":"关于我","date":"2021-02-22T16:00:00.000Z","updated":"2021-02-23T08:49:18.453Z","comments":true,"path":"2021/02/23/关于我/","link":"","permalink":"https://gitee.com/shimmer612/2021/02/23/%E5%85%B3%E4%BA%8E%E6%88%91/","excerpt":"","text":"姓名：张振 年龄：25 现居：江苏-常州 路 很长 顺道寻光","categories":[],"tags":[{"name":"Aboutme","slug":"Aboutme","permalink":"https://gitee.com/shimmer612/tags/Aboutme/"}]},{"title":"Dav结构的分析","slug":"davjs学习","date":"2021-02-22T10:34:00.000Z","updated":"2021-02-23T02:22:05.583Z","comments":true,"path":"2021/02/22/davjs学习/","link":"","permalink":"https://gitee.com/shimmer612/2021/02/22/davjs%E5%AD%A6%E4%B9%A0/","excerpt":"","text":"下面是davjs models的一个基本结构 1234567891011121314151617181920212223242526272829303132333435export default &#123; //dav model的名字namespace: &#x27;example&#x27;,//数据state: &#123;num:1&#125;, //表示当前的example中的state状态，这里可以给初始值，这里num初始为1 //这里是做异步处理的相当于VueX的actioneffects: &#123; //payload是参数 put触发action ，select获取数据， call异步操作 *addByONe(&#123; payload&#125;, &#123; call, put,select &#125;) &#123; //这里使用selectconst num = yield select(state =&gt; state.num) //这里就获取到了当前state中的数据numlet param1; param1 = num + payload; 这里就可以使用num进行操作了yield put(&#123;type: &#x27;save&#x27;,num:param1&#125;);&#125;&#125;, //用来保存更新state值 上面的put方法调用这里的方法,reducers: &#123;save(state, action) &#123; //这里的state是当前总的state，这里的action包含了上面传递的参数和type return &#123; ...state, ...action.num &#125;; //这里用ES6语法来更新当前state中num的值&#125;&#125;, &#125;;","categories":[],"tags":[{"name":"Davjs","slug":"Davjs","permalink":"https://gitee.com/shimmer612/tags/Davjs/"},{"name":"React","slug":"React","permalink":"https://gitee.com/shimmer612/tags/React/"}]},{"title":"新年快乐","slug":"hello-world","date":"2021-02-10T16:00:00.000Z","updated":"2021-02-23T05:25:35.342Z","comments":true,"path":"2021/02/11/hello-world/","link":"","permalink":"https://gitee.com/shimmer612/2021/02/11/hello-world/","excerpt":"","text":"大家新年快乐","categories":[],"tags":[]}],"categories":[],"tags":[{"name":"-UmiJs -Davjs -React","slug":"UmiJs-Davjs-React","permalink":"https://gitee.com/shimmer612/tags/UmiJs-Davjs-React/"},{"name":"Aboutme","slug":"Aboutme","permalink":"https://gitee.com/shimmer612/tags/Aboutme/"},{"name":"Davjs","slug":"Davjs","permalink":"https://gitee.com/shimmer612/tags/Davjs/"},{"name":"React","slug":"React","permalink":"https://gitee.com/shimmer612/tags/React/"}]}